From sblist at jbib.de  Wed Aug  4 04:53:22 2004
From: sblist at jbib.de (Sebastian Bossung)
Date: Wed Aug  4 04:54:52 2004
Subject: [OAI-implementers] Handling digital duplicates of physical content
Message-ID: <200408041053.22450.sblist@jbib.de>

Hi

we have an application that stores metadata for physical documents. In
most cases the documents are also digitized, but the original are not
under our institution's control. I am wondering whether it makes sense
to expose the metadata via OAI-PMH.
The Problem I see is that there is danger of duplicate metadata 
records as other people might have the same idea of creating a 
meta-library and exposing it via OAI-PMH. However, we think that most 
of the content will not be digitized in the near future anywhere 
else.
In this scenario does it make sense to implement OAI-PMH in our 
system? I am especially interested in any pointers to possible 
solutions of the duplicate-metadata-problem.

Thanks

Sebastian
-- 
Sebastian Bossung - sb@jbib.de - http://www.jbib.de/sb

A banker is a fellow who lends you his umbrella when the sun 
is shining and wants it back the minute it begins to rain.


From liu_x at lanl.gov  Wed Aug  4 10:50:44 2004
From: liu_x at lanl.gov (Xiaoming Liu)
Date: Wed Aug  4 10:51:14 2004
Subject: [OAI-implementers] Handling digital duplicates of physical content
In-Reply-To: <200408041053.22450.sblist@jbib.de>
References: <200408041053.22450.sblist@jbib.de>
Message-ID: <Pine.LNX.4.55.0408040841450.19580@localhost.localdomain>

On Wed, 4 Aug 2004, Sebastian Bossung wrote:

> Hi
>
> we have an application that stores metadata for physical documents. In
> most cases the documents are also digitized, but the original are not
> under our institution's control. I am wondering whether it makes sense
> to expose the metadata via OAI-PMH.
> The Problem I see is that there is danger of duplicate metadata
> records as other people might have the same idea of creating a
> meta-library and exposing it via OAI-PMH. However, we think that most


I believe the de-dup has to be done in service provider side. The
situation is similar to the Web, it's up to the search engine to figure
out various mirror sites or duplicate files.

The topic has been studied in web community, some references:

A. Broder, S. Glassman, M. Manasse, and G. Zweig. Syntactic clustering of
the web. In Proc. of the 6th Int'l World Wide Web Conf.(WWW), pages
391-404, 1997. http://decweb.ethz.ch/WWW6/Technical/Paper205/Paper205.html

N. Shivakumar and H. Garcia-Molina. Building a scalable and accurate
copy detection mechanism. In Proceedings of the First ACM International
Conference on Digital Libraries, 1996.
http://citeseer.nj.nec.com/shivakumar95scam.html

regards,
xiaoming


> of the content will not be digitized in the near future anywhere
> else.
> In this scenario does it make sense to implement OAI-PMH in our
> system? I am especially interested in any pointers to possible
> solutions of the duplicate-metadata-problem.
>
> Thanks
>
> Sebastian
> --
> Sebastian Bossung - sb@jbib.de - http://www.jbib.de/sb
>
> A banker is a fellow who lends you his umbrella when the sun
> is shining and wants it back the minute it begins to rain.
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
>
>

From WSimpson at wiley.co.uk  Wed Aug  4 11:31:49 2004
From: WSimpson at wiley.co.uk (WSimpson@wiley.co.uk)
Date: Wed Aug  4 11:33:06 2004
Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
Message-ID: <OF429F3401.56F42B3A-ON80256EE6.00554562-80256EE6.00556AB3@wiley.co.uk>







Hi,

I am generating Dublin Core meta-data for a customer as part of an OAI
static repository. The customer has asked me to put HTML formatting
elements (such as paragraph, subscript, and superscript) and HTML character
entities inside elements of the Dublin Core XML representation. They are
suggesting that I do so by wrapping the HTML in a CDATA section. While this
will validate against the static repository schema, it does not seem to be
in the spirit of Dublin Core. Is such an approach acceptable use of Dublin
Core within an OAI record, or should only plain text be used?

Many thanks,

Will.


From jyoung at oclc.org  Wed Aug  4 12:08:36 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Wed Aug  4 12:08:44 2004
Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF7449@oa3-server.oa.oclc.org>

I'm sure it's a bad idea. 

What are you trying to describe with that markup? If the markup reflects a
meaningful structure, you should consider creating an XML schema to describe
it and provide that content under a separate metadataPrefix.

Worst case, you could provide that content as XHTML under a separate
metadataPrefix (called, say, 'xhtml').

Jeff

> -----Original Message-----
> From: WSimpson@wiley.co.uk [mailto:WSimpson@wiley.co.uk]
> Sent: Wednesday, August 04, 2004 11:32 AM
> To: oai-implementers@openarchives.org
> Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
> 
> 
> 
> 
> 
> 
> 
> Hi,
> 
> I am generating Dublin Core meta-data for a customer as part of an OAI
> static repository. The customer has asked me to put HTML formatting
> elements (such as paragraph, subscript, and superscript) and HTML
> character
> entities inside elements of the Dublin Core XML representation. They are
> suggesting that I do so by wrapping the HTML in a CDATA section. While
> this
> will validate against the static repository schema, it does not seem to be
> in the spirit of Dublin Core. Is such an approach acceptable use of Dublin
> Core within an OAI record, or should only plain text be used?
> 
> Many thanks,
> 
> Will.
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers

From simeon at cs.cornell.edu  Wed Aug  4 13:43:49 2004
From: simeon at cs.cornell.edu (Simeon Warner)
Date: Wed Aug  4 13:44:21 2004
Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE9809DF7449@oa3-server.oa.oclc.org>
References: <E5431CF93E29F9478878F623E5B9CE9809DF7449@oa3-server.oa.oclc.org>
Message-ID: <Pine.LNX.4.58.0408041338330.11932@dhcp103-124.cs.cornell.edu>


I agree that including markup in the simple DC is a bad idea. The DC
usage guide (http://dublincore.org/documents/usageguide/elements.shtml)
puts it quite well:

> "Descriptive information can be copied or automatically extracted from
> the item if there is no abstract or other structured description
> available.  Although the source of the description may be a web page or
> other structured text with presentation tags, it is generally not good
> practice to include HTML or other structural tags within the Description
> element.  Applications vary considerably in their ability to interpret
> such tags, and their inclusion may negatively affect the
> interoperability of the metadata."

As Jeff sugguests, you can still provide richer metadata with a second
metadataPrefix (mantra: "OAI supports multiple parallel metadata
formats"). That way you can express richer metadata for applications that
understand it, without breaking the base-level interoperability provided
by DC.

Cheers,
Simeon


On Wed, 4 Aug 2004, Young,Jeff wrote:
> I'm sure it's a bad idea.
>
> What are you trying to describe with that markup? If the markup reflects a
> meaningful structure, you should consider creating an XML schema to describe
> it and provide that content under a separate metadataPrefix.
>
> Worst case, you could provide that content as XHTML under a separate
> metadataPrefix (called, say, 'xhtml').
>
> Jeff
>
> > -----Original Message-----
> > From: WSimpson@wiley.co.uk [mailto:WSimpson@wiley.co.uk]
> > Sent: Wednesday, August 04, 2004 11:32 AM
> > To: oai-implementers@openarchives.org
> > Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
> >
> > Hi,
> >
> > I am generating Dublin Core meta-data for a customer as part of an OAI
> > static repository. The customer has asked me to put HTML formatting
> > elements (such as paragraph, subscript, and superscript) and HTML
> > character
> > entities inside elements of the Dublin Core XML representation. They are
> > suggesting that I do so by wrapping the HTML in a CDATA section. While
> > this
> > will validate against the static repository schema, it does not seem to be
> > in the spirit of Dublin Core. Is such an approach acceptable use of Dublin
> > Core within an OAI record, or should only plain text be used?
> >
> > Many thanks,
> >
> > Will.

From robert.tansley at hp.com  Mon Aug  9 09:45:15 2004
From: robert.tansley at hp.com (Tansley, Robert)
Date: Mon Aug  9 09:45:25 2004
Subject: [OAI-implementers] Changes in OAI-PMH support in DSpace at MIT
Message-ID: <40700B4C02ABD5119F000090278766440C655340@hplex1.hpl.hp.com>

All,

As mentioned in previous mails, there are a couple of changes to the OAI-PMH data provision service of DSpace at MIT:

- We've changed the identifiers used to conform to the OAI identifier spec

- A couple of changes 'touch' every item in the system.  For example, internally in DSpace authors are stored as qualified DC 'contributor.author'.  When exporting via OAI-PMH, these authors are mapped to the unqualified 'creator' element to fit community practices and expectations.

- Set structure changed to expose collection structure (and not communities, which are like to change over time)

- The old base URL slightly confused people, and also made it difficult to deploy stylesheets and so forth in the OAI-PMH webapp, allowing browser-based 'harvesting'.

So, the base URL of the OAI-PMH data provision service at DSpace at MIT has changed to:

http://dspace.mit.edu/oai/request

Please update your records accordingly.

This is essentially a 'new' repository.  If you've previously been harvesting DSpace, and wish to link records previously harvested to those in the new system, the identifier mapping is pretty simple.  The previous identifier was simply the item's Handle, e.g:

hdl:1721.1/123456

The new identifier contains an OAI identifier prefix, with the same suffix:

oai:dspace.mit.edu:1721.1/123456

Apologies for any inconvenience this may cause, however this seemed the best route forward given the various issues involved.

 Robert Tansley / Digital Media Systems Programme / HP Labs
  http://www.hpl.hp.com/personal/Robert_Tansley/

From WSimpson at wiley.co.uk  Mon Aug  9 10:59:09 2004
From: WSimpson at wiley.co.uk (WSimpson@wiley.co.uk)
Date: Mon Aug  9 11:00:32 2004
Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
Message-ID: <OFC61C66B1.672A3DC9-ON80256EEB.005188EA-80256EEB.00526DCC@wiley.co.uk>








Thank you both Jeff and Simeon for your help.

FYI, Jeff I am trying to put the formatted abstract of an article into the
description field of Dublin Core.

I think an alternative meta-data prefix could be in order, though I am not
sure exactly what this will be.

Will.
|+------------------------+----------------------------------------------|
||   Simeon Warner        |                                              |
||   <simeon@cs.cornell.ed|   ? ? ? ? To: ? ? ? ?WSimpson@wiley.co.uk    |
||   u>                   |                                              |
||                        |   cc: ? ? ? ?oai-implementers@openarchives.or|
||   04/08/2004 18:43     |   g                                          |
||                        |   ? ? ? ? Subject: ? ? ? ?RE:                |
||                        |   [OAI-implementers] HTML in CDATA section in|
||                        |   Dublic Core                                |
|+------------------------+----------------------------------------------|








I agree that including markup in the simple DC is a bad idea. The DC
usage guide (http://dublincore.org/documents/usageguide/elements.shtml)
puts it quite well:

> "Descriptive information can be copied or automatically extracted from
> the item if there is no abstract or other structured description
> available. ?Although the source of the description may be a web page or
> other structured text with presentation tags, it is generally not good
> practice to include HTML or other structural tags within the Description
> element. ?Applications vary considerably in their ability to interpret
> such tags, and their inclusion may negatively affect the
> interoperability of the metadata."

As Jeff sugguests, you can still provide richer metadata with a second
metadataPrefix (mantra: "OAI supports multiple parallel metadata
formats"). That way you can express richer metadata for applications that
understand it, without breaking the base-level interoperability provided
by DC.

Cheers,
Simeon


On Wed, 4 Aug 2004, Young,Jeff wrote:
> I'm sure it's a bad idea.
>
> What are you trying to describe with that markup? If the markup reflects
a
> meaningful structure, you should consider creating an XML schema to
describe
> it and provide that content under a separate metadataPrefix.
>
> Worst case, you could provide that content as XHTML under a separate
> metadataPrefix (called, say, 'xhtml').
>
> Jeff
>
> > -----Original Message-----
> > From: WSimpson@wiley.co.uk [mailto:WSimpson@wiley.co.uk]
> > Sent: Wednesday, August 04, 2004 11:32 AM
> > To: oai-implementers@openarchives.org
> > Subject: [OAI-implementers] HTML in CDATA section in Dublic Core
> >
> > Hi,
> >
> > I am generating Dublin Core meta-data for a customer as part of an OAI
> > static repository. The customer has asked me to put HTML formatting
> > elements (such as paragraph, subscript, and superscript) and HTML
> > character
> > entities inside elements of the Dublin Core XML representation. They
are
> > suggesting that I do so by wrapping the HTML in a CDATA section. While
> > this
> > will validate against the static repository schema, it does not seem to
be
> > in the spirit of Dublin Core. Is such an approach acceptable use of
Dublin
> > Core within an OAI record, or should only plain text be used?
> >
> > Many thanks,
> >
> > Will.




From jyoung at oclc.org  Mon Aug  9 11:02:40 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Mon Aug  9 11:02:52 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74B9@oa3-server.oa.oclc.org>

I'm looking for an XML Schema for Qualified Dublin Core for use in OAI
repositories. I poked around the UIUC OAI Registry, but all I found was a
couple of ad hoc schemas used by repositories that appear to be defunct.
Ideally, though, the existence and use of such a schema should be shared
across a broad community and not ad hoc.

Next, I searched in Google and OAForum but all I found was a reference to a
preliminary effort to establish such a schema
(http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This particular document
discusses a sample application schema for a DCQ container, but the
implication is that the final schema must be decided by the specific
application (e.g OAI?). Apparently, this has never been done.

Can someone provide some guidance for doing this?

Thanks.

Jeff

---
Jeffrey A. Young
Software Architect
Office of Research, Mail Code 710
OCLC Online Computer Library Center, Inc.
6565 Frantz Rd.
Dublin, OH 43017-3395
www.oclc.org
 
Voice: 614-764-4342
Voice: 800-848-5878, ext. 4342
Fax: 614-718-7477
Email: jyoung@oclc.org

From Naomi at cs.cornell.edu  Mon Aug  9 11:16:28 2004
From: Naomi at cs.cornell.edu (Naomi Dushay)
Date: Mon Aug  9 11:17:19 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <EE246BDD7B90354D807602B3A141177804EFBF@EXCHVS2.cs.cornell.edu>

Jeff,

Try:

http://dublincore.org/schemas/xmls/

also nsdl_dc flavored QDC via

http://metamanagement.comm.nsdlib.org/record_examples.html

- Naomi

> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org [mailto:oai-implementers-
> bounces@openarchives.org] On Behalf Of Young,Jeff
> Sent: Monday, August 09, 2004 11:03 AM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Cc: LeVan,Ralph; Hickey,Thom
> Subject: [OAI-implementers] Qualified Dublin Core
> 
> I'm looking for an XML Schema for Qualified Dublin Core for use in OAI
> repositories. I poked around the UIUC OAI Registry, but all I found was a
> couple of ad hoc schemas used by repositories that appear to be defunct.
> Ideally, though, the existence and use of such a schema should be shared
> across a broad community and not ad hoc.
> 
> Next, I searched in Google and OAForum but all I found was a reference to
> a
> preliminary effort to establish such a schema
> (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This particular
> document
> discusses a sample application schema for a DCQ container, but the
> implication is that the final schema must be decided by the specific
> application (e.g OAI?). Apparently, this has never been done.
> 
> Can someone provide some guidance for doing this?
> 
> Thanks.
> 
> Jeff
> 
> ---
> Jeffrey A. Young
> Software Architect
> Office of Research, Mail Code 710
> OCLC Online Computer Library Center, Inc.
> 6565 Frantz Rd.
> Dublin, OH 43017-3395
> www.oclc.org
> 
> Voice: 614-764-4342
> Voice: 800-848-5878, ext. 4342
> Fax: 614-718-7477
> Email: jyoung@oclc.org
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers


From M.Mascord at rl.ac.uk  Mon Aug  9 11:21:00 2004
From: M.Mascord at rl.ac.uk (Mascord, M (Matthew) )
Date: Mon Aug  9 11:21:35 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <350DC7048372D31197F200902773DF4C04B77D25@exchange11.rl.ac.uk>

Hi -

I am the developer of an OAI compatible institutional repository for the UK
research council CCLRC.  The URL is http://epubs.cclrc.ac.uk.  We are
attempting to capture & make publicly accessible any scientific research
that has benefitted from the use of CCLRC's facilities or expertise.  We
recently went live on the OAI repository network:
http://epubs.cclrc.ac.uk/oai?verb=Identify.

We provide metadata in both Simple and Qualified Dublin Core but had the
same problem as you in finding an authoritative XML schema for Qualified
Dublin Core.  In the end we created our own that includes the schema defined
at http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd and
described in the Dublin Core Note at
http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This defines a
container element into which elements from the dcterms and dc namespaces may
be placed.

I'm not sure if this is the best approach so would appreciate any feedback
on this.  Our OAI implementation can be tested at
http://epubs.cclrc.ac.uk/oaitest.

Kind Regards,
Matthew Mascord
e-Library Software Developer, CCLRC, UK


> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org
> [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> Young,Jeff
> Sent: 09 August 2004 16:03
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Cc: LeVan,Ralph; Hickey,Thom
> Subject: [OAI-implementers] Qualified Dublin Core
> 
> 
> I'm looking for an XML Schema for Qualified Dublin Core for use in OAI
> repositories. I poked around the UIUC OAI Registry, but all I 
> found was a
> couple of ad hoc schemas used by repositories that appear to 
> be defunct.
> Ideally, though, the existence and use of such a schema 
> should be shared
> across a broad community and not ad hoc.
> 
> Next, I searched in Google and OAForum but all I found was a 
> reference to a
> preliminary effort to establish such a schema
> (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This 
> particular document
> discusses a sample application schema for a DCQ container, but the
> implication is that the final schema must be decided by the specific
> application (e.g OAI?). Apparently, this has never been done.
> 
> Can someone provide some guidance for doing this?
> 
> Thanks.
> 
> Jeff
> 
> ---
> Jeffrey A. Young
> Software Architect
> Office of Research, Mail Code 710
> OCLC Online Computer Library Center, Inc.
> 6565 Frantz Rd.
> Dublin, OH 43017-3395
> www.oclc.org
>  
> Voice: 614-764-4342
> Voice: 800-848-5878, ext. 4342
> Fax: 614-718-7477
> Email: jyoung@oclc.org
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
> 

From jyoung at oclc.org  Mon Aug  9 11:22:17 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Mon Aug  9 11:22:32 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74BF@oa3-server.oa.oclc.org>

The link to http://dublincore.org/schemas/xmls/ refers to a schema at
http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd. If you
read the annotation in the schema, though, it says this:

"Note that this schema does not define a target namespace. The expectation
is that the qualifieddc element is assigned to a namespace by an application
schema which includes this schema."

So, since this schema isn't associated with a namespace it must not be
appropriate for use by itself, as the note implies. My interpretation,
therefore, is that what I really need is some kind of "application schema"
that uses this one.

Jeff

> -----Original Message-----
> From: Naomi Dushay [mailto:Naomi@cs.cornell.edu]
> Sent: Monday, August 09, 2004 11:16 AM
> To: Young,Jeff; oai-implementers@oaisrv.nsdl.cornell.edu
> Cc: LeVan,Ralph; Hickey,Thom
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> Jeff,
> 
> Try:
> 
> http://dublincore.org/schemas/xmls/
> 
> also nsdl_dc flavored QDC via
> 
> http://metamanagement.comm.nsdlib.org/record_examples.html
> 
> - Naomi
> 
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org [mailto:oai-
> implementers-
> > bounces@openarchives.org] On Behalf Of Young,Jeff
> > Sent: Monday, August 09, 2004 11:03 AM
> > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > Cc: LeVan,Ralph; Hickey,Thom
> > Subject: [OAI-implementers] Qualified Dublin Core
> >
> > I'm looking for an XML Schema for Qualified Dublin Core for use in OAI
> > repositories. I poked around the UIUC OAI Registry, but all I found was
> a
> > couple of ad hoc schemas used by repositories that appear to be defunct.
> > Ideally, though, the existence and use of such a schema should be shared
> > across a broad community and not ad hoc.
> >
> > Next, I searched in Google and OAForum but all I found was a reference
> to
> > a
> > preliminary effort to establish such a schema
> > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This particular
> > document
> > discusses a sample application schema for a DCQ container, but the
> > implication is that the final schema must be decided by the specific
> > application (e.g OAI?). Apparently, this has never been done.
> >
> > Can someone provide some guidance for doing this?
> >
> > Thanks.
> >
> > Jeff
> >
> > ---
> > Jeffrey A. Young
> > Software Architect
> > Office of Research, Mail Code 710
> > OCLC Online Computer Library Center, Inc.
> > 6565 Frantz Rd.
> > Dublin, OH 43017-3395
> > www.oclc.org
> >
> > Voice: 614-764-4342
> > Voice: 800-848-5878, ext. 4342
> > Fax: 614-718-7477
> > Email: jyoung@oclc.org
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers

From jyoung at oclc.org  Mon Aug  9 11:32:41 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Mon Aug  9 11:32:52 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74C0@oa3-server.oa.oclc.org>

Yes, this is the problem. Now I have two to choose from. This one, and the
one created by NSDL. I'm sure there are others out there. For the sake of
interoperability, it seems to me that the OAI community should bless (and
host?) such an "application profile" schema.

Jeff

> -----Original Message-----
> From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> Sent: Monday, August 09, 2004 11:21 AM
> To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> Cc: LeVan,Ralph; Hickey,Thom
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> Hi -
> 
> I am the developer of an OAI compatible institutional repository for the
> UK
> research council CCLRC.  The URL is http://epubs.cclrc.ac.uk.  We are
> attempting to capture & make publicly accessible any scientific research
> that has benefitted from the use of CCLRC's facilities or expertise.  We
> recently went live on the OAI repository network:
> http://epubs.cclrc.ac.uk/oai?verb=Identify.
> 
> We provide metadata in both Simple and Qualified Dublin Core but had the
> same problem as you in finding an authoritative XML schema for Qualified
> Dublin Core.  In the end we created our own that includes the schema
> defined
> at http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd and
> described in the Dublin Core Note at
> http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This defines a
> container element into which elements from the dcterms and dc namespaces
> may
> be placed.
> 
> I'm not sure if this is the best approach so would appreciate any feedback
> on this.  Our OAI implementation can be tested at
> http://epubs.cclrc.ac.uk/oaitest.
> 
> Kind Regards,
> Matthew Mascord
> e-Library Software Developer, CCLRC, UK
> 
> 
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org
> > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > Young,Jeff
> > Sent: 09 August 2004 16:03
> > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > Cc: LeVan,Ralph; Hickey,Thom
> > Subject: [OAI-implementers] Qualified Dublin Core
> >
> >
> > I'm looking for an XML Schema for Qualified Dublin Core for use in OAI
> > repositories. I poked around the UIUC OAI Registry, but all I
> > found was a
> > couple of ad hoc schemas used by repositories that appear to
> > be defunct.
> > Ideally, though, the existence and use of such a schema
> > should be shared
> > across a broad community and not ad hoc.
> >
> > Next, I searched in Google and OAForum but all I found was a
> > reference to a
> > preliminary effort to establish such a schema
> > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This
> > particular document
> > discusses a sample application schema for a DCQ container, but the
> > implication is that the final schema must be decided by the specific
> > application (e.g OAI?). Apparently, this has never been done.
> >
> > Can someone provide some guidance for doing this?
> >
> > Thanks.
> >
> > Jeff
> >
> > ---
> > Jeffrey A. Young
> > Software Architect
> > Office of Research, Mail Code 710
> > OCLC Online Computer Library Center, Inc.
> > 6565 Frantz Rd.
> > Dublin, OH 43017-3395
> > www.oclc.org
> >
> > Voice: 614-764-4342
> > Voice: 800-848-5878, ext. 4342
> > Fax: 614-718-7477
> > Email: jyoung@oclc.org
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >

From khage at umich.edu  Mon Aug  9 11:56:01 2004
From: khage at umich.edu (Kat Hagedorn)
Date: Mon Aug  9 11:55:33 2004
Subject: [OAI-implementers] harvester tools
In-Reply-To: <D794C1D2-DA78-11D8-B0DE-0003934CA344@umich.edu>
References: <D794C1D2-DA78-11D8-B0DE-0003934CA344@umich.edu>
Message-ID: <9CC88590-EA1C-11D8-9B14-0003934CA344@umich.edu>

Thank you to everyone who responded about harvester tools. Each person 
seems to be using a different harvester (!), but the comments have 
given us an idea of where we want to focus our attentions. Two people 
also let me know in person about harvesters they use. Those are listed 
first below.

Thanks again,
- Kat


On Jul 20, 2004, at 2:15 PM, Kat Hagedorn wrote:

> Hello all,
>
> We are investigating switching to a different harvester tool and 
> thought that a good first step would be to poll this list about their 
> use of harvesters.
>
> If you harvest OAI records:
>
> 1. What harvester tool do you use? Version number?
>
> 2. Are you pleased with the tool? What do you like and not like about 
> it?
>
> Please send responses directly to me and I'll summarize for the list. 
> (Anonymously if preferred.)
>
> Thanks,
> - Kat
>
> -------------------
> Kat Hagedorn
> OAIster/Metadata Harvesting Librarian
> DLXS Bibliographic Class Coordinator
> DLXS Text Class Collections Co-coordinator
> Digital Library Production Service
> University of Michigan
>
> http://www.oaister.org/
> http://www.dlxs.org/
> email: khage@umich.edu
> phone: 734-615-7618
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers

-------------------------------------------------------------

Virginia Tech Perl Harvester
http://oai.dlib.vt.edu/odl/software/harvest/

-------------------------------------------------------------

Simeon's Perl Harvester
contact Simeon Warner for more info (simeon@cs.cornell.edu)

-------------------------------------------------------------

???????? I really like the simple perl harvester (MyOAI)
  not sure if there is any more development? on this
  harvester but it is?great to trouble shoot problems
  with your broker/provider and it pretty much harvest
most of the proviser sites but there is no gui frontend
pretty much a unix type of application that you have to
configure files and then run it on the unix shell command
line.
?
It was a big help to us when we were setting seven new
data providers with various poblems and was able to
  turn logging on ands see each http request being sent
  for all of the OAI verbs (ListRecords, ListIdentifeirs...etc)
?
-------------------------------------------------------------

I've written several harvesters now, and I'm not happy with any of 
them. The
problem is that so many repositories have badly encoded characters that 
I
can't rely on DOM or SAX during the harvesting process without having 
them
choke on the bad characters.

Harvesters are trivial to write. Thom Hickey wrote one with a single 
page of
Python code (http://www.oclc.org/research/software/oai/2page.htm) and I
wrote one that is even simpler (albeit a bit longer) that I wrote in 
XSLT
(http://errol.oclc.org/oai:xmlregistry.oclc.org:xoai/xoaiharvester.xsl).

Because they all rely on the data being good, though, they fail way too
often.

My advice is to find an implementation that captures the responses as 
raw
bytes and then greps for the resumptionToken rather than rely on XML 
tools
to parse for it. A page or two of code is all it should take.

-------------------------------------------------------------

I just started using REAP from UIUC. It is Windows based. After using it
only two days it seems quite capable. It may prove to be weak in spots
but those I probably won't be aware of for a few weeks.

-------------------------------------------------------------

We used to use ARC from Old Dominion, but my digital library research 
crew now
just codes up ad hoc harvesters for different applications.  We've 
developed
various code chunks that do various parts of the process.  We've also
experimented with Greenstone's harvester module for smaller 
applications.

-------------------------------------------------------------

I use 'harvester2' from Jeff Young (OCLC) : 
http://www.oclc.org/research/software/oai/harvester2.htm

I like this tool because it is a simple library. I needed this type of 
library for my project.
But there is some problems (bugs) : with the 'retry later' it seems to 
retry indefinitly. With compression, if the Content-Encoding is null 
and the content encoded, it does not detect it.

-------------------------------------------------------------

Internally, in the LANL repository infrastructure, we use OCLC's 
OAIHarvester version 1 for _big time_ harvesting of complex objects 
(not DC records but actual content represented using MPEG-21 DIDL).

We have built the OAI-PMH Federator (see our JCDL paper 
http://lib-www.lanl.gov/~herbertv/papers/jcdl2004-submitted-draft.pdf) 
on the basis of this Harvester.

We love it.  It's faster than OAIHarvester2.  Jeff Young keeps 
supporting it, and actually implemented optimizations as a result of 
our feedback.  On demand.  What more can one ask for!?

-------------------------------------------------------------

I use celestial http://celestial.eprints.org/. last version and I 
update the version when I can.

Yes. [pleased with the tool]

I like the web interface and it is written in perl.

I don't like:
-how it manage the sign '&' [It trasform them in "&amp;"
-I can't harvest a selection of sets. I need to harvest all site.

From p.johnston at ukoln.ac.uk  Mon Aug  9 12:35:47 2004
From: p.johnston at ukoln.ac.uk (Pete Johnston)
Date: Mon Aug  9 12:35:05 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE9809DF74BF@oa3-server.oa.oclc.org>
Message-ID: <000801c47e2e$ecade030$2392268a@ulpcpj>

Jeff said:

> The link to http://dublincore.org/schemas/xmls/ refers to a 
> schema at 
> http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.
> xsd. If you read the annotation in the schema, though, it says this:
> 
> "Note that this schema does not define a target namespace. 
> The expectation is that the qualifieddc element is assigned 
> to a namespace by an application schema which includes this schema."
> 
> So, since this schema isn't associated with a namespace it 
> must not be appropriate for use by itself, as the note 
> implies. My interpretation, therefore, is that what I really 
> need is some kind of "application schema" that uses this one.

Yes, that is/was the intention. There has been at least one request to
DCMI to provide an "application schema" for "qualified DC" and looking
at the implications of that is, ahem, on my to-do list.

In part the reason for adopting the current approach (I think!) was that
when implementers refer to "qualified DC" they rarely meant an
"application profile" that used _only_ that set of elements, element
refinements and encoding schemes provided by DCMI. More often than not
they meant an application profile that used those elements, element
refinements and encoding schemes provided by DCMI (or some subset of
them), plus a few additional element refinements and encoding schemes
specific to their application. So although DCMI could define "qualified
DC" as the former, it might be turn out to be of limited usefulness in
practice.

Even adopting the former definition of "qualified DC", another
consideration is that DCMI regularly adds new terms to the "dcterms"
metadata vocabulary. So unlike the case of "simple DC" (assuming that is
fixed at the 15 elements of the DCMES -  which is another argument, but
let's suppose that's the case!), "qualified DC" is a "moving target".
"Qualified DC" today might permit a new DC element that was not
available last week. 

How should this versioning of the vocabulary be handled in the XML
binding? Should DCMI (or OAI or whoever provides the schemas) expect
that a "qualified DC" application must work on the basis that it must
always expect to encounter new XML elements/complexTypes associated with
the http://purl.org/dc/terms/ namespace, and that documents that were
invalid on Friday afternoon (when they included an XML element
dcterms:widget) become valid on Monday morning (because dcterms:widget
has been added to the schema corresponding to the "dcterms" namespace)? 

Or should implementers be required to update their documents to refer to
a different DCMI-supplied (or OAI-supplied) application schema (e.g. by
using a date-stamped URI) in order to allow the use of new XML elements
in their documents? 

I suspect arguments can be made for either approach, but I'm inclined to
suggest the latter (though I reserve the right to change my mind!) i.e.
I feel uneasy about the (first) scenario where implementers are
validating their XML docs against a schema which is changing without
their knowledge. Anyway, either way, the policy would need to be made
very clear so that users can know what to expect.

The other reason for the current approach is that (to date anyway) DCMI
has regarded its "namespaces" as sets of elements, element refinements,
encoding schemes, and type terms. It hasn't provided URIrefs or
qualified names to identify "application profiles", like "simple DC" and
"qualified DC", so there would probably be some procedural/policy issues
to be addressed there.

Cheers

Pete


From t-cole3 at uiuc.edu  Mon Aug  9 17:41:58 2004
From: t-cole3 at uiuc.edu (Timothy W. Cole)
Date: Mon Aug  9 17:42:01 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE9809DF74C0@oa3-server.oa.oclc.org>
Message-ID: <200408092141.i79LfwU8018443@expredir3.cites.uiuc.edu>

Jeff-

My take is that OAI shouldn't want to get back in business of hosting
schemas or namespaces for metadata formats. We went to some trouble to get
away from that when transitioning from 1.1 to 2.0. A blessed application
namespaces for qualified DC should be left up to the DCMI. 

While DCMI decides how they want to handle things (and I know they won't be
quick), solutions like the one at CCLRC (we've done much the same here for a
couple of projects) and NSDL are fine. Any namespace-aware OAI application
should ignore the locally created namespace and hone in on the dc, dcterms,
and dcmitype namespaces and thereby be able to use those elements without
any problems. If your OAI service provider respects namespaces, it shouldn't
matter what namespace the container element is in -- that's why the XML
Schemas posted on the DCMI Website were done that way. 

Isn't that good enough for harvesting purposes? Are am I missing a subtle
consideration that requires a canonical namespace for the container element?

Tim Cole
University of Illinois at UC 

-----Original Message-----
From: oai-implementers-bounces@openarchives.org
[mailto:oai-implementers-bounces@openarchives.org] On Behalf Of Young,Jeff
Sent: Monday, August 09, 2004 10:33 AM
To: Mascord, M (Matthew) ; Young,Jeff;
oai-implementers@oaisrv.nsdl.cornell.edu
Cc: LeVan,Ralph; Hickey,Thom
Subject: RE: [OAI-implementers] Qualified Dublin Core

Yes, this is the problem. Now I have two to choose from. This one, and the
one created by NSDL. I'm sure there are others out there. For the sake of
interoperability, it seems to me that the OAI community should bless (and
host?) such an "application profile" schema.

Jeff

> -----Original Message-----
> From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> Sent: Monday, August 09, 2004 11:21 AM
> To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> Cc: LeVan,Ralph; Hickey,Thom
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> Hi -
> 
> I am the developer of an OAI compatible institutional repository for 
> the UK research council CCLRC.  The URL is http://epubs.cclrc.ac.uk.  
> We are attempting to capture & make publicly accessible any scientific 
> research that has benefitted from the use of CCLRC's facilities or 
> expertise.  We recently went live on the OAI repository network:
> http://epubs.cclrc.ac.uk/oai?verb=Identify.
> 
> We provide metadata in both Simple and Qualified Dublin Core but had 
> the same problem as you in finding an authoritative XML schema for 
> Qualified Dublin Core.  In the end we created our own that includes 
> the schema defined at 
> http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd and 
> described in the Dublin Core Note at 
> http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This 
> defines a container element into which elements from the dcterms and 
> dc namespaces may be placed.
> 
> I'm not sure if this is the best approach so would appreciate any 
> feedback on this.  Our OAI implementation can be tested at 
> http://epubs.cclrc.ac.uk/oaitest.
> 
> Kind Regards,
> Matthew Mascord
> e-Library Software Developer, CCLRC, UK
> 
> 
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org
> > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of 
> > Young,Jeff
> > Sent: 09 August 2004 16:03
> > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > Cc: LeVan,Ralph; Hickey,Thom
> > Subject: [OAI-implementers] Qualified Dublin Core
> >
> >
> > I'm looking for an XML Schema for Qualified Dublin Core for use in 
> > OAI repositories. I poked around the UIUC OAI Registry, but all I 
> > found was a couple of ad hoc schemas used by repositories that 
> > appear to be defunct.
> > Ideally, though, the existence and use of such a schema should be 
> > shared across a broad community and not ad hoc.
> >
> > Next, I searched in Google and OAForum but all I found was a 
> > reference to a preliminary effort to establish such a schema 
> > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This particular 
> > document discusses a sample application schema for a DCQ container, 
> > but the implication is that the final schema must be decided by the 
> > specific application (e.g OAI?). Apparently, this has never been 
> > done.
> >
> > Can someone provide some guidance for doing this?
> >
> > Thanks.
> >
> > Jeff
> >
> > ---
> > Jeffrey A. Young
> > Software Architect
> > Office of Research, Mail Code 710
> > OCLC Online Computer Library Center, Inc.
> > 6565 Frantz Rd.
> > Dublin, OH 43017-3395
> > www.oclc.org
> >
> > Voice: 614-764-4342
> > Voice: 800-848-5878, ext. 4342
> > Fax: 614-718-7477
> > Email: jyoung@oclc.org
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://openarchives.org/mailman/listinfo/oai-implementers


From simeon at cs.cornell.edu  Mon Aug  9 19:01:51 2004
From: simeon at cs.cornell.edu (Simeon Warner)
Date: Mon Aug  9 19:02:22 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <200408092141.i79LfwU8018443@expredir3.cites.uiuc.edu>
References: <200408092141.i79LfwU8018443@expredir3.cites.uiuc.edu>
Message-ID: <Pine.LNX.4.58.0408091843020.17566@dhcp103-124.cs.cornell.edu>


I think the problem with "standard elements in any wrapper" approach is
that a harvester has no easy way to know up-front what it might be getting
if it harvests records in a particular format. Harvesting a metadata
format understood to be "only QDC elements" (nothing else, no funny
business) gives rather more assurance of intelligibility to a harvester
that understands QDC. A canonical schema seems the simplest way to
indicate this (notwithstanding versioning issues mentioned earlier by
Pete Johnston).

Cheers,
Simeon

On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> Jeff-
>
> My take is that OAI shouldn't want to get back in business of hosting
> schemas or namespaces for metadata formats. We went to some trouble to get
> away from that when transitioning from 1.1 to 2.0. A blessed application
> namespaces for qualified DC should be left up to the DCMI.
>
> While DCMI decides how they want to handle things (and I know they won't be
> quick), solutions like the one at CCLRC (we've done much the same here for a
> couple of projects) and NSDL are fine. Any namespace-aware OAI application
> should ignore the locally created namespace and hone in on the dc, dcterms,
> and dcmitype namespaces and thereby be able to use those elements without
> any problems. If your OAI service provider respects namespaces, it shouldn't
> matter what namespace the container element is in -- that's why the XML
> Schemas posted on the DCMI Website were done that way.
>
> Isn't that good enough for harvesting purposes? Are am I missing a subtle
> consideration that requires a canonical namespace for the container element?
>
> Tim Cole
> University of Illinois at UC
>
> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of Young,Jeff
> Sent: Monday, August 09, 2004 10:33 AM
> To: Mascord, M (Matthew) ; Young,Jeff;
> oai-implementers@oaisrv.nsdl.cornell.edu
> Cc: LeVan,Ralph; Hickey,Thom
> Subject: RE: [OAI-implementers] Qualified Dublin Core
>
> Yes, this is the problem. Now I have two to choose from. This one, and the
> one created by NSDL. I'm sure there are others out there. For the sake of
> interoperability, it seems to me that the OAI community should bless (and
> host?) such an "application profile" schema.
>
> Jeff
>
> > -----Original Message-----
> > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > Sent: Monday, August 09, 2004 11:21 AM
> > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > Cc: LeVan,Ralph; Hickey,Thom
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> > Hi -
> >
> > I am the developer of an OAI compatible institutional repository for
> > the UK research council CCLRC.  The URL is http://epubs.cclrc.ac.uk.
> > We are attempting to capture & make publicly accessible any scientific
> > research that has benefitted from the use of CCLRC's facilities or
> > expertise.  We recently went live on the OAI repository network:
> > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> >
> > We provide metadata in both Simple and Qualified Dublin Core but had
> > the same problem as you in finding an authoritative XML schema for
> > Qualified Dublin Core.  In the end we created our own that includes
> > the schema defined at
> > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd and
> > described in the Dublin Core Note at
> > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This
> > defines a container element into which elements from the dcterms and
> > dc namespaces may be placed.
> >
> > I'm not sure if this is the best approach so would appreciate any
> > feedback on this.  Our OAI implementation can be tested at
> > http://epubs.cclrc.ac.uk/oaitest.
> >
> > Kind Regards,
> > Matthew Mascord
> > e-Library Software Developer, CCLRC, UK
> >
> >
> > > -----Original Message-----
> > > From: oai-implementers-bounces@openarchives.org
> > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > > Young,Jeff
> > > Sent: 09 August 2004 16:03
> > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > Cc: LeVan,Ralph; Hickey,Thom
> > > Subject: [OAI-implementers] Qualified Dublin Core
> > >
> > >
> > > I'm looking for an XML Schema for Qualified Dublin Core for use in
> > > OAI repositories. I poked around the UIUC OAI Registry, but all I
> > > found was a couple of ad hoc schemas used by repositories that
> > > appear to be defunct.
> > > Ideally, though, the existence and use of such a schema should be
> > > shared across a broad community and not ad hoc.
> > >
> > > Next, I searched in Google and OAForum but all I found was a
> > > reference to a preliminary effort to establish such a schema
> > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This particular
> > > document discusses a sample application schema for a DCQ container,
> > > but the implication is that the final schema must be decided by the
> > > specific application (e.g OAI?). Apparently, this has never been
> > > done.
> > >
> > > Can someone provide some guidance for doing this?
> > >
> > > Thanks.
> > >
> > > Jeff
> > >
> > > ---
> > > Jeffrey A. Young
> > > Software Architect
> > > Office of Research, Mail Code 710
> > > OCLC Online Computer Library Center, Inc.
> > > 6565 Frantz Rd.
> > > Dublin, OH 43017-3395
> > > www.oclc.org
> > >
> > > Voice: 614-764-4342
> > > Voice: 800-848-5878, ext. 4342
> > > Fax: 614-718-7477
> > > Email: jyoung@oclc.org
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> > >
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
>

From jyoung at oclc.org  Tue Aug 10 09:51:09 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Tue Aug 10 09:51:57 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74CF@oa3-server.oa.oclc.org>

I agree with Simeon. Lately I've been creating dynamically configured web
applications built with distributed independent web services (OAI and SRW in
particular). The more schemas and protocols they have in common, the more
magic that can happen. DCQ elements hidden behind differing namespace
containers and schemas would greatly diminish its value. 

For example, I am working with Jean Godby on a catalog of XSLT crosswalks
(http://errol.oclc.org/schemaTrans.oclc.org.search). Redundant namespaces
will only clutter it up and make it harder for people to choose an
appropriate crosswalk from a list when then need one.

Jeff

> -----Original Message-----
> From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> Sent: Monday, August 09, 2004 7:02 PM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> 
> I think the problem with "standard elements in any wrapper" approach is
> that a harvester has no easy way to know up-front what it might be getting
> if it harvests records in a particular format. Harvesting a metadata
> format understood to be "only QDC elements" (nothing else, no funny
> business) gives rather more assurance of intelligibility to a harvester
> that understands QDC. A canonical schema seems the simplest way to
> indicate this (notwithstanding versioning issues mentioned earlier by
> Pete Johnston).
> 
> Cheers,
> Simeon
> 
> On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> > Jeff-
> >
> > My take is that OAI shouldn't want to get back in business of hosting
> > schemas or namespaces for metadata formats. We went to some trouble to
> get
> > away from that when transitioning from 1.1 to 2.0. A blessed application
> > namespaces for qualified DC should be left up to the DCMI.
> >
> > While DCMI decides how they want to handle things (and I know they won't
> be
> > quick), solutions like the one at CCLRC (we've done much the same here
> for a
> > couple of projects) and NSDL are fine. Any namespace-aware OAI
> application
> > should ignore the locally created namespace and hone in on the dc,
> dcterms,
> > and dcmitype namespaces and thereby be able to use those elements
> without
> > any problems. If your OAI service provider respects namespaces, it
> shouldn't
> > matter what namespace the container element is in -- that's why the XML
> > Schemas posted on the DCMI Website were done that way.
> >
> > Isn't that good enough for harvesting purposes? Are am I missing a
> subtle
> > consideration that requires a canonical namespace for the container
> element?
> >
> > Tim Cole
> > University of Illinois at UC
> >
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org
> > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> Young,Jeff
> > Sent: Monday, August 09, 2004 10:33 AM
> > To: Mascord, M (Matthew) ; Young,Jeff;
> > oai-implementers@oaisrv.nsdl.cornell.edu
> > Cc: LeVan,Ralph; Hickey,Thom
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> > Yes, this is the problem. Now I have two to choose from. This one, and
> the
> > one created by NSDL. I'm sure there are others out there. For the sake
> of
> > interoperability, it seems to me that the OAI community should bless
> (and
> > host?) such an "application profile" schema.
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > > Sent: Monday, August 09, 2004 11:21 AM
> > > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > > Cc: LeVan,Ralph; Hickey,Thom
> > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > >
> > > Hi -
> > >
> > > I am the developer of an OAI compatible institutional repository for
> > > the UK research council CCLRC.  The URL is http://epubs.cclrc.ac.uk.
> > > We are attempting to capture & make publicly accessible any scientific
> > > research that has benefitted from the use of CCLRC's facilities or
> > > expertise.  We recently went live on the OAI repository network:
> > > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> > >
> > > We provide metadata in both Simple and Qualified Dublin Core but had
> > > the same problem as you in finding an authoritative XML schema for
> > > Qualified Dublin Core.  In the end we created our own that includes
> > > the schema defined at
> > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd and
> > > described in the Dublin Core Note at
> > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This
> > > defines a container element into which elements from the dcterms and
> > > dc namespaces may be placed.
> > >
> > > I'm not sure if this is the best approach so would appreciate any
> > > feedback on this.  Our OAI implementation can be tested at
> > > http://epubs.cclrc.ac.uk/oaitest.
> > >
> > > Kind Regards,
> > > Matthew Mascord
> > > e-Library Software Developer, CCLRC, UK
> > >
> > >
> > > > -----Original Message-----
> > > > From: oai-implementers-bounces@openarchives.org
> > > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > > > Young,Jeff
> > > > Sent: 09 August 2004 16:03
> > > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > Subject: [OAI-implementers] Qualified Dublin Core
> > > >
> > > >
> > > > I'm looking for an XML Schema for Qualified Dublin Core for use in
> > > > OAI repositories. I poked around the UIUC OAI Registry, but all I
> > > > found was a couple of ad hoc schemas used by repositories that
> > > > appear to be defunct.
> > > > Ideally, though, the existence and use of such a schema should be
> > > > shared across a broad community and not ad hoc.
> > > >
> > > > Next, I searched in Google and OAForum but all I found was a
> > > > reference to a preliminary effort to establish such a schema
> > > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This particular
> > > > document discusses a sample application schema for a DCQ container,
> > > > but the implication is that the final schema must be decided by the
> > > > specific application (e.g OAI?). Apparently, this has never been
> > > > done.
> > > >
> > > > Can someone provide some guidance for doing this?
> > > >
> > > > Thanks.
> > > >
> > > > Jeff
> > > >
> > > > ---
> > > > Jeffrey A. Young
> > > > Software Architect
> > > > Office of Research, Mail Code 710
> > > > OCLC Online Computer Library Center, Inc.
> > > > 6565 Frantz Rd.
> > > > Dublin, OH 43017-3395
> > > > www.oclc.org
> > > >
> > > > Voice: 614-764-4342
> > > > Voice: 800-848-5878, ext. 4342
> > > > Fax: 614-718-7477
> > > > Email: jyoung@oclc.org
> > > >
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers

From t-cole3 at uiuc.edu  Tue Aug 10 15:46:31 2004
From: t-cole3 at uiuc.edu (Timothy W. Cole)
Date: Tue Aug 10 15:46:35 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE9809DF74CF@oa3-server.oa.oclc.org>
Message-ID: <200408101946.i7AJkWrI026472@expredir4.cites.uiuc.edu>

I take your point, Jeff, and Simeon's as well, but I still don't entirely
agree. Let me preface my response as follows:

There seem to be three major arguments (at least) that have been advanced
for why OAI should host a canonical container XSD for qualified DC similar
to the oai_dc.xsd currently hosted by OAI for simple DC:

reason 1. It would facilitate OAI metadata providers who want to provide
metadata records in qualified DC and it is uncertain when or even whether
DCMI will ever choose to assign a top-level DCQ namespace and make an XSD
usable for that purpose. For the reasons Pete discussed, DCMI doesn't seem
inclined to want to do this.

reason 2. It would cut down on redundancies in namespaces and schemas, and
thereby facilitate development of web services / automatic crosswalk
applications like the ones you're building.

reason 3. Harvesters need the assurance that harvesting records only in
canonical formats brings.

I'm becoming convinced of the strength of reason 1. Though I still have
qualms about whether OAI really is the best location for canonical metadata
schemas and namespaces of this sort, at least the XSD we're talking about,
since it imports namespaces and schemas that are maintained on the DCMI
site, would be relatively simple and low maintenance. So, maybe adding an
OAI-blessed XSD for qualified DC wouldn't be a bad idea in and of itself
(though of course it sets a pesky precedent, and I have no idea how those
closer to day-to-day maintenance of the OAI site feel about doing this).

I'm unconvinced of reasons 2 and 3, based on the following:

- There are that I know of offhand 5 XSDs currently being used by OAI
metadata providers for metadata formats based on qualified DC. They are (in
order of frequency of use):

http://www.language-archives.org/OLAC/1.0/olac.xsd

http://ns.nsdl.org/schemas/nsdl_dc/nsdl_dc_v1.02.xsd
(I'm treating the v1.00 and v1.01 versions of the NSDL XSD as congruent with
v1.02 for this discussion.) 

http://IMLSDCC.grainger.uiuc.edu/schemas/cdp_dc_v1.00.xsd

http://cicharvest.grainger.uiuc.edu/schemas/QDC/2004/07/14/CICQualifiedDC.xs
d

http://epubs.cclrc.ac.uk/xsd/qdc.xsd

The first three XSDs all add to qualified DC, that is they all include
additional elements, refinements, and/or encoding schemes not included in
the dc, dcterms, or dcmitypes namespaces. So sites using the first 3 schemas
would likely not be able to switch over to a "pure" canonical qualified DC
schema even if one were available. The 4th XSD on the list is for a project
we're just starting here at Illinois with partners in the CIC. At present
our CIC qualified DC schema does not augment qualified DC, but my
expectation is that it will do so soon, so again, we'll likely not be able
to switch over to a pure canonical XSD for qualified DC even if one becomes
available.

This suggests to me that we're going to see a large number of instances
where projects choose to extend qualified DC, in most cases for reasons and
needs very specific to their local projects. The most frequent additional
extensions needed seem to be in the form of added encoding schemes. 

So I'm not sure how successful posting a canonical XSD for qualified DC will
be in keeping a lid on the number of XSDs and namespaces used in the OAI
universe, and I'm not sure harvesters can count on (or really should ask)
providers to export both in their extended qualified DC and a canonical form
of qualified DC. Doing so might simplify (slightly) the service providers
task, but I'm not sure it's a compelling case, especially from the
perspective of the data provider. (A complicating consideration is that any
of the above schemas could actually be used by someone who did just have
pure qualified DC -- since all augmentations are entirely optional).

Hence my suggestion that harvesters, cross-walks, transformations, and other
such services might do better to key off of embedded namespaces rather than
specific XSD or even top-level namespaces. And though clearly data providers
could go out of their way to import qualified DC namespaces into their local
XSDs and then not use those namespaces, that seems unlikely -- so I disagree
with Simeon that harvesters should steer clear of locally augmented formats
based on qualified DC on such an assumption or for fear they won't be able
to extract enough useful information from records that maybe do contain
additional content in other namespaces. Possibly there's some risk, but it
seems to me that a dc:title element or dcterms:created refinement still
means much the same whether embedded in a canonical qualified DC record or
in a CDP DC augmented qualified DC record.

And I don't see why you couldn't write an XSLT to crosswalk from qualified
DC to MARC that could be applied not only to records of "pure" qualified DC,
but also to OLAC DC or NSDL DC, or CDP DC. Obviously such a generic
crosswalk would drop local encoding schemes like olac:linguistic-type,
olac:linguistic-field, and nsdl:GEM, and refinements like
cdp:holdingInstitutions and cdp:thumbnailIdentifier, but for many purposes
that would be okay, especially if the XSLT were smart enough to take
advantage of any xs:substitutionGroup information contained in the XSDs
referenced by the instances (e.g., so as to know that
cdp:thumbnailIdentifier was a refinement of dc:identifier). 

It may be a little more work, but given the actual trend to date of data
providers wanting to augment qualified DC with local semantics, I think
we'll need to build our applications smart enough to deal with such
diversity. And if we do that, it doesn't really matter if there is a
multiplicity of top-level container schemas for qualified DC (as long as
they all reference the appropriate DCMI component namespaces).

Tim Cole
University of Illinois at UC 

-----Original Message-----
From: oai-implementers-bounces@openarchives.org
[mailto:oai-implementers-bounces@openarchives.org] On Behalf Of Young,Jeff
Sent: Tuesday, August 10, 2004 8:51 AM
To: Simeon Warner; oai-implementers@oaisrv.nsdl.cornell.edu
Subject: RE: [OAI-implementers] Qualified Dublin Core

I agree with Simeon. Lately I've been creating dynamically configured web
applications built with distributed independent web services (OAI and SRW in
particular). The more schemas and protocols they have in common, the more
magic that can happen. DCQ elements hidden behind differing namespace
containers and schemas would greatly diminish its value. 

For example, I am working with Jean Godby on a catalog of XSLT crosswalks
(http://errol.oclc.org/schemaTrans.oclc.org.search). Redundant namespaces
will only clutter it up and make it harder for people to choose an
appropriate crosswalk from a list when then need one.

Jeff

> -----Original Message-----
> From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> Sent: Monday, August 09, 2004 7:02 PM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> 
> I think the problem with "standard elements in any wrapper" approach 
> is that a harvester has no easy way to know up-front what it might be 
> getting if it harvests records in a particular format. Harvesting a 
> metadata format understood to be "only QDC elements" (nothing else, no 
> funny
> business) gives rather more assurance of intelligibility to a 
> harvester that understands QDC. A canonical schema seems the simplest 
> way to indicate this (notwithstanding versioning issues mentioned 
> earlier by Pete Johnston).
> 
> Cheers,
> Simeon
> 
> On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> > Jeff-
> >
> > My take is that OAI shouldn't want to get back in business of 
> > hosting schemas or namespaces for metadata formats. We went to some 
> > trouble to
> get
> > away from that when transitioning from 1.1 to 2.0. A blessed 
> > application namespaces for qualified DC should be left up to the DCMI.
> >
> > While DCMI decides how they want to handle things (and I know they 
> > won't
> be
> > quick), solutions like the one at CCLRC (we've done much the same 
> > here
> for a
> > couple of projects) and NSDL are fine. Any namespace-aware OAI
> application
> > should ignore the locally created namespace and hone in on the dc,
> dcterms,
> > and dcmitype namespaces and thereby be able to use those elements
> without
> > any problems. If your OAI service provider respects namespaces, it
> shouldn't
> > matter what namespace the container element is in -- that's why the 
> > XML Schemas posted on the DCMI Website were done that way.
> >
> > Isn't that good enough for harvesting purposes? Are am I missing a
> subtle
> > consideration that requires a canonical namespace for the container
> element?
> >
> > Tim Cole
> > University of Illinois at UC
> >
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org
> > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> Young,Jeff
> > Sent: Monday, August 09, 2004 10:33 AM
> > To: Mascord, M (Matthew) ; Young,Jeff; 
> > oai-implementers@oaisrv.nsdl.cornell.edu
> > Cc: LeVan,Ralph; Hickey,Thom
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> > Yes, this is the problem. Now I have two to choose from. This one, 
> > and
> the
> > one created by NSDL. I'm sure there are others out there. For the 
> > sake
> of
> > interoperability, it seems to me that the OAI community should bless
> (and
> > host?) such an "application profile" schema.
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > > Sent: Monday, August 09, 2004 11:21 AM
> > > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > > Cc: LeVan,Ralph; Hickey,Thom
> > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > >
> > > Hi -
> > >
> > > I am the developer of an OAI compatible institutional repository 
> > > for the UK research council CCLRC.  The URL is
http://epubs.cclrc.ac.uk.
> > > We are attempting to capture & make publicly accessible any 
> > > scientific research that has benefitted from the use of CCLRC's 
> > > facilities or expertise.  We recently went live on the OAI repository
network:
> > > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> > >
> > > We provide metadata in both Simple and Qualified Dublin Core but 
> > > had the same problem as you in finding an authoritative XML schema 
> > > for Qualified Dublin Core.  In the end we created our own that 
> > > includes the schema defined at 
> > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd 
> > > and described in the Dublin Core Note at 
> > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This 
> > > defines a container element into which elements from the dcterms 
> > > and dc namespaces may be placed.
> > >
> > > I'm not sure if this is the best approach so would appreciate any 
> > > feedback on this.  Our OAI implementation can be tested at 
> > > http://epubs.cclrc.ac.uk/oaitest.
> > >
> > > Kind Regards,
> > > Matthew Mascord
> > > e-Library Software Developer, CCLRC, UK
> > >
> > >
> > > > -----Original Message-----
> > > > From: oai-implementers-bounces@openarchives.org
> > > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of 
> > > > Young,Jeff
> > > > Sent: 09 August 2004 16:03
> > > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > Subject: [OAI-implementers] Qualified Dublin Core
> > > >
> > > >
> > > > I'm looking for an XML Schema for Qualified Dublin Core for use 
> > > > in OAI repositories. I poked around the UIUC OAI Registry, but 
> > > > all I found was a couple of ad hoc schemas used by repositories 
> > > > that appear to be defunct.
> > > > Ideally, though, the existence and use of such a schema should 
> > > > be shared across a broad community and not ad hoc.
> > > >
> > > > Next, I searched in Google and OAForum but all I found was a 
> > > > reference to a preliminary effort to establish such a schema 
> > > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This 
> > > > particular document discusses a sample application schema for a 
> > > > DCQ container, but the implication is that the final schema must 
> > > > be decided by the specific application (e.g OAI?). Apparently, 
> > > > this has never been done.
> > > >
> > > > Can someone provide some guidance for doing this?
> > > >
> > > > Thanks.
> > > >
> > > > Jeff
> > > >
> > > > ---
> > > > Jeffrey A. Young
> > > > Software Architect
> > > > Office of Research, Mail Code 710 OCLC Online Computer Library 
> > > > Center, Inc.
> > > > 6565 Frantz Rd.
> > > > Dublin, OH 43017-3395
> > > > www.oclc.org
> > > >
> > > > Voice: 614-764-4342
> > > > Voice: 800-848-5878, ext. 4342
> > > > Fax: 614-718-7477
> > > > Email: jyoung@oclc.org
> > > >
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://openarchives.org/mailman/listinfo/oai-implementers


From jyoung at oclc.org  Tue Aug 10 16:29:01 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Tue Aug 10 16:29:06 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74EA@oa3-server.oa.oclc.org>

Thanks for you comments, Tim. Here are my thoughts.

I'll have to review Pete's arguments, but it occurs to me that if all
creators of metadata formats (e.g. Library of Congress) punted on the
container issue, efforts like mine to build interoperable distributed
systems would be seriously taxed. I share your concern, though, that OAI
isn't the best host for a generic DCQ schema for the same reason it's not
the best host for oai_dc. For example, I want to disseminate DC records via
SRW. I feel a little dirty using the oai_dc schema, but what would be
better? (I have some radical ideas about how this could be resolved, but
they are unlikely to catch on. For the terminally curious, check out
http://errol.oclc.org/xmlregistry.oclc.org.html?set=XMLSchemas&metadataPrefi
x=oai_dc&verb=ListRecords).

I have no qualms about the proliferation of container schemas that merely
include DCQ other than to say I hope communities reuse them whenever
appropriate. My only concern is the proliferation of containers containing
pure DCQ. Specifically, my plan is to add a pure DCQ metadataFormat to
DSpace and my decision on the matter will affect dozens of repositories.
Because of the impact, I would hate for my uncritical proprietary solution
to become the de facto standard.

Jeff

> -----Original Message-----
> From: Timothy W. Cole [mailto:t-cole3@uiuc.edu]
> Sent: Tuesday, August 10, 2004 3:47 PM
> To: 'Young,Jeff'; 'Simeon Warner'; oai-
> implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> I take your point, Jeff, and Simeon's as well, but I still don't entirely
> agree. Let me preface my response as follows:
> 
> There seem to be three major arguments (at least) that have been advanced
> for why OAI should host a canonical container XSD for qualified DC similar
> to the oai_dc.xsd currently hosted by OAI for simple DC:
> 
> reason 1. It would facilitate OAI metadata providers who want to provide
> metadata records in qualified DC and it is uncertain when or even whether
> DCMI will ever choose to assign a top-level DCQ namespace and make an XSD
> usable for that purpose. For the reasons Pete discussed, DCMI doesn't seem
> inclined to want to do this.
> 
> reason 2. It would cut down on redundancies in namespaces and schemas, and
> thereby facilitate development of web services / automatic crosswalk
> applications like the ones you're building.
> 
> reason 3. Harvesters need the assurance that harvesting records only in
> canonical formats brings.
> 
> I'm becoming convinced of the strength of reason 1. Though I still have
> qualms about whether OAI really is the best location for canonical
> metadata
> schemas and namespaces of this sort, at least the XSD we're talking about,
> since it imports namespaces and schemas that are maintained on the DCMI
> site, would be relatively simple and low maintenance. So, maybe adding an
> OAI-blessed XSD for qualified DC wouldn't be a bad idea in and of itself
> (though of course it sets a pesky precedent, and I have no idea how those
> closer to day-to-day maintenance of the OAI site feel about doing this).
> 
> I'm unconvinced of reasons 2 and 3, based on the following:
> 
> - There are that I know of offhand 5 XSDs currently being used by OAI
> metadata providers for metadata formats based on qualified DC. They are
> (in
> order of frequency of use):
> 
> http://www.language-archives.org/OLAC/1.0/olac.xsd
> 
> http://ns.nsdl.org/schemas/nsdl_dc/nsdl_dc_v1.02.xsd
> (I'm treating the v1.00 and v1.01 versions of the NSDL XSD as congruent
> with
> v1.02 for this discussion.)
> 
> http://IMLSDCC.grainger.uiuc.edu/schemas/cdp_dc_v1.00.xsd
> 
> http://cicharvest.grainger.uiuc.edu/schemas/QDC/2004/07/14/CICQualifiedDC.
> xs
> d
> 
> http://epubs.cclrc.ac.uk/xsd/qdc.xsd
> 
> The first three XSDs all add to qualified DC, that is they all include
> additional elements, refinements, and/or encoding schemes not included in
> the dc, dcterms, or dcmitypes namespaces. So sites using the first 3
> schemas
> would likely not be able to switch over to a "pure" canonical qualified DC
> schema even if one were available. The 4th XSD on the list is for a
> project
> we're just starting here at Illinois with partners in the CIC. At present
> our CIC qualified DC schema does not augment qualified DC, but my
> expectation is that it will do so soon, so again, we'll likely not be able
> to switch over to a pure canonical XSD for qualified DC even if one
> becomes
> available.
> 
> This suggests to me that we're going to see a large number of instances
> where projects choose to extend qualified DC, in most cases for reasons
> and
> needs very specific to their local projects. The most frequent additional
> extensions needed seem to be in the form of added encoding schemes.
> 
> So I'm not sure how successful posting a canonical XSD for qualified DC
> will
> be in keeping a lid on the number of XSDs and namespaces used in the OAI
> universe, and I'm not sure harvesters can count on (or really should ask)
> providers to export both in their extended qualified DC and a canonical
> form
> of qualified DC. Doing so might simplify (slightly) the service providers
> task, but I'm not sure it's a compelling case, especially from the
> perspective of the data provider. (A complicating consideration is that
> any
> of the above schemas could actually be used by someone who did just have
> pure qualified DC -- since all augmentations are entirely optional).
> 
> Hence my suggestion that harvesters, cross-walks, transformations, and
> other
> such services might do better to key off of embedded namespaces rather
> than
> specific XSD or even top-level namespaces. And though clearly data
> providers
> could go out of their way to import qualified DC namespaces into their
> local
> XSDs and then not use those namespaces, that seems unlikely -- so I
> disagree
> with Simeon that harvesters should steer clear of locally augmented
> formats
> based on qualified DC on such an assumption or for fear they won't be able
> to extract enough useful information from records that maybe do contain
> additional content in other namespaces. Possibly there's some risk, but it
> seems to me that a dc:title element or dcterms:created refinement still
> means much the same whether embedded in a canonical qualified DC record or
> in a CDP DC augmented qualified DC record.
> 
> And I don't see why you couldn't write an XSLT to crosswalk from qualified
> DC to MARC that could be applied not only to records of "pure" qualified
> DC,
> but also to OLAC DC or NSDL DC, or CDP DC. Obviously such a generic
> crosswalk would drop local encoding schemes like olac:linguistic-type,
> olac:linguistic-field, and nsdl:GEM, and refinements like
> cdp:holdingInstitutions and cdp:thumbnailIdentifier, but for many purposes
> that would be okay, especially if the XSLT were smart enough to take
> advantage of any xs:substitutionGroup information contained in the XSDs
> referenced by the instances (e.g., so as to know that
> cdp:thumbnailIdentifier was a refinement of dc:identifier).
> 
> It may be a little more work, but given the actual trend to date of data
> providers wanting to augment qualified DC with local semantics, I think
> we'll need to build our applications smart enough to deal with such
> diversity. And if we do that, it doesn't really matter if there is a
> multiplicity of top-level container schemas for qualified DC (as long as
> they all reference the appropriate DCMI component namespaces).
> 
> Tim Cole
> University of Illinois at UC
> 
> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of Young,Jeff
> Sent: Tuesday, August 10, 2004 8:51 AM
> To: Simeon Warner; oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> I agree with Simeon. Lately I've been creating dynamically configured web
> applications built with distributed independent web services (OAI and SRW
> in
> particular). The more schemas and protocols they have in common, the more
> magic that can happen. DCQ elements hidden behind differing namespace
> containers and schemas would greatly diminish its value.
> 
> For example, I am working with Jean Godby on a catalog of XSLT crosswalks
> (http://errol.oclc.org/schemaTrans.oclc.org.search). Redundant namespaces
> will only clutter it up and make it harder for people to choose an
> appropriate crosswalk from a list when then need one.
> 
> Jeff
> 
> > -----Original Message-----
> > From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> > Sent: Monday, August 09, 2004 7:02 PM
> > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> >
> > I think the problem with "standard elements in any wrapper" approach
> > is that a harvester has no easy way to know up-front what it might be
> > getting if it harvests records in a particular format. Harvesting a
> > metadata format understood to be "only QDC elements" (nothing else, no
> > funny
> > business) gives rather more assurance of intelligibility to a
> > harvester that understands QDC. A canonical schema seems the simplest
> > way to indicate this (notwithstanding versioning issues mentioned
> > earlier by Pete Johnston).
> >
> > Cheers,
> > Simeon
> >
> > On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> > > Jeff-
> > >
> > > My take is that OAI shouldn't want to get back in business of
> > > hosting schemas or namespaces for metadata formats. We went to some
> > > trouble to
> > get
> > > away from that when transitioning from 1.1 to 2.0. A blessed
> > > application namespaces for qualified DC should be left up to the DCMI.
> > >
> > > While DCMI decides how they want to handle things (and I know they
> > > won't
> > be
> > > quick), solutions like the one at CCLRC (we've done much the same
> > > here
> > for a
> > > couple of projects) and NSDL are fine. Any namespace-aware OAI
> > application
> > > should ignore the locally created namespace and hone in on the dc,
> > dcterms,
> > > and dcmitype namespaces and thereby be able to use those elements
> > without
> > > any problems. If your OAI service provider respects namespaces, it
> > shouldn't
> > > matter what namespace the container element is in -- that's why the
> > > XML Schemas posted on the DCMI Website were done that way.
> > >
> > > Isn't that good enough for harvesting purposes? Are am I missing a
> > subtle
> > > consideration that requires a canonical namespace for the container
> > element?
> > >
> > > Tim Cole
> > > University of Illinois at UC
> > >
> > > -----Original Message-----
> > > From: oai-implementers-bounces@openarchives.org
> > > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> > Young,Jeff
> > > Sent: Monday, August 09, 2004 10:33 AM
> > > To: Mascord, M (Matthew) ; Young,Jeff;
> > > oai-implementers@oaisrv.nsdl.cornell.edu
> > > Cc: LeVan,Ralph; Hickey,Thom
> > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > >
> > > Yes, this is the problem. Now I have two to choose from. This one,
> > > and
> > the
> > > one created by NSDL. I'm sure there are others out there. For the
> > > sake
> > of
> > > interoperability, it seems to me that the OAI community should bless
> > (and
> > > host?) such an "application profile" schema.
> > >
> > > Jeff
> > >
> > > > -----Original Message-----
> > > > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > > > Sent: Monday, August 09, 2004 11:21 AM
> > > > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > > >
> > > > Hi -
> > > >
> > > > I am the developer of an OAI compatible institutional repository
> > > > for the UK research council CCLRC.  The URL is
> http://epubs.cclrc.ac.uk.
> > > > We are attempting to capture & make publicly accessible any
> > > > scientific research that has benefitted from the use of CCLRC's
> > > > facilities or expertise.  We recently went live on the OAI
> repository
> network:
> > > > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> > > >
> > > > We provide metadata in both Simple and Qualified Dublin Core but
> > > > had the same problem as you in finding an authoritative XML schema
> > > > for Qualified Dublin Core.  In the end we created our own that
> > > > includes the schema defined at
> > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd
> > > > and described in the Dublin Core Note at
> > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This
> > > > defines a container element into which elements from the dcterms
> > > > and dc namespaces may be placed.
> > > >
> > > > I'm not sure if this is the best approach so would appreciate any
> > > > feedback on this.  Our OAI implementation can be tested at
> > > > http://epubs.cclrc.ac.uk/oaitest.
> > > >
> > > > Kind Regards,
> > > > Matthew Mascord
> > > > e-Library Software Developer, CCLRC, UK
> > > >
> > > >
> > > > > -----Original Message-----
> > > > > From: oai-implementers-bounces@openarchives.org
> > > > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > > > > Young,Jeff
> > > > > Sent: 09 August 2004 16:03
> > > > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > > Subject: [OAI-implementers] Qualified Dublin Core
> > > > >
> > > > >
> > > > > I'm looking for an XML Schema for Qualified Dublin Core for use
> > > > > in OAI repositories. I poked around the UIUC OAI Registry, but
> > > > > all I found was a couple of ad hoc schemas used by repositories
> > > > > that appear to be defunct.
> > > > > Ideally, though, the existence and use of such a schema should
> > > > > be shared across a broad community and not ad hoc.
> > > > >
> > > > > Next, I searched in Google and OAForum but all I found was a
> > > > > reference to a preliminary effort to establish such a schema
> > > > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This
> > > > > particular document discusses a sample application schema for a
> > > > > DCQ container, but the implication is that the final schema must
> > > > > be decided by the specific application (e.g OAI?). Apparently,
> > > > > this has never been done.
> > > > >
> > > > > Can someone provide some guidance for doing this?
> > > > >
> > > > > Thanks.
> > > > >
> > > > > Jeff
> > > > >
> > > > > ---
> > > > > Jeffrey A. Young
> > > > > Software Architect
> > > > > Office of Research, Mail Code 710 OCLC Online Computer Library
> > > > > Center, Inc.
> > > > > 6565 Frantz Rd.
> > > > > Dublin, OH 43017-3395
> > > > > www.oclc.org
> > > > >
> > > > > Voice: 614-764-4342
> > > > > Voice: 800-848-5878, ext. 4342
> > > > > Fax: 614-718-7477
> > > > > Email: jyoung@oclc.org
> > > > >
> > > > > _______________________________________________
> > > > > OAI-implementers mailing list
> > > > > List information, archives, preferences and to unsubscribe:
> > > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> > >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers

From simeon at cs.cornell.edu  Tue Aug 10 17:50:46 2004
From: simeon at cs.cornell.edu (Simeon Warner)
Date: Tue Aug 10 17:51:18 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <Pine.LNX.4.58.0408101745170.18638@dhcp103-124.cs.cornell.edu>


I wasn't actually promoting the idea that the OAI should provide a
canonical DCQ wrapper schema, merely that such a canonical schema would be
useful. The DCMI would seem the logical authority to put out such a schema
though from Pete's comments it seems that is unlikely or at least not
going to happen soon. Given this situation then it may be that the OAI is
a reasonable second-best.

Should a canonical DCQ schema emerge (at whatever location) I think the
OAI guidelines should recommend it as a way to encourage interoperable
exchange of pure DCQ metadata.

Where I disagree with Tim is that I don't see the widespread use of
DCQ+extras as a reason for not having a pure-DCQ schema. There will be
some who need only pure-DCQ. There will be instances such as the case the
Jeff is talking about, that DCQ will be a default provided in
non-localized code. Also, by the same arguments that the holder/creator of
metadata is often the best person to crosswalk metadata to DC from their
internal format; that person may also be best placed to crosswalk their
DCQ+extras to DCQ for export to services that don't understand the extras.
The xs:substitutionGroup mechanism may be able to provide mappings in many
cases but one can easily imagine more complex situations. There are also
buying-power arguments here; in a world with many metadata providers the
"little people" may find obvious conformance a good route to inclusion
where larger collections can expect extra service-provider effort.

Cheers,
Simeon

On Tue, 10 Aug 2004, Young,Jeff wrote:
> Thanks for you comments, Tim. Here are my thoughts.
>
> I'll have to review Pete's arguments, but it occurs to me that if all
> creators of metadata formats (e.g. Library of Congress) punted on the
> container issue, efforts like mine to build interoperable distributed
> systems would be seriously taxed. I share your concern, though, that OAI
> isn't the best host for a generic DCQ schema for the same reason it's not
> the best host for oai_dc. For example, I want to disseminate DC records via
> SRW. I feel a little dirty using the oai_dc schema, but what would be
> better? (I have some radical ideas about how this could be resolved, but
> they are unlikely to catch on. For the terminally curious, check out
> http://errol.oclc.org/xmlregistry.oclc.org.html?set=XMLSchemas&metadataPrefi
> x=oai_dc&verb=ListRecords).
>
> I have no qualms about the proliferation of container schemas that merely
> include DCQ other than to say I hope communities reuse them whenever
> appropriate. My only concern is the proliferation of containers containing
> pure DCQ. Specifically, my plan is to add a pure DCQ metadataFormat to
> DSpace and my decision on the matter will affect dozens of repositories.
> Because of the impact, I would hate for my uncritical proprietary solution
> to become the de facto standard.
>
> Jeff
> > -----Original Message-----
> > From: Timothy W. Cole [mailto:t-cole3@uiuc.edu]
> > Sent: Tuesday, August 10, 2004 3:47 PM
> > To: 'Young,Jeff'; 'Simeon Warner'; oai-
> > implementers@oaisrv.nsdl.cornell.edu
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> > I take your point, Jeff, and Simeon's as well, but I still don't entirely
> > agree. Let me preface my response as follows:
> >
> > There seem to be three major arguments (at least) that have been advanced
> > for why OAI should host a canonical container XSD for qualified DC similar
> > to the oai_dc.xsd currently hosted by OAI for simple DC:
> >
> > reason 1. It would facilitate OAI metadata providers who want to provide
> > metadata records in qualified DC and it is uncertain when or even whether
> > DCMI will ever choose to assign a top-level DCQ namespace and make an XSD
> > usable for that purpose. For the reasons Pete discussed, DCMI doesn't seem
> > inclined to want to do this.
> >
> > reason 2. It would cut down on redundancies in namespaces and schemas, and
> > thereby facilitate development of web services / automatic crosswalk
> > applications like the ones you're building.
> >
> > reason 3. Harvesters need the assurance that harvesting records only in
> > canonical formats brings.
> >
> > I'm becoming convinced of the strength of reason 1. Though I still have
> > qualms about whether OAI really is the best location for canonical
> > metadata
> > schemas and namespaces of this sort, at least the XSD we're talking about,
> > since it imports namespaces and schemas that are maintained on the DCMI
> > site, would be relatively simple and low maintenance. So, maybe adding an
> > OAI-blessed XSD for qualified DC wouldn't be a bad idea in and of itself
> > (though of course it sets a pesky precedent, and I have no idea how those
> > closer to day-to-day maintenance of the OAI site feel about doing this).
> >
> > I'm unconvinced of reasons 2 and 3, based on the following:
> >
> > - There are that I know of offhand 5 XSDs currently being used by OAI
> > metadata providers for metadata formats based on qualified DC. They are
> > (in
> > order of frequency of use):
> >
> > http://www.language-archives.org/OLAC/1.0/olac.xsd
> >
> > http://ns.nsdl.org/schemas/nsdl_dc/nsdl_dc_v1.02.xsd
> > (I'm treating the v1.00 and v1.01 versions of the NSDL XSD as congruent
> > with
> > v1.02 for this discussion.)
> >
> > http://IMLSDCC.grainger.uiuc.edu/schemas/cdp_dc_v1.00.xsd
> >
> > http://cicharvest.grainger.uiuc.edu/schemas/QDC/2004/07/14/CICQualifiedDC.
> > xs
> > d
> >
> > http://epubs.cclrc.ac.uk/xsd/qdc.xsd
> >
> > The first three XSDs all add to qualified DC, that is they all include
> > additional elements, refinements, and/or encoding schemes not included in
> > the dc, dcterms, or dcmitypes namespaces. So sites using the first 3
> > schemas
> > would likely not be able to switch over to a "pure" canonical qualified DC
> > schema even if one were available. The 4th XSD on the list is for a
> > project
> > we're just starting here at Illinois with partners in the CIC. At present
> > our CIC qualified DC schema does not augment qualified DC, but my
> > expectation is that it will do so soon, so again, we'll likely not be able
> > to switch over to a pure canonical XSD for qualified DC even if one
> > becomes
> > available.
> >
> > This suggests to me that we're going to see a large number of instances
> > where projects choose to extend qualified DC, in most cases for reasons
> > and
> > needs very specific to their local projects. The most frequent additional
> > extensions needed seem to be in the form of added encoding schemes.
> >
> > So I'm not sure how successful posting a canonical XSD for qualified DC
> > will
> > be in keeping a lid on the number of XSDs and namespaces used in the OAI
> > universe, and I'm not sure harvesters can count on (or really should ask)
> > providers to export both in their extended qualified DC and a canonical
> > form
> > of qualified DC. Doing so might simplify (slightly) the service providers
> > task, but I'm not sure it's a compelling case, especially from the
> > perspective of the data provider. (A complicating consideration is that
> > any
> > of the above schemas could actually be used by someone who did just have
> > pure qualified DC -- since all augmentations are entirely optional).
> >
> > Hence my suggestion that harvesters, cross-walks, transformations, and
> > other
> > such services might do better to key off of embedded namespaces rather
> > than
> > specific XSD or even top-level namespaces. And though clearly data
> > providers
> > could go out of their way to import qualified DC namespaces into their
> > local
> > XSDs and then not use those namespaces, that seems unlikely -- so I
> > disagree
> > with Simeon that harvesters should steer clear of locally augmented
> > formats
> > based on qualified DC on such an assumption or for fear they won't be able
> > to extract enough useful information from records that maybe do contain
> > additional content in other namespaces. Possibly there's some risk, but it
> > seems to me that a dc:title element or dcterms:created refinement still
> > means much the same whether embedded in a canonical qualified DC record or
> > in a CDP DC augmented qualified DC record.
> >
> > And I don't see why you couldn't write an XSLT to crosswalk from qualified
> > DC to MARC that could be applied not only to records of "pure" qualified
> > DC,
> > but also to OLAC DC or NSDL DC, or CDP DC. Obviously such a generic
> > crosswalk would drop local encoding schemes like olac:linguistic-type,
> > olac:linguistic-field, and nsdl:GEM, and refinements like
> > cdp:holdingInstitutions and cdp:thumbnailIdentifier, but for many purposes
> > that would be okay, especially if the XSLT were smart enough to take
> > advantage of any xs:substitutionGroup information contained in the XSDs
> > referenced by the instances (e.g., so as to know that
> > cdp:thumbnailIdentifier was a refinement of dc:identifier).
> >
> > It may be a little more work, but given the actual trend to date of data
> > providers wanting to augment qualified DC with local semantics, I think
> > we'll need to build our applications smart enough to deal with such
> > diversity. And if we do that, it doesn't really matter if there is a
> > multiplicity of top-level container schemas for qualified DC (as long as
> > they all reference the appropriate DCMI component namespaces).
> >
> > Tim Cole
> > University of Illinois at UC
> >
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org
> > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of Young,Jeff
> > Sent: Tuesday, August 10, 2004 8:51 AM
> > To: Simeon Warner; oai-implementers@oaisrv.nsdl.cornell.edu
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> > I agree with Simeon. Lately I've been creating dynamically configured web
> > applications built with distributed independent web services (OAI and SRW
> > in
> > particular). The more schemas and protocols they have in common, the more
> > magic that can happen. DCQ elements hidden behind differing namespace
> > containers and schemas would greatly diminish its value.
> >
> > For example, I am working with Jean Godby on a catalog of XSLT crosswalks
> > (http://errol.oclc.org/schemaTrans.oclc.org.search). Redundant namespaces
> > will only clutter it up and make it harder for people to choose an
> > appropriate crosswalk from a list when then need one.
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> > > Sent: Monday, August 09, 2004 7:02 PM
> > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > >
> > >
> > > I think the problem with "standard elements in any wrapper" approach
> > > is that a harvester has no easy way to know up-front what it might be
> > > getting if it harvests records in a particular format. Harvesting a
> > > metadata format understood to be "only QDC elements" (nothing else, no
> > > funny
> > > business) gives rather more assurance of intelligibility to a
> > > harvester that understands QDC. A canonical schema seems the simplest
> > > way to indicate this (notwithstanding versioning issues mentioned
> > > earlier by Pete Johnston).
> > >
> > > Cheers,
> > > Simeon
> > >
> > > On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> > > > Jeff-
> > > >
> > > > My take is that OAI shouldn't want to get back in business of
> > > > hosting schemas or namespaces for metadata formats. We went to some
> > > > trouble to
> > > get
> > > > away from that when transitioning from 1.1 to 2.0. A blessed
> > > > application namespaces for qualified DC should be left up to the DCMI.
> > > >
> > > > While DCMI decides how they want to handle things (and I know they
> > > > won't
> > > be
> > > > quick), solutions like the one at CCLRC (we've done much the same
> > > > here
> > > for a
> > > > couple of projects) and NSDL are fine. Any namespace-aware OAI
> > > application
> > > > should ignore the locally created namespace and hone in on the dc,
> > > dcterms,
> > > > and dcmitype namespaces and thereby be able to use those elements
> > > without
> > > > any problems. If your OAI service provider respects namespaces, it
> > > shouldn't
> > > > matter what namespace the container element is in -- that's why the
> > > > XML Schemas posted on the DCMI Website were done that way.
> > > >
> > > > Isn't that good enough for harvesting purposes? Are am I missing a
> > > subtle
> > > > consideration that requires a canonical namespace for the container
> > > element?
> > > >
> > > > Tim Cole
> > > > University of Illinois at UC
> > > >
> > > > -----Original Message-----
> > > > From: oai-implementers-bounces@openarchives.org
> > > > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> > > Young,Jeff
> > > > Sent: Monday, August 09, 2004 10:33 AM
> > > > To: Mascord, M (Matthew) ; Young,Jeff;
> > > > oai-implementers@oaisrv.nsdl.cornell.edu
> > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > > >
> > > > Yes, this is the problem. Now I have two to choose from. This one,
> > > > and
> > > the
> > > > one created by NSDL. I'm sure there are others out there. For the
> > > > sake
> > > of
> > > > interoperability, it seems to me that the OAI community should bless
> > > (and
> > > > host?) such an "application profile" schema.
> > > >
> > > > Jeff
> > > >
> > > > > -----Original Message-----
> > > > > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > > > > Sent: Monday, August 09, 2004 11:21 AM
> > > > > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > > > >
> > > > > Hi -
> > > > >
> > > > > I am the developer of an OAI compatible institutional repository
> > > > > for the UK research council CCLRC.  The URL is
> > http://epubs.cclrc.ac.uk.
> > > > > We are attempting to capture & make publicly accessible any
> > > > > scientific research that has benefitted from the use of CCLRC's
> > > > > facilities or expertise.  We recently went live on the OAI
> > repository
> > network:
> > > > > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> > > > >
> > > > > We provide metadata in both Simple and Qualified Dublin Core but
> > > > > had the same problem as you in finding an authoritative XML schema
> > > > > for Qualified Dublin Core.  In the end we created our own that
> > > > > includes the schema defined at
> > > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd
> > > > > and described in the Dublin Core Note at
> > > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This
> > > > > defines a container element into which elements from the dcterms
> > > > > and dc namespaces may be placed.
> > > > >
> > > > > I'm not sure if this is the best approach so would appreciate any
> > > > > feedback on this.  Our OAI implementation can be tested at
> > > > > http://epubs.cclrc.ac.uk/oaitest.
> > > > >
> > > > > Kind Regards,
> > > > > Matthew Mascord
> > > > > e-Library Software Developer, CCLRC, UK
> > > > >
> > > > >
> > > > > > -----Original Message-----
> > > > > > From: oai-implementers-bounces@openarchives.org
> > > > > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > > > > > Young,Jeff
> > > > > > Sent: 09 August 2004 16:03
> > > > > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > > > Subject: [OAI-implementers] Qualified Dublin Core
> > > > > >
> > > > > >
> > > > > > I'm looking for an XML Schema for Qualified Dublin Core for use
> > > > > > in OAI repositories. I poked around the UIUC OAI Registry, but
> > > > > > all I found was a couple of ad hoc schemas used by repositories
> > > > > > that appear to be defunct.
> > > > > > Ideally, though, the existence and use of such a schema should
> > > > > > be shared across a broad community and not ad hoc.
> > > > > >
> > > > > > Next, I searched in Google and OAForum but all I found was a
> > > > > > reference to a preliminary effort to establish such a schema
> > > > > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This
> > > > > > particular document discusses a sample application schema for a
> > > > > > DCQ container, but the implication is that the final schema must
> > > > > > be decided by the specific application (e.g OAI?). Apparently,
> > > > > > this has never been done.
> > > > > >
> > > > > > Can someone provide some guidance for doing this?
> > > > > >
> > > > > > Thanks.
> > > > > >
> > > > > > Jeff
> > > > > >
> > > > > > ---
> > > > > > Jeffrey A. Young
> > > > > > Software Architect
> > > > > > Office of Research, Mail Code 710 OCLC Online Computer Library
> > > > > > Center, Inc.
> > > > > > 6565 Frantz Rd.
> > > > > > Dublin, OH 43017-3395
> > > > > > www.oclc.org
> > > > > >
> > > > > > Voice: 614-764-4342
> > > > > > Voice: 800-848-5878, ext. 4342
> > > > > > Fax: 614-718-7477
> > > > > > Email: jyoung@oclc.org
> > > > > >
> > > > > > _______________________________________________
> > > > > > OAI-implementers mailing list
> > > > > > List information, archives, preferences and to unsubscribe:
> > > > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > > > >
> > > >
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > >
> > > >
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
>

From p.johnston at ukoln.ac.uk  Wed Aug 11 03:22:47 2004
From: p.johnston at ukoln.ac.uk (Pete Johnston)
Date: Wed Aug 11 03:23:21 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <200408101946.i7AJkWrI026472@expredir4.cites.uiuc.edu>
References: <200408101946.i7AJkWrI026472@expredir4.cites.uiuc.edu>
Message-ID: <1092208967.4119c94775313@webmail.bath.ac.uk>

Just responding to a couple of specific points:

Tim said:

> There seem to be three major arguments (at least) that have been advanced
> for why OAI should host a canonical container XSD for qualified DC similar
> to the oai_dc.xsd currently hosted by OAI for simple DC:
> 
> reason 1. It would facilitate OAI metadata providers who want to provide
> metadata records in qualified DC and it is uncertain when or even whether
> DCMI will ever choose to assign a top-level DCQ namespace and make an XSD
> usable for that purpose. For the reasons Pete discussed, DCMI doesn't seem
> inclined to want to do this.

Simeon said:

> I wasn't actually promoting the idea that the OAI should provide a
> canonical DCQ wrapper schema, merely that such a canonical schema would be
> useful. The DCMI would seem the logical authority to put out such a schema
> though from Pete's comments it seems that is unlikely or at least not
> going to happen soon. Given this situation then it may be that the OAI is
> a reasonable second-best.

(Speaking only for myself and not for DCMI!), at this point, I don't think we
should conclude that DCMI will not provide a wrapper schema. There has been a
request for such a schema from another major user of the DCMI XML Schemas, and I
see occasional queries from individual implementers too. More or less at the
same time, the issue of versioning the schemas has raised by another implementer.

Makx has asked me to summarise what the issues are, and I haven't had time to do
it. So in terms of moving forward on that decision within DCMI I'm the
bottleneck at the moment :-( 

Having said that, as Tim and I have touched on, there is the underlying issue of
"what _is_ 'qualified DC'?" (i.e. just the use of the DCMI-defined terms or the
use of the DCMI-defined terms plus other terms), which has been another topic of
considerable debate. (FWIW, without taking a position on whether
pure-DCMI-qualified-DC is used/useful in practice or not, I think it would be
horribly confusing if OAI provided a schema to represent what was labelled
"qualified DC" and that didn't correspond to what DCMI labelled "qualified DC".)

Anyway, I'll do my best to get some notes to Makx and/or dc-architecture by the
start of next week. I can't predict what the outcome of those discussions will
be but hopefully it will be a step towards the DCMI position becoming clearer.
 
Pete

 

From r.heery at ukoln.ac.uk  Wed Aug 11 07:24:23 2004
From: r.heery at ukoln.ac.uk (Rachel Heery)
Date: Wed Aug 11 07:24:56 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <200408101946.i7AJkWrI026472@expredir4.cites.uiuc.edu>
References: <200408101946.i7AJkWrI026472@expredir4.cites.uiuc.edu>
Message-ID: <Pine.GS4.4.58.0408111201390.11643@lamin.ukoln.ac.uk>

On Tue, 10 Aug 2004, Timothy W. Cole wrote:

> So I'm not sure how successful posting a canonical XSD for qualified DC will
> be in keeping a lid on the number of XSDs and namespaces used in the OAI
> universe, and I'm not sure harvesters can count on (or really should ask)
> providers to export both in their extended qualified DC and a canonical form
> of qualified DC. Doing so might simplify (slightly) the service providers
> task, but I'm not sure it's a compelling case, especially from the
> perspective of the data provider. (A complicating consideration is that any
> of the above schemas could actually be used by someone who did just have
> pure qualified DC -- since all augmentations are entirely optional).

Seems to me, given the potential that OAI-PMH offers for building
'networks of repositories' there are benefits in encouraging applications
to pass on richest metadata available, ignoring unknown extensions.
Metadata will be re-harvested by applications that can use extensions.

Can there be a solution whereby OAI recognises that a single schema
identified as Qualified Dublin Core might contain local fields? is this
not analogous to situation in MARC which might contain local fields??

I have always liked the approach taken in PRISM spec:

"PRISM-compliant applications MUST NOT throw an error if they encounter
unknown elements or attributes. They are free to delete or preserve such
information, although recommended practice is to retain them and pass them
along. Retaining the information is an architectural principle which helps
new functionality be established in the presence of older versions of
software."
see http://www.prismstandard.org/Pam_1.0/PRISM_1.2h.pdf

Not sure how far that is achievable with OAI-PMH but it does seem to me to
recognise the reality of metadata schemas being extended and evolving.

In addition might there be a barrier in expecting data providers to map
their 'extended QDC to 'pure QDC' plus 'Simple DC', somewhat going against
philosophy of OAI trying to make things easy for data providers??

Rachel

>
> Hence my suggestion that harvesters, cross-walks, transformations, and other
> such services might do better to key off of embedded namespaces rather than
> specific XSD or even top-level namespaces. And though clearly data providers
> could go out of their way to import qualified DC namespaces into their local
> XSDs and then not use those namespaces, that seems unlikely -- so I disagree
> with Simeon that harvesters should steer clear of locally augmented formats
> based on qualified DC on such an assumption or for fear they won't be able
> to extract enough useful information from records that maybe do contain
> additional content in other namespaces. Possibly there's some risk, but it
> seems to me that a dc:title element or dcterms:created refinement still
> means much the same whether embedded in a canonical qualified DC record or
> in a CDP DC augmented qualified DC record.
>
> And I don't see why you couldn't write an XSLT to crosswalk from qualified
> DC to MARC that could be applied not only to records of "pure" qualified DC,
> but also to OLAC DC or NSDL DC, or CDP DC. Obviously such a generic
> crosswalk would drop local encoding schemes like olac:linguistic-type,
> olac:linguistic-field, and nsdl:GEM, and refinements like
> cdp:holdingInstitutions and cdp:thumbnailIdentifier, but for many purposes
> that would be okay, especially if the XSLT were smart enough to take
> advantage of any xs:substitutionGroup information contained in the XSDs
> referenced by the instances (e.g., so as to know that
> cdp:thumbnailIdentifier was a refinement of dc:identifier).
>
> It may be a little more work, but given the actual trend to date of data
> providers wanting to augment qualified DC with local semantics, I think
> we'll need to build our applications smart enough to deal with such
> diversity. And if we do that, it doesn't really matter if there is a
> multiplicity of top-level container schemas for qualified DC (as long as
> they all reference the appropriate DCMI component namespaces).
>
> Tim Cole
> University of Illinois at UC
>
> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of Young,Jeff
> Sent: Tuesday, August 10, 2004 8:51 AM
> To: Simeon Warner; oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] Qualified Dublin Core
>
> I agree with Simeon. Lately I've been creating dynamically configured web
> applications built with distributed independent web services (OAI and SRW in
> particular). The more schemas and protocols they have in common, the more
> magic that can happen. DCQ elements hidden behind differing namespace
> containers and schemas would greatly diminish its value.
>
> For example, I am working with Jean Godby on a catalog of XSLT crosswalks
> (http://errol.oclc.org/schemaTrans.oclc.org.search). Redundant namespaces
> will only clutter it up and make it harder for people to choose an
> appropriate crosswalk from a list when then need one.
>
> Jeff
>
> > -----Original Message-----
> > From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> > Sent: Monday, August 09, 2004 7:02 PM
> > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> >
> > I think the problem with "standard elements in any wrapper" approach
> > is that a harvester has no easy way to know up-front what it might be
> > getting if it harvests records in a particular format. Harvesting a
> > metadata format understood to be "only QDC elements" (nothing else, no
> > funny
> > business) gives rather more assurance of intelligibility to a
> > harvester that understands QDC. A canonical schema seems the simplest
> > way to indicate this (notwithstanding versioning issues mentioned
> > earlier by Pete Johnston).
> >
> > Cheers,
> > Simeon
> >
> > On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> > > Jeff-
> > >
> > > My take is that OAI shouldn't want to get back in business of
> > > hosting schemas or namespaces for metadata formats. We went to some
> > > trouble to
> > get
> > > away from that when transitioning from 1.1 to 2.0. A blessed
> > > application namespaces for qualified DC should be left up to the DCMI.
> > >
> > > While DCMI decides how they want to handle things (and I know they
> > > won't
> > be
> > > quick), solutions like the one at CCLRC (we've done much the same
> > > here
> > for a
> > > couple of projects) and NSDL are fine. Any namespace-aware OAI
> > application
> > > should ignore the locally created namespace and hone in on the dc,
> > dcterms,
> > > and dcmitype namespaces and thereby be able to use those elements
> > without
> > > any problems. If your OAI service provider respects namespaces, it
> > shouldn't
> > > matter what namespace the container element is in -- that's why the
> > > XML Schemas posted on the DCMI Website were done that way.
> > >
> > > Isn't that good enough for harvesting purposes? Are am I missing a
> > subtle
> > > consideration that requires a canonical namespace for the container
> > element?
> > >
> > > Tim Cole
> > > University of Illinois at UC
> > >
> > > -----Original Message-----
> > > From: oai-implementers-bounces@openarchives.org
> > > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> > Young,Jeff
> > > Sent: Monday, August 09, 2004 10:33 AM
> > > To: Mascord, M (Matthew) ; Young,Jeff;
> > > oai-implementers@oaisrv.nsdl.cornell.edu
> > > Cc: LeVan,Ralph; Hickey,Thom
> > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > >
> > > Yes, this is the problem. Now I have two to choose from. This one,
> > > and
> > the
> > > one created by NSDL. I'm sure there are others out there. For the
> > > sake
> > of
> > > interoperability, it seems to me that the OAI community should bless
> > (and
> > > host?) such an "application profile" schema.
> > >
> > > Jeff
> > >
> > > > -----Original Message-----
> > > > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > > > Sent: Monday, August 09, 2004 11:21 AM
> > > > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > > >
> > > > Hi -
> > > >
> > > > I am the developer of an OAI compatible institutional repository
> > > > for the UK research council CCLRC.  The URL is
> http://epubs.cclrc.ac.uk.
> > > > We are attempting to capture & make publicly accessible any
> > > > scientific research that has benefitted from the use of CCLRC's
> > > > facilities or expertise.  We recently went live on the OAI repository
> network:
> > > > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> > > >
> > > > We provide metadata in both Simple and Qualified Dublin Core but
> > > > had the same problem as you in finding an authoritative XML schema
> > > > for Qualified Dublin Core.  In the end we created our own that
> > > > includes the schema defined at
> > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd
> > > > and described in the Dublin Core Note at
> > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This
> > > > defines a container element into which elements from the dcterms
> > > > and dc namespaces may be placed.
> > > >
> > > > I'm not sure if this is the best approach so would appreciate any
> > > > feedback on this.  Our OAI implementation can be tested at
> > > > http://epubs.cclrc.ac.uk/oaitest.
> > > >
> > > > Kind Regards,
> > > > Matthew Mascord
> > > > e-Library Software Developer, CCLRC, UK
> > > >
> > > >
> > > > > -----Original Message-----
> > > > > From: oai-implementers-bounces@openarchives.org
> > > > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > > > > Young,Jeff
> > > > > Sent: 09 August 2004 16:03
> > > > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > > Subject: [OAI-implementers] Qualified Dublin Core
> > > > >
> > > > >
> > > > > I'm looking for an XML Schema for Qualified Dublin Core for use
> > > > > in OAI repositories. I poked around the UIUC OAI Registry, but
> > > > > all I found was a couple of ad hoc schemas used by repositories
> > > > > that appear to be defunct.
> > > > > Ideally, though, the existence and use of such a schema should
> > > > > be shared across a broad community and not ad hoc.
> > > > >
> > > > > Next, I searched in Google and OAForum but all I found was a
> > > > > reference to a preliminary effort to establish such a schema
> > > > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This
> > > > > particular document discusses a sample application schema for a
> > > > > DCQ container, but the implication is that the final schema must
> > > > > be decided by the specific application (e.g OAI?). Apparently,
> > > > > this has never been done.
> > > > >
> > > > > Can someone provide some guidance for doing this?
> > > > >
> > > > > Thanks.
> > > > >
> > > > > Jeff
> > > > >
> > > > > ---
> > > > > Jeffrey A. Young
> > > > > Software Architect
> > > > > Office of Research, Mail Code 710 OCLC Online Computer Library
> > > > > Center, Inc.
> > > > > 6565 Frantz Rd.
> > > > > Dublin, OH 43017-3395
> > > > > www.oclc.org
> > > > >
> > > > > Voice: 614-764-4342
> > > > > Voice: 800-848-5878, ext. 4342
> > > > > Fax: 614-718-7477
> > > > > Email: jyoung@oclc.org
> > > > >
> > > > > _______________________________________________
> > > > > OAI-implementers mailing list
> > > > > List information, archives, preferences and to unsubscribe:
> > > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> > >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
>
>


---------------------------------------------------------------------------
Rachel Heery
UKOLN, University of Bath                       tel: +44 (0)1225 386724
http://www.ukoln.ac.uk
--------------------------------------------------------------------------
European Conference on Digital Libraries (ECDL 2004),
Bath, UK, 12-17 September 2004: http://www.ecdl2004.org/


From jyoung at oclc.org  Wed Aug 11 10:57:16 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Wed Aug 11 10:57:23 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74F0@oa3-server.oa.oclc.org>

Pete said:
 
> (Speaking only for myself and not for DCMI!), at this point, I don't think
> we
> should conclude that DCMI will not provide a wrapper schema. There has
> been a
> request for such a schema from another major user of the DCMI XML Schemas,
> and I
> see occasional queries from individual implementers too. More or less at
> the
> same time, the issue of versioning the schemas has raised by another
> implementer.

Thanks. I will suggest to the DSpace group that we should wait to implement
DCQ harvesting until a decision has been made by DCMI.

> Having said that, as Tim and I have touched on, there is the underlying
> issue of
> "what _is_ 'qualified DC'?" (i.e. just the use of the DCMI-defined terms
> or the
> use of the DCMI-defined terms plus other terms), which has been another
> topic of
> considerable debate. (FWIW, without taking a position on whether
> pure-DCMI-qualified-DC is used/useful in practice or not, I think it would
> be
> horribly confusing if OAI provided a schema to represent what was labelled
> "qualified DC" and that didn't correspond to what DCMI labelled "qualified
> DC".)

My understanding is that DSpace uses qualified DC elements as its internal
storage format. Whether the elements are used appropriately or not is
unknown to me. My assumption is that they were used appropriately, but if
people are still questioning whether pure qualified DC is useful or not, it
makes me wonder. On the bright side, if it is useful, having a container
that could be used by OAI, SRW/U, etc. would be a great way to exercise the
question.

Jeff

From jyoung at oclc.org  Wed Aug 11 11:34:54 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Wed Aug 11 11:35:03 2004
Subject: [OAI-implementers] Qualified Dublin Core
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF74F3@oa3-server.oa.oclc.org>

Hi Rachel,

My feeling is that if someone wants to mix DCQ with other stuff, the
container deserves its own namespace. Otherwise, there is no standard way to
recognize the significance of the mix when the record escapes the confines
of its peculiar context.

I would be simple enough to write an XSLT crosswalk that "dumbs down"
arbitrary XML records to DC or DCQ, but there's a risk that the result would
be a meaningless jumble.

Jeff

> -----Original Message-----
> From: Rachel Heery [mailto:r.heery@ukoln.ac.uk]
> Sent: Wednesday, August 11, 2004 7:24 AM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] Qualified Dublin Core
> 
> On Tue, 10 Aug 2004, Timothy W. Cole wrote:
> 
> > So I'm not sure how successful posting a canonical XSD for qualified DC
> will
> > be in keeping a lid on the number of XSDs and namespaces used in the OAI
> > universe, and I'm not sure harvesters can count on (or really should
> ask)
> > providers to export both in their extended qualified DC and a canonical
> form
> > of qualified DC. Doing so might simplify (slightly) the service
> providers
> > task, but I'm not sure it's a compelling case, especially from the
> > perspective of the data provider. (A complicating consideration is that
> any
> > of the above schemas could actually be used by someone who did just have
> > pure qualified DC -- since all augmentations are entirely optional).
> 
> Seems to me, given the potential that OAI-PMH offers for building
> 'networks of repositories' there are benefits in encouraging applications
> to pass on richest metadata available, ignoring unknown extensions.
> Metadata will be re-harvested by applications that can use extensions.
> 
> Can there be a solution whereby OAI recognises that a single schema
> identified as Qualified Dublin Core might contain local fields? is this
> not analogous to situation in MARC which might contain local fields??
> 
> I have always liked the approach taken in PRISM spec:
> 
> "PRISM-compliant applications MUST NOT throw an error if they encounter
> unknown elements or attributes. They are free to delete or preserve such
> information, although recommended practice is to retain them and pass them
> along. Retaining the information is an architectural principle which helps
> new functionality be established in the presence of older versions of
> software."
> see http://www.prismstandard.org/Pam_1.0/PRISM_1.2h.pdf
> 
> Not sure how far that is achievable with OAI-PMH but it does seem to me to
> recognise the reality of metadata schemas being extended and evolving.
> 
> In addition might there be a barrier in expecting data providers to map
> their 'extended QDC to 'pure QDC' plus 'Simple DC', somewhat going against
> philosophy of OAI trying to make things easy for data providers??
> 
> Rachel
> 
> >
> > Hence my suggestion that harvesters, cross-walks, transformations, and
> other
> > such services might do better to key off of embedded namespaces rather
> than
> > specific XSD or even top-level namespaces. And though clearly data
> providers
> > could go out of their way to import qualified DC namespaces into their
> local
> > XSDs and then not use those namespaces, that seems unlikely -- so I
> disagree
> > with Simeon that harvesters should steer clear of locally augmented
> formats
> > based on qualified DC on such an assumption or for fear they won't be
> able
> > to extract enough useful information from records that maybe do contain
> > additional content in other namespaces. Possibly there's some risk, but
> it
> > seems to me that a dc:title element or dcterms:created refinement still
> > means much the same whether embedded in a canonical qualified DC record
> or
> > in a CDP DC augmented qualified DC record.
> >
> > And I don't see why you couldn't write an XSLT to crosswalk from
> qualified
> > DC to MARC that could be applied not only to records of "pure" qualified
> DC,
> > but also to OLAC DC or NSDL DC, or CDP DC. Obviously such a generic
> > crosswalk would drop local encoding schemes like olac:linguistic-type,
> > olac:linguistic-field, and nsdl:GEM, and refinements like
> > cdp:holdingInstitutions and cdp:thumbnailIdentifier, but for many
> purposes
> > that would be okay, especially if the XSLT were smart enough to take
> > advantage of any xs:substitutionGroup information contained in the XSDs
> > referenced by the instances (e.g., so as to know that
> > cdp:thumbnailIdentifier was a refinement of dc:identifier).
> >
> > It may be a little more work, but given the actual trend to date of data
> > providers wanting to augment qualified DC with local semantics, I think
> > we'll need to build our applications smart enough to deal with such
> > diversity. And if we do that, it doesn't really matter if there is a
> > multiplicity of top-level container schemas for qualified DC (as long as
> > they all reference the appropriate DCMI component namespaces).
> >
> > Tim Cole
> > University of Illinois at UC
> >
> > -----Original Message-----
> > From: oai-implementers-bounces@openarchives.org
> > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> Young,Jeff
> > Sent: Tuesday, August 10, 2004 8:51 AM
> > To: Simeon Warner; oai-implementers@oaisrv.nsdl.cornell.edu
> > Subject: RE: [OAI-implementers] Qualified Dublin Core
> >
> > I agree with Simeon. Lately I've been creating dynamically configured
> web
> > applications built with distributed independent web services (OAI and
> SRW in
> > particular). The more schemas and protocols they have in common, the
> more
> > magic that can happen. DCQ elements hidden behind differing namespace
> > containers and schemas would greatly diminish its value.
> >
> > For example, I am working with Jean Godby on a catalog of XSLT
> crosswalks
> > (http://errol.oclc.org/schemaTrans.oclc.org.search). Redundant
> namespaces
> > will only clutter it up and make it harder for people to choose an
> > appropriate crosswalk from a list when then need one.
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> > > Sent: Monday, August 09, 2004 7:02 PM
> > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > >
> > >
> > > I think the problem with "standard elements in any wrapper" approach
> > > is that a harvester has no easy way to know up-front what it might be
> > > getting if it harvests records in a particular format. Harvesting a
> > > metadata format understood to be "only QDC elements" (nothing else, no
> > > funny
> > > business) gives rather more assurance of intelligibility to a
> > > harvester that understands QDC. A canonical schema seems the simplest
> > > way to indicate this (notwithstanding versioning issues mentioned
> > > earlier by Pete Johnston).
> > >
> > > Cheers,
> > > Simeon
> > >
> > > On Mon, 9 Aug 2004, Timothy W. Cole wrote:
> > > > Jeff-
> > > >
> > > > My take is that OAI shouldn't want to get back in business of
> > > > hosting schemas or namespaces for metadata formats. We went to some
> > > > trouble to
> > > get
> > > > away from that when transitioning from 1.1 to 2.0. A blessed
> > > > application namespaces for qualified DC should be left up to the
> DCMI.
> > > >
> > > > While DCMI decides how they want to handle things (and I know they
> > > > won't
> > > be
> > > > quick), solutions like the one at CCLRC (we've done much the same
> > > > here
> > > for a
> > > > couple of projects) and NSDL are fine. Any namespace-aware OAI
> > > application
> > > > should ignore the locally created namespace and hone in on the dc,
> > > dcterms,
> > > > and dcmitype namespaces and thereby be able to use those elements
> > > without
> > > > any problems. If your OAI service provider respects namespaces, it
> > > shouldn't
> > > > matter what namespace the container element is in -- that's why the
> > > > XML Schemas posted on the DCMI Website were done that way.
> > > >
> > > > Isn't that good enough for harvesting purposes? Are am I missing a
> > > subtle
> > > > consideration that requires a canonical namespace for the container
> > > element?
> > > >
> > > > Tim Cole
> > > > University of Illinois at UC
> > > >
> > > > -----Original Message-----
> > > > From: oai-implementers-bounces@openarchives.org
> > > > [mailto:oai-implementers-bounces@openarchives.org] On Behalf Of
> > > Young,Jeff
> > > > Sent: Monday, August 09, 2004 10:33 AM
> > > > To: Mascord, M (Matthew) ; Young,Jeff;
> > > > oai-implementers@oaisrv.nsdl.cornell.edu
> > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > > >
> > > > Yes, this is the problem. Now I have two to choose from. This one,
> > > > and
> > > the
> > > > one created by NSDL. I'm sure there are others out there. For the
> > > > sake
> > > of
> > > > interoperability, it seems to me that the OAI community should bless
> > > (and
> > > > host?) such an "application profile" schema.
> > > >
> > > > Jeff
> > > >
> > > > > -----Original Message-----
> > > > > From: Mascord, M (Matthew) [mailto:M.Mascord@rl.ac.uk]
> > > > > Sent: Monday, August 09, 2004 11:21 AM
> > > > > To: 'Young,Jeff'; oai-implementers@oaisrv.nsdl.cornell.edu
> > > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > > Subject: RE: [OAI-implementers] Qualified Dublin Core
> > > > >
> > > > > Hi -
> > > > >
> > > > > I am the developer of an OAI compatible institutional repository
> > > > > for the UK research council CCLRC.  The URL is
> > http://epubs.cclrc.ac.uk.
> > > > > We are attempting to capture & make publicly accessible any
> > > > > scientific research that has benefitted from the use of CCLRC's
> > > > > facilities or expertise.  We recently went live on the OAI
> repository
> > network:
> > > > > http://epubs.cclrc.ac.uk/oai?verb=Identify.
> > > > >
> > > > > We provide metadata in both Simple and Qualified Dublin Core but
> > > > > had the same problem as you in finding an authoritative XML schema
> > > > > for Qualified Dublin Core.  In the end we created our own that
> > > > > includes the schema defined at
> > > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/qualifieddc.xsd
> > > > > and described in the Dublin Core Note at
> > > > > http://dublincore.org/schemas/xmls/qdc/2003/04/02/notes/.  This
> > > > > defines a container element into which elements from the dcterms
> > > > > and dc namespaces may be placed.
> > > > >
> > > > > I'm not sure if this is the best approach so would appreciate any
> > > > > feedback on this.  Our OAI implementation can be tested at
> > > > > http://epubs.cclrc.ac.uk/oaitest.
> > > > >
> > > > > Kind Regards,
> > > > > Matthew Mascord
> > > > > e-Library Software Developer, CCLRC, UK
> > > > >
> > > > >
> > > > > > -----Original Message-----
> > > > > > From: oai-implementers-bounces@openarchives.org
> > > > > > [mailto:oai-implementers-bounces@openarchives.org]On Behalf Of
> > > > > > Young,Jeff
> > > > > > Sent: 09 August 2004 16:03
> > > > > > To: oai-implementers@oaisrv.nsdl.cornell.edu
> > > > > > Cc: LeVan,Ralph; Hickey,Thom
> > > > > > Subject: [OAI-implementers] Qualified Dublin Core
> > > > > >
> > > > > >
> > > > > > I'm looking for an XML Schema for Qualified Dublin Core for use
> > > > > > in OAI repositories. I poked around the UIUC OAI Registry, but
> > > > > > all I found was a couple of ad hoc schemas used by repositories
> > > > > > that appear to be defunct.
> > > > > > Ideally, though, the existence and use of such a schema should
> > > > > > be shared across a broad community and not ad hoc.
> > > > > >
> > > > > > Next, I searched in Google and OAForum but all I found was a
> > > > > > reference to a preliminary effort to establish such a schema
> > > > > > (http://www.ukoln.ac.uk/metadata/dcmi/xmlschema/). This
> > > > > > particular document discusses a sample application schema for a
> > > > > > DCQ container, but the implication is that the final schema must
> > > > > > be decided by the specific application (e.g OAI?). Apparently,
> > > > > > this has never been done.
> > > > > >
> > > > > > Can someone provide some guidance for doing this?
> > > > > >
> > > > > > Thanks.
> > > > > >
> > > > > > Jeff
> > > > > >
> > > > > > ---
> > > > > > Jeffrey A. Young
> > > > > > Software Architect
> > > > > > Office of Research, Mail Code 710 OCLC Online Computer Library
> > > > > > Center, Inc.
> > > > > > 6565 Frantz Rd.
> > > > > > Dublin, OH 43017-3395
> > > > > > www.oclc.org
> > > > > >
> > > > > > Voice: 614-764-4342
> > > > > > Voice: 800-848-5878, ext. 4342
> > > > > > Fax: 614-718-7477
> > > > > > Email: jyoung@oclc.org
> > > > > >
> > > > > > _______________________________________________
> > > > > > OAI-implementers mailing list
> > > > > > List information, archives, preferences and to unsubscribe:
> > > > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > > > >
> > > >
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > >
> > > >
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://openarchives.org/mailman/listinfo/oai-implementers
> > > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://openarchives.org/mailman/listinfo/oai-implementers
> >
> >
> 
> 
> --------------------------------------------------------------------------
> -
> Rachel Heery
> UKOLN, University of Bath                       tel: +44 (0)1225 386724
> http://www.ukoln.ac.uk
> --------------------------------------------------------------------------
> European Conference on Digital Libraries (ECDL 2004),
> Bath, UK, 12-17 September 2004: http://www.ecdl2004.org/
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers

From p.johnston at ukoln.ac.uk  Wed Aug 11 13:11:47 2004
From: p.johnston at ukoln.ac.uk (Pete Johnston)
Date: Wed Aug 11 13:11:09 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <Pine.GS4.4.58.0408111201390.11643@lamin.ukoln.ac.uk>
Message-ID: <004f01c47fc6$48c049b0$2392268a@ulpcpj>

Rachel said:

> I have always liked the approach taken in PRISM spec:
> 
> "PRISM-compliant applications MUST NOT throw an error if they 
> encounter unknown elements or attributes. They are free to 
> delete or preserve such information, although recommended 
> practice is to retain them and pass them along. Retaining the 
> information is an architectural principle which helps new 
> functionality be established in the presence of older 
> versions of software." see 
> http://www.prismstandard.org/Pam_1.0/PRISM_1.2h.pdf

Hmmmmm, but PRISM uses RDF/XML for its serialisation. It seems to me the
couple of sentences previous to the above are crucial:

====
PRISM descriptions are compliant with the RDF constraints on the XML
syntax. Thus, they begin with the
rdf:RDF element. Because PRISM obeys the RDF constraints on XML
structure, implementations are
guaranteed to correctly parse even unknown elements and attributes. 
====

I tend to agree with Jeff:

> My feeling is that if someone wants to mix DCQ with other 
> stuff, the container deserves its own namespace. Otherwise, 
> there is no standard way to recognize the significance of the 
> mix when the record escapes the confines of its peculiar context.

The provision of a container schema for a "qualified DC" metadata format
which (via some XSD wildcard wizardy) permits arbitrary XML child
elements (N.B. XML elements not RDF properties), just as long as one
child element associated with a DC XML namespace is present, implies (to
me, at least) that there is some predictable interpretation (in terms of
the DC property/value/encoding-scheme principles) of what may in
practice turn out to be a completely adhoc XML sub-tree structure.

Pete


From r.heery at ukoln.ac.uk  Wed Aug 11 13:36:33 2004
From: r.heery at ukoln.ac.uk (Rachel Heery)
Date: Wed Aug 11 13:37:07 2004
Subject: [OAI-implementers] Qualified Dublin Core
In-Reply-To: <004f01c47fc6$48c049b0$2392268a@ulpcpj>
References: <004f01c47fc6$48c049b0$2392268a@ulpcpj>
Message-ID: <Pine.GS4.4.58.0408111826250.11643@lamin.ukoln.ac.uk>

On Wed, 11 Aug 2004, Pete Johnston wrote:

> The provision of a container schema for a "qualified DC" metadata format
> which (via some XSD wildcard wizardy) permits arbitrary XML child
> elements (N.B. XML elements not RDF properties), just as long as one
> child element associated with a DC XML namespace is present, implies (to
> me, at least) that there is some predictable interpretation (in terms of
> the DC property/value/encoding-scheme principles) of what may in
> practice turn out to be a completely adhoc XML sub-tree structure.

Sorry, I thought OAI service providers knowing a record was based on
qualified DC would be clever enough to throw away XML elements they did
not recognise, if they so wished.

btw from previous mail I agree individual application profiles should be
indentified uniquely, but thought there could be some broader
identification of qualified DC schemas analogous to the way OAI accepts
different MARC formats using oai_marc (although I realise that oai_marc is
now deprecated).

Anyway I realise I am treading on thin ice mailing to an implementors
list, and as my vacation is starting right now, I will not worry about
this for a while!

Rachel
>
> Pete
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
>
>


---------------------------------------------------------------------------
Rachel Heery
UKOLN, University of Bath                       tel: +44 (0)1225 386724
http://www.ukoln.ac.uk
--------------------------------------------------------------------------
European Conference on Digital Libraries (ECDL 2004),
Bath, UK, 12-17 September 2004: http://www.ecdl2004.org/


From crawley at dstc.edu.au  Wed Aug 11 22:36:06 2004
From: crawley at dstc.edu.au (Stephen Crawley)
Date: Wed Aug 11 22:36:18 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: Message from "Timothy W. Cole" <t-cole3@uiuc.edu> of "Tue,
	10 Aug 2004 14:46:31 EST."
	<200408101946.i7AJkWrI026472@expredir4.cites.uiuc.edu> 
Message-ID: <200408120235.i7C2Zoxw018008@piglet.dstc.edu.au>


Folks,

A canonical container XSD for qualified DC would be useful, but it
doesn't really solve the problem, IMO.

Why?  Because many (most) DC-based metadata collections use elements and/
or refinements that are not in DCQ.  These can be extensions mandated
by some other standard (e.g. AGLS, EdNA, etc) or site-specific
extensions. So, while oai schemas for exchanging DCQ, AGLS, EdNA, etc
would be useful, the larger problem is how to exchange metadata with an
arbitrary metadata schema ... without defining yet another XML schema
to transport the records.

The solution (as we see it) is to use XSD that is *insensitive* to the
metadata's schema.  In the simple model, the OAI repository assembles
XML records containing whatever elements it is prepared to publish. The
OAI client would then sort through the supplied elements, throwing away
any that it doesn't want / understand, and massaging others as required.
Then the client validates the filtered records against its own metadata
schema before it decides what to do with them.

The problem of elements meaning different things in different schemas
is a bit tricky.  However, you can get some traction if each record's 
metadata schema identifier is included in the record.

For info: I've attached the XSD schema that DSTC's MetaSuite system uses
for passing metadata records between Broker instances over OAI.  The XSD
is not suitable for general use because it contains a lot of MetaSuite
specific admin fields.  However, it illustrates the approach. The key
bits of the XML schema are the "schema" attribute and the "element"
element.  The latter represents the element's prefix + name + refinement
as the "id" attribute.

If anyone is interested in developing an OAI spec for schema-independent
metadata interchange, please drop me a line.

-- Steve

+----------------------------------+----------------------------------------
| Stephen Crawley                  | MetaSuite Project Leader
| Level 7, GP South Building (78)  | Distributed Systems Technology CRC
| Staff House Road                 | Tel   : +61 7 3365 4310
| The University of Queensland     | Fax   : +61 7 3365 4311
| Queensland 4072                  | Email : crawley@dstc.edu.au
| Australia                        | WWW   : http://www.dstc.edu.au
|                                  | DSTC is the Australian W3C Office
+----------------------------------+----------------------------------------

-------------- next part --------------
A non-text attachment was scrubbed...
Name: XmlSchemaReg.xsd
Type: application/octet-stream
Size: 4674 bytes
Desc: XmlSchemaReg.xsd
Url : http://openarchives.org/pipermail/oai-implementers/attachments/20040812/f323acb1/XmlSchemaReg.obj
From jyoung at oclc.org  Thu Aug 12 09:48:28 2004
From: jyoung at oclc.org (Young,Jeff)
Date: Thu Aug 12 09:48:48 2004
Subject: [OAI-implementers] Qualified Dublin Core 
Message-ID: <E5431CF93E29F9478878F623E5B9CE9809DF7516@oa3-server.oa.oclc.org>

Speaking only for myself as a service provider, I doubt that I will be
interested in a generic container of "things". I simply don't have the time
or patience to figure out what's what in a blob of data. Including a
"schema" attribute and "element" element might help, but the investigation
still sounds difficult. In addition, my sense is that taking the easy route
and blindly pulling DC and DCQ elements from the blob (or elements from any
other namespace) will produce a meaningless jumble 9 times out of 10. I
could be wrong, though.

Jeff

> -----Original Message-----
> From: Stephen Crawley [mailto:crawley@dstc.edu.au]
> Sent: Wednesday, August 11, 2004 10:36 PM
> To: oai-implementers@oaisrv.nsdl.cornell.edu; crawley@piglet.dstc.edu.au
> Subject: Re: [OAI-implementers] Qualified Dublin Core
> 
> 
> Folks,
> 
> A canonical container XSD for qualified DC would be useful, but it
> doesn't really solve the problem, IMO.
> 
> Why?  Because many (most) DC-based metadata collections use elements and/
> or refinements that are not in DCQ.  These can be extensions mandated
> by some other standard (e.g. AGLS, EdNA, etc) or site-specific
> extensions. So, while oai schemas for exchanging DCQ, AGLS, EdNA, etc
> would be useful, the larger problem is how to exchange metadata with an
> arbitrary metadata schema ... without defining yet another XML schema
> to transport the records.
> 
> The solution (as we see it) is to use XSD that is *insensitive* to the
> metadata's schema.  In the simple model, the OAI repository assembles
> XML records containing whatever elements it is prepared to publish. The
> OAI client would then sort through the supplied elements, throwing away
> any that it doesn't want / understand, and massaging others as required.
> Then the client validates the filtered records against its own metadata
> schema before it decides what to do with them.
> 
> The problem of elements meaning different things in different schemas
> is a bit tricky.  However, you can get some traction if each record's
> metadata schema identifier is included in the record.
> 
> For info: I've attached the XSD schema that DSTC's MetaSuite system uses
> for passing metadata records between Broker instances over OAI.  The XSD
> is not suitable for general use because it contains a lot of MetaSuite
> specific admin fields.  However, it illustrates the approach. The key
> bits of the XML schema are the "schema" attribute and the "element"
> element.  The latter represents the element's prefix + name + refinement
> as the "id" attribute.
> 
> If anyone is interested in developing an OAI spec for schema-independent
> metadata interchange, please drop me a line.
> 
> -- Steve
> 
> +----------------------------------+--------------------------------------
> --
> | Stephen Crawley                  | MetaSuite Project Leader
> | Level 7, GP South Building (78)  | Distributed Systems Technology CRC
> | Staff House Road                 | Tel   : +61 7 3365 4310
> | The University of Queensland     | Fax   : +61 7 3365 4311
> | Queensland 4072                  | Email : crawley@dstc.edu.au
> | Australia                        | WWW   : http://www.dstc.edu.au
> |                                  | DSTC is the Australian W3C Office
> +----------------------------------+--------------------------------------
> --


From t-cole3 at uiuc.edu  Thu Aug 12 13:24:38 2004
From: t-cole3 at uiuc.edu (Timothy W. Cole)
Date: Thu Aug 12 13:24:52 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: <200408120235.i7C2Zoxw018008@piglet.dstc.edu.au>
Message-ID: <200408121724.i7CHOc4K008180@expredir3.cites.uiuc.edu>

Comments embedded below 

> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org 
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf 
> Of Stephen Crawley
> Sent: Wednesday, August 11, 2004 9:36 PM
> Subject: Re: [OAI-implementers] Qualified Dublin Core 
> 
> Folks,
> 
> A canonical container XSD for qualified DC would be useful, 
> but it doesn't really solve the problem, IMO.
> 
> Why?  Because many (most) DC-based metadata collections use 
> elements and/ or refinements that are not in DCQ.  These can 
> be extensions mandated by some other standard (e.g. AGLS, 
> EdNA, etc) or site-specific extensions. So, while oai schemas 
> for exchanging DCQ, AGLS, EdNA, etc would be useful, the 
> larger problem is how to exchange metadata with an arbitrary 
> metadata schema ... without defining yet another XML schema 
> to transport the records.
> 
> The solution (as we see it) is to use XSD that is 
> *insensitive* to the metadata's schema.  

I'm not sure what is meant here. Seem to be implying a way that I can send
OAI harvesters metadata consisting entirely of elements that have no
community-standard semantic labels, which seems counter-intuitive. Even if
some of my metadata elements make sense only to my local application, don't
I want to label at least those other elements in my record that do
correspond to community-standard semantics with the namespace and element
names of that standard semantic schema(s)?  

> In the simple model, 
> the OAI repository assembles XML records containing whatever 
> elements it is prepared to publish. The OAI client would then 
> sort through the supplied elements, throwing away any that it 
> doesn't want / understand, and massaging others as required.
> Then the client validates the filtered records against its 
> own metadata schema before it decides what to do with them.

I agree with Jeff to this extent, if none of the metadata elements in a
harvested metadata record are labeled with an element name I know prefixed
by a metadata schema namespace I know, I'll have to throw all the elements
away, and the record will therefore be worthless to me.

> The problem of elements meaning different things in different 
> schemas is a bit tricky.  

Yes, an element called <spatial> might mean one thing in metadata schema A
and something quite different in metadata schema B. As a harvester, if I
encounter an element <spatial> that is not tied to the dcterms schema and
namespace (or some other namespace I know) I would always discard it rather
than assume it means the same thing as <dcterms:spatial>. It's not a safe
assumption that just because something is labeled <spatial> in a local
schema it means the same thing as <spatial> in dcterms. That's why XML
namespaces are so handy. The data provider can explicitly and unambiguously
tie an element in his or her record to one specific, community-standard
metadata semantic set.

> However, you can get some traction 
> if each record's metadata schema identifier is included in the record.
>
 
But XML and XML Schema Language already have standard, well-defined
mechanisms (namespaces and the ability to import or include other XSDs
within you XSD) that make it easy to identify the semantic set with which
any given element in a metadata instance is associated. Why not just use
those XML standard approaches?

A problem can occur when semantics overlap such that <spatial> does mean the
same in both schema A and schema B. The most common way around this is to
repeat the element (e.g., include both <A:spatial> and <B:spatial>), which
though perhaps not elegant works just fine. 

In some other instances of overlaps between schemas, the XML schema language
substitutionGroup attribute can also be used to good effect -- though it
requires a slightly more sophisticated algorithm on the part of the
harvester to recognize.

> For info: I've attached the XSD schema that DSTC's MetaSuite 
> system uses for passing metadata records between Broker 
> instances over OAI.  The XSD is not suitable for general use 
> because it contains a lot of MetaSuite specific admin fields. 
>  However, it illustrates the approach. The key bits of the 
> XML schema are the "schema" attribute and the "element"
> element.  The latter represents the element's prefix + name + 
> refinement as the "id" attribute.
> 

Well the schema you attached failed XML well-formedness (apparent typos on
lines 64, 102, and 110, also appear to have left out the attribute name
[i.e., "value"] on lines 110, 111, and 117). There also appears to be a
glitch (at least according to XSV) with complexType definition of
REG:RecordType. So, I'm not sure I exactly understand what you're trying to
do with your schema. But from looking at it and from what you said about in
your note, it seems to me like just another way to do much the same thing
that can be done in a more XML standard way by importing/including other
schemas and namespaces of interest in your local XSD and labeling the
elements in your metadata record instances accordingly. 


> If anyone is interested in developing an OAI spec for 
> schema-independent metadata interchange, please drop me a line.
> 

I'm not sure of the benefit of the approach represented by your schema. You
provide some additional attributes that might be of interest for other
purposes, but for determining whether an element labeled <spatial> in your
metadata record means the same thing as <dcterms:spatial>, I'd rather rely
on conventional XML namespace methods.

Tim Cole
University of Illinois at UC 



> -- Steve
> 
> +----------------------------------+--------------------------
> ----------
> +----------------------------------+----
> | Stephen Crawley                  | MetaSuite Project Leader
> | Level 7, GP South Building (78)  | Distributed Systems 
> Technology CRC
> | Staff House Road                 | Tel   : +61 7 3365 4310
> | The University of Queensland     | Fax   : +61 7 3365 4311
> | Queensland 4072                  | Email : crawley@dstc.edu.au
> | Australia                        | WWW   : http://www.dstc.edu.au
> |                                  | DSTC is the Australian W3C Office
> +----------------------------------+--------------------------
> ----------
> +----------------------------------+----
> 
> 


From t-cole3 at uiuc.edu  Thu Aug 12 13:28:26 2004
From: t-cole3 at uiuc.edu (Timothy W. Cole)
Date: Thu Aug 12 13:28:29 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE9809DF7516@oa3-server.oa.oclc.org>
Message-ID: <200408121728.i7CHSQEC008773@expredir3.cites.uiuc.edu>

 
Jeff-

This is partly a matter of striking balance between data provider and
service provider workload.

As another service provider, I would agree that just because an element in a
harvested metadata record is labeled <spatial> in some application-specific
XSD, it doesn't mean that I can assume that the element means the same thing
as <dcterms:spatial>. (See also my own reply to Stephen Crawley.)

However, I disagree that I should treat the contents of an element in a
metadata record that is explicitly labeled <dcterms:spatial> (where dcterms:
is unambiguously the prefix for the appropriate DCMI namespace) as any less
meaningful because it's embedded within a record containing elements from
multiple namespaces, including some with which I may not be familiar. While
arguably the problem can get more complex when dealing with schemas defining
elements with highly complex content models, with dc, dcterms, dcmitypes, I
don't think a lot of ambiguity creeps in just because elements of additional
namespaces are included. The contents of an element labeled
<dcterms:spatial> should still be making the same kind of assertion about
the spatial coverage of the object being described regardless of the
inclusion of sibling elements in other namespaces.

There could of course be some adverse indicators. For instance, I would
prefer that the XSD against which the harvested record validates makes
mention (directly or through indirection) of the dcterms namespace and XSD
(rather than for example allows inclusion by invoking #any or some similar
mechanism). To me that suggests that the data provider really means to be
including dcterms semantics. 

I suppose I might also be wary of <dcterms:spatial> appearing at other than
the first-level of the metadata record XML hierarchy. That could imply the
assertion is not about the primary object being described (which is where
RDF would be helpful, too bad RDF is so antithetical to certain features of
XML Schema Language like xsi:type).

And we can probably argue about whether you risk major problems when you
ignore encoding schemes your application doesn't know about. 

But otherwise, I don't think it's a major leap of faith to take elements
represented as being in namespaces known to me at face value. Certainly I'd
rather harvest the qualified DC based OLAC, NSDL, and CDP formatted records
than settle for their dumbed down simple DC records. I'm confident in those
instances that <dcterms:spatial> means <dcterms:spatial> in spite of the
fact that their records also may include some additional non-DC semantics.

And also I don't think it unreasonably demanding for my application to
inspect XSDs returned in response to ListMetadataFormats verb, even to point
of inspecting one or two levels of imported XSDs to discover namespaces
being invoked of possible interest to me. Of course that gets back to the
balancing act of who should do what between data providers and service
providers. Perhaps in this instance I'm being too liberal in trying to
minimize effort of data providers.

Tim Cole
University of Illinois at UC 


> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org 
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf 
> Of Young,Jeff
> Sent: Thursday, August 12, 2004 8:48 AM
> To: Stephen Crawley; 
> oai-implementers@oaisrv.nsdl.cornell.edu; crawley@piglet.dstc.edu.au
> Subject: RE: [OAI-implementers] Qualified Dublin Core 
> 
> Speaking only for myself as a service provider, I doubt that 
> I will be interested in a generic container of "things". I 
> simply don't have the time or patience to figure out what's 
> what in a blob of data. Including a "schema" attribute and 
> "element" element might help, but the investigation still 
> sounds difficult. In addition, my sense is that taking the 
> easy route and blindly pulling DC and DCQ elements from the 
> blob (or elements from any other namespace) will produce a 
> meaningless jumble 9 times out of 10. I could be wrong, though.
> 
> Jeff
> 


From p.johnston at ukoln.ac.uk  Thu Aug 12 14:19:47 2004
From: p.johnston at ukoln.ac.uk (Pete Johnston)
Date: Thu Aug 12 14:19:14 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: <200408121728.i7CHSQEC008773@expredir3.cites.uiuc.edu>
Message-ID: <002001c48098$f3232e90$2392268a@ulpcpj>

Tim,

Apologies for heavy snipping...
 
> But otherwise, I don't think it's a major leap of faith to 
> take elements represented as being in namespaces known to me 
> at face value. Certainly I'd rather harvest the qualified DC 
> based OLAC, NSDL, and CDP formatted records than settle for 
> their dumbed down simple DC records. I'm confident in those 
> instances that <dcterms:spatial> means <dcterms:spatial> in 
> spite of the fact that their records also may include some 
> additional non-DC semantics.

I think your leap of faith is justified in these cases because (I guess)
you (as service provider) know that those formats are explicitly based
on the conventions suggested in the DC-in-XML guidelines (and so
represent resource-property-value statements).

But I must admit I'd feel slightly nervous about assuming that those
conventions have been applied in any unknown XML format that I came
across even in the OAI-PMH context - and even if I did encounter an XML
element named dcterms:spatial associated with the appropriate XML
namespace name in the first level of the tree structure. OK, given the
context, the chances are it does carry the meaning you expect, but it
seems to me that unless the data provider has said that explicitly,
then, strictly speaking, a service provider is left to guess.

The further we get into service providers trying to make decisions based
on what are really unknown semantics, the more I feel we are on very,
very shakey ground. If that is the direction we are heading, then (it
seems to me) we really need the foundations of a framework like RDF to
be able to do so with any degree of reliability. The DC-in-XML
guidelines do not (IMHO) provide that framework.  
 
> And also I don't think it unreasonably demanding for my 
> application to inspect XSDs returned in response to 
> ListMetadataFormats verb, even to point of inspecting one or 
> two levels of imported XSDs to discover namespaces being 
> invoked of possible interest to me. Of course that gets back 
> to the balancing act of who should do what between data 
> providers and service providers. Perhaps in this instance I'm 
> being too liberal in trying to minimize effort of data providers.

Pete


From jyoung at oclc.org  Thu Aug 12 22:03:02 2004
From: jyoung at oclc.org (Jeffrey A. Young)
Date: Thu Aug 12 21:03:16 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: <200408121728.i7CHSQEC008773@expredir3.cites.uiuc.edu>
Message-ID: <200408130103.i7D137Ia025985@ms-smtp-04-eri0.ohiordc.rr.com>

Tim wrote:

> I suppose I might also be wary of <dcterms:spatial> appearing at other
> than
> the first-level of the metadata record XML hierarchy. That could imply the
> assertion is not about the primary object being described....

This is what I was thinking of when I said ripping DC and DCQ from
uncontrolled blobs of data would result in a jumble. I've been working with
the METS schema lately, and can't imagine the DC elements being useful when
yanked from their structural context. As you suggested, though, I could feel
fairly confident if I limited the extraction to DC/DCQ elements that occur
at the top-most level.

Jeff



From crawley at dstc.edu.au  Thu Aug 12 21:09:09 2004
From: crawley at dstc.edu.au (Stephen Crawley)
Date: Thu Aug 12 21:09:19 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: Message from "Young,Jeff" <jyoung@oclc.org> of "Thu,
	12 Aug 2004 09:48:28 -0400."
	<E5431CF93E29F9478878F623E5B9CE9809DF7516@oa3-server.oa.oclc.org>
Message-ID: <200408130108.i7D18rxw004732@piglet.dstc.edu.au>


Hi Jeff,

You wrote:
> Speaking only for myself as a service provider, I doubt that I will be
> interested in a generic container of "things". I simply don't have the
> time or patience to figure out what's what in a blob of data.
> Including a "schema" attribute and "element" element might help, but
> the investigation still sounds difficult. In addition, my sense is
> that taking the easy route and blindly pulling DC and DCQ elements
> from the blob (or elements from any other namespace) will produce a
> meaningless jumble 9 times out of 10. I could be wrong, though.

I agree that it would be silly to do what you describe.  But that's
not what I'm talking about.

1)  I am not talking about random blobs of data.  I'm talking about
    "DC-like" metadata which consists of:	

       *  one (or more) published schema identifiers,
       *  a collection of element/encoding/language/value tuples
	  where the element name, encoding and language tags are
          defined by the schema.

    If I recognize the schema identifier as identifying a schema that
    is derived from DCQ [+], then I have a reasonable basis for inferring 
    the meaning of an element whose name is (say) DC.date.published.

2)  I am not talking about randomly pulling out elements.  I'm talking
    about extracting elements that are meaningful to my metadata collection
    from records whose schema identifiers my software recognizes.  Indeed,
    I may well use different filtering for different schemas, or even
    for different source repositories.
 
    The validation step then decides if the filtered record is acceptable.
    For example it checks

       *  that all elements required BY MY SCHEMA are present,
       *  that all encodings, language known, and
       *  that the values for the elements acceptable according to 
          the specified encodings.

2a) Another alternative is to retain the "unknown" elements from the 
    harvested records.  You can separately decide whether or not to 
    show them to end-users or to pass them on to other repositories.
    
    This is the roughly model we use in HotMeta / MetaSuite.  Our
    repository understands multiple metadata schemas, and can store 
    records that conform to any ... or none of them.  When an end-user
    does a metadata query, the results show a configurable context
    dependent subset of the available elements.

3)  I am not talking about harvesting metadata from random places.
    Rather, I'm talking about harvesting from reputable metadata 
    repositories. I'm assuming that:

       *  the repository owner is not going to wantonly abuse the
          schemas he/she purports to use; e.g. systematically putting 
          the author name in the DC.Title, and
       *  the repository owner has adequate quality control in place
          to ensure that the element values are reasonably accurate.

    If these are not true, it is not sensible to harvest metadata from
    the repository in question. 

[+]  If you send me a schema identifier for some schema FNORD that I've
never heard of, I probably cannot do anything with your metadata. If you
>>also<< send me that schema identifier for DCQ, I know that the records
are DCQ compatible (if you ignore non-DCQ elements).  Alternatively, if
the schema identifier for FNORD points at a schema definition that says
the FNORD is an extension to DCQ, I can work this out for myself, either
manually or (maybe in the future) automatically.  Then I can configure
my software to treat FNORD records as DCQ records ... or do something
else. 

Obviously, this will work better if there is an agreed standard for
specifying schemas that includes some way of specifying the parentage of
a schema and the semantic relationships with elements in the ancestor
schemas.  We don't need a complete semantic information, just sufficient
to say that (say) that the meaning of DC.Title in an DC record subsumes
the meaning of DC.Title in AGLS (or vice-versa).

-- Steve

+----------------------------------+----------------------------------------
| Stephen Crawley                  | MetaSuite Project Leader
| Level 7, GP South Building (78)  | Distributed Systems Technology CRC
| Staff House Road                 | Tel   : +61 7 3365 4310
| The University of Queensland     | Fax   : +61 7 3365 4311
| Queensland 4072                  | Email : crawley@dstc.edu.au
| Australia                        | WWW   : http://www.dstc.edu.au
|                                  | DSTC is the Australian W3C Office
+----------------------------------+----------------------------------------



From crawley at dstc.edu.au  Thu Aug 12 22:33:21 2004
From: crawley at dstc.edu.au (Stephen Crawley)
Date: Thu Aug 12 22:33:34 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: Message from "Timothy W. Cole" <t-cole3@uiuc.edu> of "Thu,
	12 Aug 2004 12:24:38 EST."
	<200408121724.i7CHOc4K008180@expredir3.cites.uiuc.edu> 
Message-ID: <200408130233.i7D2X5xw012918@piglet.dstc.edu.au>


Hi Tim,

> I'm not sure what is meant here. Seem to be implying a way that I can send
> OAI harvesters metadata consisting entirely of elements that have no
> community-standard semantic labels, which seems counter-intuitive. Even if
> some of my metadata elements make sense only to my local application, don't
> I want to label at least those other elements in my record that do
> correspond to community-standard semantics with the namespace and element
> names of that standard semantic schema(s)?  

That is not how it works.

The schema identifier supplied with the harvested record IMPLICITLY
takes you to a set of community-standard semantic labels for element
names, encodings and language that are used in the record.  Provided
that you / your software understands this space, you then (try to)
map from the semantic space of labels (and values) of the harvest
record to the semantic space of your own metadata schema.  If you
can't, then the record is not immediately useful to you.

> > In the simple model, 
> > the OAI repository assembles XML records containing whatever 
> > elements it is prepared to publish. The OAI client would then 
> > sort through the supplied elements, throwing away any that it 
> > doesn't want / understand, and massaging others as required.
> > Then the client validates the filtered records against its 
> > own metadata schema before it decides what to do with them.
> 
> I agree with Jeff to this extent, if none of the metadata elements in a
> harvested metadata record are labeled with an element name I know prefixed
> by a metadata schema namespace I know, I'll have to throw all the elements
> away, and the record will therefore be worthless to me.

Agreed.

> > The problem of elements meaning different things in different 
> > schemas is a bit tricky.  
> 
> Yes, an element called <spatial> might mean one thing in metadata schema A
> and something quite different in metadata schema B. As a harvester, if I
> encounter an element <spatial> that is not tied to the dcterms schema and
> namespace (or some other namespace I know) I would always discard it rather
> than assume it means the same thing as <dcterms:spatial>. It's not a safe
> assumption that just because something is labeled <spatial> in a local
> schema it means the same thing as <spatial> in dcterms. 

Obviously!  Performing ANY mapping / filtering when you do not know
the relationship between the schema of the source and target schemas
is fundamentally unsound.

> ... That's why XML
> namespaces are so handy. The data provider can explicitly and unambiguously
> tie an element in his or her record to one specific, community-standard
> metadata semantic set.

I disagree.  The XML namespaces (i.e. OAI record formats) are actually a
LOSSY way of expressing semantics.  Or at least that's what happens in
practice ... when people try to shoe-horn metadata into some existing
OAI record schema that isn't quite right.

My point is that a real metadata schema includes something that says
what the elements, refinements, encodings, etc all mean.   Currently,
that something is usually English text, but in the future it might
be augmented with machine readable cross-references to standard thesauri,
ontologies, etcetera.

Current day OAI-style XML schemas are not metadata schemas.  Rather they
are formats for transporting metadata records that may (or may not)
fully conform to some real metadata schema.   Other formats include RDF,
HTML meta tags, domain specific formats as in MARC and ANZLIC, and even
clunky ad-hoc mappings to spread-sheets.

> > However, you can get some traction 
> > if each record's metadata schema identifier is included in the record.
> >
>  
> But XML and XML Schema Language already have standard, well-defined
> mechanisms (namespaces and the ability to import or include other XSDs
> within you XSD) that make it easy to identify the semantic set with which
> any given element in a metadata instance is associated. Why not just use
> those XML standard approaches?

See above.  XML schemas are not metadata schemas.  And namespace importing
is not rich enough to express the subtle semantic relationships that can
exist between different metadata schemas.

If we were to treat XML schemas as defacto metadata schemas, then anyone
who manages the "primary production" of metadata might need to define
their own XML schema.  Imagine what impact this would have in terms of
"balkanization" of the OAI harvesting world.

(Note: this is a real issue.  Nearly all of our customers have defined
their own metadata schemas. These are typically based on DCQ or AGLS,
but most have additional elements and / or encoding schemes, and most
refine the meaning of the standard elements in subtle ways.)

What I am proposing is a way to avoid this balkanization by defining a
way to interchange metadata independent of its metadata schema. What an
OAI client does with this metadata is ... up to the client. If the
client understands the source metadata schema, it could try to map the
records elements, etcetera.  Alternatively, the client could simply
store the records as is including the elements, encodings, and values
that it does not understand or that it thinks are invalid.  

> Well the schema you attached failed XML well-formedness (apparent typos on
> lines 64, 102, and 110, also appear to have left out the attribute name
> [i.e., "value"] on lines 110, 111, and 117). There also appears to be a
> glitch (at least according to XSV) with complexType definition of
> REG:RecordType. So, I'm not sure I exactly understand what you're trying to
> do with your schema. But from looking at it and from what you said about in
> your note, it seems to me like just another way to do much the same thing
> that can be done in a more XML standard way by importing/including other
> schemas and namespaces of interest in your local XSD and labeling the
> elements in your metadata record instances accordingly. 

All I can say is that it is sufficiently well-formed for the XML parsers
in JDK 1.4.2 / jaxp-1.2 to understand it ...

-- Steve

+----------------------------------+----------------------------------------
| Stephen Crawley                  | MetaSuite Project Leader
| Level 7, GP South Building (78)  | Distributed Systems Technology CRC
| Staff House Road                 | Tel   : +61 7 3365 4310
| The University of Queensland     | Fax   : +61 7 3365 4311
| Queensland 4072                  | Email : crawley@dstc.edu.au
| Australia                        | WWW   : http://www.dstc.edu.au
|                                  | DSTC is the Australian W3C Office
+----------------------------------+----------------------------------------


From WSimpson at wiley.co.uk  Fri Aug 13 08:51:27 2004
From: WSimpson at wiley.co.uk (WSimpson@wiley.co.uk)
Date: Fri Aug 13 08:52:45 2004
Subject: [OAI-implementers] Will Simpson is out of the office.
Message-ID: <OF9A434C0A.D62180E0-ON80256EEF.0046A0CD-80256EEF.0046A0E2@wiley.co.uk>





I will be out of the office starting  13/08/2004 and will not return until
31/08/2004.

I will respond to your message when I return.

Please contact ukcsjrnl@wiley.co.uk for matters relating to journals
production. For all other urgent matters please contact Nicki Boyd
(nboyd@wiley.co.uk) or John Elbourne (jelbourn@wiley.co.uk).


From t-cole3 at uiuc.edu  Fri Aug 13 17:44:57 2004
From: t-cole3 at uiuc.edu (Timothy W. Cole)
Date: Fri Aug 13 17:45:13 2004
Subject: [OAI-implementers] Qualified Dublin Core 
In-Reply-To: <200408130233.i7D2X5xw012918@piglet.dstc.edu.au>
Message-ID: <200408132144.i7DLiv7p013638@expredir3.cites.uiuc.edu>

> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org 
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf 
> Of Stephen Crawley
> Sent: Thursday, August 12, 2004 9:33 PM
> Subject: Re: [OAI-implementers] Qualified Dublin Core 
> 
> Hi Tim,
> ...<snip>
> > ... That's why XML
> > namespaces are so handy. The data provider can explicitly and 
> > unambiguously tie an element in his or her record to one specific, 
> > community-standard metadata semantic set.
> 
> I disagree.  The XML namespaces (i.e. OAI record formats) are 
> actually a LOSSY way of expressing semantics.  Or at least 
> that's what happens in practice ... when people try to 
> shoe-horn metadata into some existing OAI record schema that 
> isn't quite right.

XML Namespaces pre-date OAI. XML Namespace is a recommendation of the W3C
(see http://www.w3c.org/TR/xml-names11/). OAI-PMH exploits XML Namespaces,
but so do many (if not most) other large-scale XML applications today. XML
Namespaces are not peculiar to OAI-PMH and are in no way synonymous with OAI
record formats.

> 
> My point is that a real metadata schema includes something that says
> what the elements, refinements, encodings, etc all mean.   Currently,
> that something is usually English text, but in the future it 
> might be augmented with machine readable cross-references to 
> standard thesauri, ontologies, etcetera.
>

Yes, real metadata SCHEMES should be thoroughly defined and it would be even
nicer if they were all registered. I was not suggesting that the W3C XML
Schema Language be used as a primary way to define (in human terms) the
semantics of any metadata scheme. More appropriate technologies and methods
for defining / describing semantics exist and/or are in development (e.g.,
RDF Schema and OWL -- and what you're doing, I gather). At one time DCMI
used attributes suggested by the ISO/IEC 11179 Specification and
Standardization of Data Elements as a way to define DC semantics in human
understandable terms. (The multi-part 11179 standard is available free from
www.jtc1.org -- part 3 updated in 2003, about metadata registries, is
interesting relative to this discussion albeit longwinded and a bit dull).
 
> Current day OAI-style XML schemas are not metadata schemas.  
> Rather they are formats for transporting metadata records 
> that may (or may not)
> fully conform to some real metadata schema.   Other formats 
> include RDF,
> HTML meta tags, domain specific formats as in MARC and 
> ANZLIC, and even clunky ad-hoc mappings to spread-sheets.
> ...<snip>

Again, the W3C XML Schema Language predates OAI-PMH and is used for many
purposes other than OAI-PMH. The XML Schema Language conformant XSDs
required by OAI-PMH are intended to provide a means by which metadata
instances can be validated (in an XML sense). XML is the format, XML Schema
Language provides a means to validate that a set of XML metadata instances
(i.e., harvested XML metadata records) correctly use (in an XML sense) a
pre-defined arrangement of element names and attributes. XML Schema Language
is not an especially good method for validating correctness of the real use
of semantics in XML metadata instances, although it does have some crude
capabilities in that regard (e.g., you can't introduce a tag name not
mentioned in the XSD, other than from another namespace, and then only if
allowed by the XSD).

So I think we're arguing apples and oranges here. 

I think the confusion stems from fact we're each looking at different
aspects of the problem. My concern is in being able to recognize that most
or all of the metadata elements in a harvested metadata record come from a
metadata scheme (a set of metadata semantics) with which I'm already
familiar (e.g., qualified Dublin Core). How I learned about that metadata
scheme is a separate issue and not of interest to me at the moment. The
question is how do I look at a metadata record and know which of the
elements it contains are qualified DC used in the way I would expect to
describe a particular information resource. I'm not interested in elements
that aren't qualified DC, or can't at least be immediately, simply,
automatically, and safely mapped to qualified DC.

If a harvested metadata record explicitly references the official, canonical
XML Namespace and XSD for qualified Dublin Core, and if the metadata record
validates against that canonical XSD, I can be pretty certain.
Unfortunately, no such canonical XML Namespace or XSD for qualified Dublin
Core currently exists. Instead, DCMI has posted 3 separate XSDs, each
associated with its own XML Namespace, which together name all the elements
and attributes currently included in qualified DC. 

My contention is that if I run across a metadata record which makes use of
the 3 canonical component XML Namespaces for qualified DC, then I should
have good confidence that I will be able to extract out from that metadata
record qualified DC elements that I know and understand -- even if that
record references some other XML Namespace for its top-level element and
claims conformance to some other XSD (previously unknown to me). The
elements of interest to me will be labeled (in the standard XML fashion)
with prefixes tied to the 3 canonical XML Namespaces associated with
qualified DC, so I'll still be able to identify which elements come from
qualified DC. 

The question is how reasonable and safe an assumption is that? Obviously if
the previously unknown XSD imports only the 3 DCMI XML Namespaces and
associated XSDs and adds no semantics of its own other than a top-level
container element, I can be highly confident. Such an XSD would allow no
foreign semantics -- essentially all metadata records conforming to such an
XSD could contain would be qualified DC. It wouldn't matter that I didn't
previously know of the container element XML Namespace or its XSD.

On the other hand, if the previously unknown XSD imports 25 other XML
Namespaces and associated XSDs, and limits the use of qualified DC elements
to some low-level in the record's XML hierarchy, then my confidence that
I'll be able to extract useful qualified DC elements from the record is
rather low.

Most cases of course fall somewhere in between. The OLAC top-level XSD
imports the appropriate DCMI Namespaces and XSDs, but it also imports 4 OLAC
specific XSDs that define a handful of additional non-DC elements and
attributes. Same with the NSDL and CDP top-level XSDs. But still, 90% of the
content of the metadata records harvested from data providers using these
XSDs for their homegrown metadataFormats is recognizable as qualified DC. As
a harvester, therefore, I'm comfortable for purposes of aggregation to take
the elements associated with the qualified DC namespaces and ignore the
rest.

Based on your response, I think what I'm worried about as further elaborated
here, is different from what you're focusing on.

Tim Cole
University of Illinois at UC 


From WSimpson at wiley.co.uk  Sun Aug 15 20:13:30 2004
From: WSimpson at wiley.co.uk (WSimpson@wiley.co.uk)
Date: Sun Aug 15 20:14:51 2004
Subject: [OAI-implementers] Will Simpson is out of the office.
Message-ID: <OF1BF4E0C2.8ABC2D85-ON80256EF2.00013C70-80256EF2.00013C71@wiley.co.uk>





I will be out of the office starting  13/08/2004 and will not return until
31/08/2004.

I will respond to your message when I return.

Please contact ukcsjrnl@wiley.co.uk for matters relating to journals
production. For all other urgent matters please contact Nicki Boyd
(nboyd@wiley.co.uk) or John Elbourne (jelbourn@wiley.co.uk).


From bialangiano at yahoo.com.br  Wed Aug 18 08:24:40 2004
From: bialangiano at yahoo.com.br (=?iso-8859-1?q?Beatriz=20Langiano?=)
Date: Wed Aug 18 08:25:14 2004
Subject: [OAI-implementers] New metadata format OAI-enable
Message-ID: <20040818122440.89044.qmail@web60910.mail.yahoo.com>

Hi,

  I'm sutdying about Medical Images Digital Libraries
  and I'm thinking develope a new metadata format
  OAI-enabled to better describe this images, adding new elements that 
  describe medical images with more precision.
  Does somebody know if someone or some organization had already   
  created a XML scheme to this?

  Thanks, Beatriz

 


 




Beatriz Langiano
Mestrado em Inform?tica
Universidade Federal do Paran? - Brasil
__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 
-------------- next part --------------
An HTML attachment was scrubbed...
URL: http://openarchives.org/pipermail/oai-implementers/attachments/20040818/821d5343/attachment.htm
From jpearson at usc.edu  Mon Aug 23 15:15:31 2004
From: jpearson at usc.edu (Jeffrey Pearson)
Date: Mon Aug 23 15:16:02 2004
Subject: [OAI-implementers] getRecord Verb
Message-ID: <24E3615320924A4D825DF427DA069D8E03358045@enroll1.esd.usc.edu>

Please excuse the ignorance of my question.

I'm working through implementing our first OAI compliant DP. I'm currently working on the getRecord verb and trying to decode some of the examples provided on the site. It gives in the response chunk;

<request verb="GetRecord" identifier="oai:arXiv.org:cs/0112017"
           metadataPrefix="oai_dc">http://arXiv.org/oai2</request>

I understand everything up until the:
http://arXiv.org/oai2

which is the value inside of the tags. What exactly is this value? Can someone point me to where this value is defined in the docs?

Thank you for any help/light you can shed.


Jeff Pearson
University of California

From Naomi at cs.cornell.edu  Mon Aug 23 15:34:52 2004
From: Naomi at cs.cornell.edu (Naomi Dushay)
Date: Mon Aug 23 15:35:27 2004
Subject: [OAI-implementers] getRecord Verb
Message-ID: <EE246BDD7B90354D807602B3A1411778287606@EXCHVS2.cs.cornell.edu>

Jeff,

What's inside the tags is the baseURL for the OAI server.  

HTH,
Naomi

> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org [mailto:oai-implementers-
> bounces@openarchives.org] On Behalf Of Jeffrey Pearson
> Sent: Monday, August 23, 2004 3:16 PM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: [OAI-implementers] getRecord Verb
> 
> Please excuse the ignorance of my question.
> 
> I'm working through implementing our first OAI compliant DP. I'm currently
> working on the getRecord verb and trying to decode some of the examples
> provided on the site. It gives in the response chunk;
> 
> <request verb="GetRecord" identifier="oai:arXiv.org:cs/0112017"
>            metadataPrefix="oai_dc">http://arXiv.org/oai2</request>
> 
> I understand everything up until the:
> http://arXiv.org/oai2
> 
> which is the value inside of the tags. What exactly is this value? Can
> someone point me to where this value is defined in the docs?
> 
> Thank you for any help/light you can shed.
> 
> 
> Jeff Pearson
> University of California
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers


From jpearson at usc.edu  Mon Aug 23 15:37:46 2004
From: jpearson at usc.edu (Jeffrey Pearson)
Date: Mon Aug 23 15:38:19 2004
Subject: [OAI-implementers] getRecord Verb
Message-ID: <24E3615320924A4D825DF427DA069D8E03358046@enroll1.esd.usc.edu>

Is this the base URL for the SERVER or for the processing SCRIPT? From looking at the example it appears to be to the actual processing SCRIPT.

Thanks.

Jeff

-----Original Message-----
From: Naomi Dushay [mailto:Naomi@cs.cornell.edu]
Sent: Monday, August 23, 2004 11:35 AM
To: Jeffrey Pearson; oai-implementers@oaisrv.nsdl.cornell.edu
Subject: RE: [OAI-implementers] getRecord Verb


Jeff,

What's inside the tags is the baseURL for the OAI server.  

HTH,
Naomi

> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org [mailto:oai-implementers-
> bounces@openarchives.org] On Behalf Of Jeffrey Pearson
> Sent: Monday, August 23, 2004 3:16 PM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: [OAI-implementers] getRecord Verb
> 
> Please excuse the ignorance of my question.
> 
> I'm working through implementing our first OAI compliant DP. I'm currently
> working on the getRecord verb and trying to decode some of the examples
> provided on the site. It gives in the response chunk;
> 
> <request verb="GetRecord" identifier="oai:arXiv.org:cs/0112017"
>            metadataPrefix="oai_dc">http://arXiv.org/oai2</request>
> 
> I understand everything up until the:
> http://arXiv.org/oai2
> 
> which is the value inside of the tags. What exactly is this value? Can
> someone point me to where this value is defined in the docs?
> 
> Thank you for any help/light you can shed.
> 
> 
> Jeff Pearson
> University of California
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers


From tdb01r at ecs.soton.ac.uk  Tue Aug 24 07:21:02 2004
From: tdb01r at ecs.soton.ac.uk (Tim Brody)
Date: Tue Aug 24 07:21:40 2004
Subject: [OAI-implementers] getRecord Verb
In-Reply-To: <24E3615320924A4D825DF427DA069D8E03358046@enroll1.esd.usc.edu>
References: <24E3615320924A4D825DF427DA069D8E03358046@enroll1.esd.usc.edu>
Message-ID: <412B249E.8070405@ecs.soton.ac.uk>

The content of <request> is the script URL.

To create this bit of the response remove the query component 
(everything after '?'), and put the remaining into the element value. 
The query key-value pairs are then encoded as the XML attributes.

The exception to this is where the request URL results in an OAI error, 
in which case I think you can drop the XML attributes (being as the 
request was bad anyway).

All the best,
Tim.

Jeffrey Pearson wrote:

> Is this the base URL for the SERVER or for the processing SCRIPT? From looking at the example it appears to be to the actual processing SCRIPT.
> 
> Thanks.
> 
> Jeff
> 
> -----Original Message-----
> From: Naomi Dushay [mailto:Naomi@cs.cornell.edu]
> Sent: Monday, August 23, 2004 11:35 AM
> To: Jeffrey Pearson; oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [OAI-implementers] getRecord Verb
> 
> 
> Jeff,
> 
> What's inside the tags is the baseURL for the OAI server.  
> 
> HTH,
> Naomi
> 
> 
>>-----Original Message-----
>>From: oai-implementers-bounces@openarchives.org [mailto:oai-implementers-
>>bounces@openarchives.org] On Behalf Of Jeffrey Pearson
>>Sent: Monday, August 23, 2004 3:16 PM
>>To: oai-implementers@oaisrv.nsdl.cornell.edu
>>Subject: [OAI-implementers] getRecord Verb
>>
>>Please excuse the ignorance of my question.
>>
>>I'm working through implementing our first OAI compliant DP. I'm currently
>>working on the getRecord verb and trying to decode some of the examples
>>provided on the site. It gives in the response chunk;
>>
>><request verb="GetRecord" identifier="oai:arXiv.org:cs/0112017"
>>           metadataPrefix="oai_dc">http://arXiv.org/oai2</request>
>>
>>I understand everything up until the:
>>http://arXiv.org/oai2
>>
>>which is the value inside of the tags. What exactly is this value? Can
>>someone point me to where this value is defined in the docs?
>>
>>Thank you for any help/light you can shed.
>>
>>
>>Jeff Pearson
>>University of California
>>
>>_______________________________________________
>>OAI-implementers mailing list
>>List information, archives, preferences and to unsubscribe:
>>http://openarchives.org/mailman/listinfo/oai-implementers
> 
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
> 
> 
> 


From jenlrile at indiana.edu  Sat Aug 28 13:50:14 2004
From: jenlrile at indiana.edu (Riley, Jenn)
Date: Sat Aug 28 13:50:18 2004
Subject: [OAI-implementers] dc:title vs. dc:description for images
Message-ID: <0560FE30E308454280C10066BBC4554C01AA4E2A@iu-mssg-mbx05.exchange.iu.edu>

Hello all-

I'm mapping metadata for an archival collection of digitized slides (the
collection is at <http://www.dlib.indiana.edu/collections/cushman/>)
from our native format to simple DC for exposure via our OAI data
provider, and I'm having trouble making a final decision about how to
deal with a dc:title vs. dc:description issue.

These slides are from a skilled amateur photographer, so they do not
have a "title," per se. They do have a very large amount of description
however, all provided by the original photographer - a description
written on the slide mount, plus similar but not identical descriptions
in between 1 and 3 small notebooks accomanying the slides. So we have
between 2 and 4 descriptive strings for each image, none of which can be
considered to be more authoritative or complete than another. I'm trying
to decide whether to put these strings in dc:title or dc:description
elements.

Option 1: Put all of them in dc:title. This means each DC record will
have up to 4 dc:title elements. I'm leaning strongly toward this
solution at the moment, mainly because I don't find any of the other
options satisfactory.

Option 2: Put all of them in dc:description. This is from a pure
metadata standpoint the best solution - these strings are all really
descriptions, rather than formal titles. However, this would result in
NO dc:title element for these records. Since service providers rely so
heavily on dc:title for intelligible display of records, I'm extremely
hesitant to use this solution.

Option 3a: Pick one of the strings to put in dc:title and put the rest
in dc:description. If we were to do this, I suppose the description from
the slide mount would go in dc:title, since there's only ever 1 of
these, but I really don't like this solution. There's no reason to
prefer this description over the ones from the notebooks - in fact, the
descriptions in the notebooks were written when the picture was taken
(the slide mounts obviously were written after the film was developed!)
and the notebook descriptions weren't subject to space considerations as
the slide mount descriptions were. But there's no reason to pick any of
the 3 possible notebook descriptions over any of the others so there's
no good way to pick one of them for dc:title either.

Option 3b: Pick one of the strings to put in dc:title and put all of
them in dc:description. Same as above, but duplicate the value in
dc:title in dc:description. I don't like this solution for the same
reasons as 3a, above.

Option 4: Create a generic title for each record (something like
"Charles W. Cushman slide") and put all the descriptive strings in
dc:description. Although I'm a librarian and we construct "titles" for
unpublished materials all the time, I *really* don't like this solution.
There are 15,000 slides in the collection, so if a user's search came up
with more than one record from this collection, a display listing titles
would be extremely UN-useful. Also, we have a strong commitment in this
collection to preserve the photographer's original words, so I'd like to
find a way to make these what users see in search results.

I do plan to expose at least one other more robust metadata format for
these records, so hopefully some service providers will be able to see
and maintain the complex nature  of this issue, but I still want to make
sure that our simple DC is intelligible for service providers who will
only use that metadata format.

So does anyone out there have advice on this issue? Is there a pervasive
practice out there by service providers to use a dc:description for
display when there's no dc:title? What have other data providers done
when dealing with unpublished material with multiple possible "titles"?

Jenn

========================
Jenn Riley
Metadata Librarian
Digital Library Program
Indiana University - Bloomington
Main Library E170
(812) 856-5759
www.dlib.indiana.edu

From jenlrile at indiana.edu  Sat Aug 28 14:18:49 2004
From: jenlrile at indiana.edu (Riley, Jenn)
Date: Sat Aug 28 14:19:11 2004
Subject: [OAI-implementers] pseudo-qualifiers in simple DC
Message-ID: <0560FE30E308454280C10066BBC4554C01AA4E2B@iu-mssg-mbx05.exchange.iu.edu>

Hello all-

I'm looking for opinions from OAI service providers on the use of
"pseudo-qualifiers" in simple DC values exposed via OAI. By
"pseudo-qualifiers" I mean the inclusion of strings indicating element
refinements or encoding schems (the same sorts of things the real
qualifiers in qualified DC do) within the actual simple DC element
content string.  The purpose of doing this could be two-fold: 1) making
the simple DC metadata more intelligible for end-users seeing metadata
records, and 2) allowing service providers to use this information
intelligently to increase the quality of service they can provide.

We have relationships with some service providers, so in those cases
we'd know if they'd be able to use metadata formats more robust than DC
if we exposed them, and how they'd want simple DC elements structured to
use these "pseudo-qualifiers." But I'm concerned that tailoring our
simple DC for a few service providers would reduce the utility of the
records for the larger OAI community. Basically I have three questions:

1) What's the general opinion of service providers out there on
including pseudo-qualifiers in DC elements?
2) If these pseudo-qualifiers are used, is it best to put them at the
beginning or end of the element content?
3) If these pseudo-qualifiers are used, what characters are best to use
to delimit the pseudo-qualifier from the rest of the element content?

I imagine the answers to these questions would differ among DC elements.
It seems pretty straightforward that:

<dc:relation>IsPartOf
http://www.dlib.indiana.edu/collections/cushman</dc:relation>

would be OK. Including the IsPartOf pseudo-qualifier wouldn't affect the
end-user experience, and the URL is recognizable easily for service
provider processing. However, qualifying a subject or contributor might
be more problematic:

<dc:subject>[TGM I] Bodies of water</dc:subject>
<dc:contributor>Berlin, Irving [composer]</dc:contributor>

If a service provider were to not do any post-processing of these string
to remove and/or intelligently use these pseudo-qualifiers, they could
interfere with effective combination of metadata from multiple sources.
If the qualifier is at the beginning, a subject or name alphabetical
browse would be ineffective. If the qualifier is at the either end,
collocation of all resources with the same subject or contributor would
be affected. But the utility of the record, especially for the
pseudo-qualified contributor, is greatly increased for the end-user if
this pseudo-qualifier is included.

So what are most service providers out there doing? Do you work with
data providers in your area of interest to define mutually agreed-upon
usage of pseudo-qualifiers? Do you look for them in harvested data? Do
you find they foul up your carefully-laid plans?

Jenn

========================
Jenn Riley
Metadata Librarian
Digital Library Program
Indiana University - Bloomington
Main Library E170
(812) 856-5759
www.dlib.indiana.edu

From sshreeve at uiuc.edu  Mon Aug 30 11:26:16 2004
From: sshreeve at uiuc.edu (Sarah L. Shreeves)
Date: Mon Aug 30 11:26:21 2004
Subject: [OAI-implementers] dc:title vs. dc:description for images
In-Reply-To: <0560FE30E308454280C10066BBC4554C01AA4E2A@iu-mssg-mbx05.exc
	hange.iu.edu>
References: <0560FE30E308454280C10066BBC4554C01AA4E2A@iu-mssg-mbx05.exchange.iu.edu>
Message-ID: <6.0.1.1.2.20040830102321.0299c638@express.cites.uiuc.edu>

I've replied to Jenn on another list about this question (so I apologize 
for anyone who's getting a duplicate response!), but I thought it would be 
useful for other service providers to respond as well...

As a service provider we've actually made a point of making some rules 
about displays and indexing that take into account issues like no titles.

For instance, in our Mellon funded service provider (for cultural heritage 
materials), we always display the dc:title, dc:creator, and dc:subject or 
dc:description in our short display. If the dc:title is missing, the 
dc:subject is displayed. If dc:subject is missing, dc:description is 
displayed. We also included the title, subject, and description fields in 
one index.  This decision was made primarily because of the amount of 
museum (and library, for that matter) metadata no titles. In our study of 
the use of DC by community (from the Mellon service), we found that 77% of 
records coming from museums and 66% of records from academic libraries had 
a title element. On average, records from the museum community had one 
title entry per record, and those from the library community had about two.

So I think that either Option 1 or Option 2 would work fine. Service 
providers who are working with non-bibliographic material at least should 
be accustomed to metadata that doesn't fit the normal mold. This doesn't 
mean poor quality metadata, of course, just that 'good' metadata doesn't 
have to have a title field!

Also, as you note, Option 4 is absolutely the worst option from a user's 
point of view!

Sarah


At 12:50 PM 8/28/2004, Riley, Jenn wrote:
>Hello all-
>
>I'm mapping metadata for an archival collection of digitized slides (the
>collection is at <http://www.dlib.indiana.edu/collections/cushman/>)
>from our native format to simple DC for exposure via our OAI data
>provider, and I'm having trouble making a final decision about how to
>deal with a dc:title vs. dc:description issue.
>
>These slides are from a skilled amateur photographer, so they do not
>have a "title," per se. They do have a very large amount of description
>however, all provided by the original photographer - a description
>written on the slide mount, plus similar but not identical descriptions
>in between 1 and 3 small notebooks accomanying the slides. So we have
>between 2 and 4 descriptive strings for each image, none of which can be
>considered to be more authoritative or complete than another. I'm trying
>to decide whether to put these strings in dc:title or dc:description
>elements.
>
>Option 1: Put all of them in dc:title. This means each DC record will
>have up to 4 dc:title elements. I'm leaning strongly toward this
>solution at the moment, mainly because I don't find any of the other
>options satisfactory.
>
>Option 2: Put all of them in dc:description. This is from a pure
>metadata standpoint the best solution - these strings are all really
>descriptions, rather than formal titles. However, this would result in
>NO dc:title element for these records. Since service providers rely so
>heavily on dc:title for intelligible display of records, I'm extremely
>hesitant to use this solution.
>
>Option 3a: Pick one of the strings to put in dc:title and put the rest
>in dc:description. If we were to do this, I suppose the description from
>the slide mount would go in dc:title, since there's only ever 1 of
>these, but I really don't like this solution. There's no reason to
>prefer this description over the ones from the notebooks - in fact, the
>descriptions in the notebooks were written when the picture was taken
>(the slide mounts obviously were written after the film was developed!)
>and the notebook descriptions weren't subject to space considerations as
>the slide mount descriptions were. But there's no reason to pick any of
>the 3 possible notebook descriptions over any of the others so there's
>no good way to pick one of them for dc:title either.
>
>Option 3b: Pick one of the strings to put in dc:title and put all of
>them in dc:description. Same as above, but duplicate the value in
>dc:title in dc:description. I don't like this solution for the same
>reasons as 3a, above.
>
>Option 4: Create a generic title for each record (something like
>"Charles W. Cushman slide") and put all the descriptive strings in
>dc:description. Although I'm a librarian and we construct "titles" for
>unpublished materials all the time, I *really* don't like this solution.
>There are 15,000 slides in the collection, so if a user's search came up
>with more than one record from this collection, a display listing titles
>would be extremely UN-useful. Also, we have a strong commitment in this
>collection to preserve the photographer's original words, so I'd like to
>find a way to make these what users see in search results.
>
>I do plan to expose at least one other more robust metadata format for
>these records, so hopefully some service providers will be able to see
>and maintain the complex nature  of this issue, but I still want to make
>sure that our simple DC is intelligible for service providers who will
>only use that metadata format.
>
>So does anyone out there have advice on this issue? Is there a pervasive
>practice out there by service providers to use a dc:description for
>display when there's no dc:title? What have other data providers done
>when dealing with unpublished material with multiple possible "titles"?
>
>Jenn
>
>========================
>Jenn Riley
>Metadata Librarian
>Digital Library Program
>Indiana University - Bloomington
>Main Library E170
>(812) 856-5759
>www.dlib.indiana.edu
>
>_______________________________________________
>OAI-implementers mailing list
>List information, archives, preferences and to unsubscribe:
>http://openarchives.org/mailman/listinfo/oai-implementers


From caar at loc.gov  Mon Aug 30 13:37:03 2004
From: caar at loc.gov (Caroline Arms)
Date: Mon Aug 30 13:37:52 2004
Subject: [OAI-implementers] dc:title vs. dc:description for images
In-Reply-To: <6.0.1.1.2.20040830102321.0299c638@express.cites.uiuc.edu>
Message-ID: <Pine.SOL.4.21.0408301239230.14309-100000@sun8.loc.gov>


Option 1 would generate several dc:title elements.  I would be interested
to know how harvesters who do not focus on cultural heritage materials
treat multiple dc:title elements.  

My interest is for a reason that is different from Jenn's.  In mapping our
MARC records to simple DC, I have actually been dropping alternative
titles because of potential confusion.  In many cases they only represent
minor differences of word order (created with an alphabetical browse list
in mind); those are no great loss.  I've assumed that translated titles
should be included because they can be distinguished by the XML lang
attribute.  However, I can envisage future situations where dropping
additional titles would lose valuable information (e.g., for songs which
are often referred to by their first line).

In practice, would the order of multiple title elements be important to
harvesters?

For records in the MODS and MARC formats, the potential problem with
multiple titles does not occur, because the main title will always be
distinguishable.  I am simply looking to make any mapping to simple DC
as useful as it can be.

   Thanks.   Caroline Arms                           caar@loc.gov

Office of Strategic Initiatives
Library of Congress

   

On Mon, 30 Aug 2004, Sarah L. Shreeves wrote:

> I've replied to Jenn on another list about this question (so I apologize 
> for anyone who's getting a duplicate response!), but I thought it would be 
> useful for other service providers to respond as well...
> 
> As a service provider we've actually made a point of making some rules 
> about displays and indexing that take into account issues like no titles.
> 
> For instance, in our Mellon funded service provider (for cultural heritage 
> materials), we always display the dc:title, dc:creator, and dc:subject or 
> dc:description in our short display. If the dc:title is missing, the 
> dc:subject is displayed. If dc:subject is missing, dc:description is 
> displayed. We also included the title, subject, and description fields in 
> one index.  This decision was made primarily because of the amount of 
> museum (and library, for that matter) metadata no titles. In our study of 
> the use of DC by community (from the Mellon service), we found that 77% of 
> records coming from museums and 66% of records from academic libraries had 
> a title element. On average, records from the museum community had one 
> title entry per record, and those from the library community had about two.
> 
> So I think that either Option 1 or Option 2 would work fine. Service 
> providers who are working with non-bibliographic material at least should 
> be accustomed to metadata that doesn't fit the normal mold. This doesn't 
> mean poor quality metadata, of course, just that 'good' metadata doesn't 
> have to have a title field!
> 
> Also, as you note, Option 4 is absolutely the worst option from a user's 
> point of view!
> 
> Sarah
> 
> 
> At 12:50 PM 8/28/2004, Riley, Jenn wrote:
> >Hello all-
> >
> >I'm mapping metadata for an archival collection of digitized slides (the
> >collection is at <http://www.dlib.indiana.edu/collections/cushman/>)
> >from our native format to simple DC for exposure via our OAI data
> >provider, and I'm having trouble making a final decision about how to
> >deal with a dc:title vs. dc:description issue.
> >
> >These slides are from a skilled amateur photographer, so they do not
> >have a "title," per se. They do have a very large amount of description
> >however, all provided by the original photographer - a description
> >written on the slide mount, plus similar but not identical descriptions
> >in between 1 and 3 small notebooks accomanying the slides. So we have
> >between 2 and 4 descriptive strings for each image, none of which can be
> >considered to be more authoritative or complete than another. I'm trying
> >to decide whether to put these strings in dc:title or dc:description
> >elements.
> >
> >Option 1: Put all of them in dc:title. This means each DC record will
> >have up to 4 dc:title elements. I'm leaning strongly toward this
> >solution at the moment, mainly because I don't find any of the other
> >options satisfactory.
> >
> >Option 2: Put all of them in dc:description. This is from a pure
> >metadata standpoint the best solution - these strings are all really
> >descriptions, rather than formal titles. However, this would result in
> >NO dc:title element for these records. Since service providers rely so
> >heavily on dc:title for intelligible display of records, I'm extremely
> >hesitant to use this solution.
> >
> >Option 3a: Pick one of the strings to put in dc:title and put the rest
> >in dc:description. If we were to do this, I suppose the description from
> >the slide mount would go in dc:title, since there's only ever 1 of
> >these, but I really don't like this solution. There's no reason to
> >prefer this description over the ones from the notebooks - in fact, the
> >descriptions in the notebooks were written when the picture was taken
> >(the slide mounts obviously were written after the film was developed!)
> >and the notebook descriptions weren't subject to space considerations as
> >the slide mount descriptions were. But there's no reason to pick any of
> >the 3 possible notebook descriptions over any of the others so there's
> >no good way to pick one of them for dc:title either.
> >
> >Option 3b: Pick one of the strings to put in dc:title and put all of
> >them in dc:description. Same as above, but duplicate the value in
> >dc:title in dc:description. I don't like this solution for the same
> >reasons as 3a, above.
> >
> >Option 4: Create a generic title for each record (something like
> >"Charles W. Cushman slide") and put all the descriptive strings in
> >dc:description. Although I'm a librarian and we construct "titles" for
> >unpublished materials all the time, I *really* don't like this solution.
> >There are 15,000 slides in the collection, so if a user's search came up
> >with more than one record from this collection, a display listing titles
> >would be extremely UN-useful. Also, we have a strong commitment in this
> >collection to preserve the photographer's original words, so I'd like to
> >find a way to make these what users see in search results.
> >
> >I do plan to expose at least one other more robust metadata format for
> >these records, so hopefully some service providers will be able to see
> >and maintain the complex nature  of this issue, but I still want to make
> >sure that our simple DC is intelligible for service providers who will
> >only use that metadata format.
> >
> >So does anyone out there have advice on this issue? Is there a pervasive
> >practice out there by service providers to use a dc:description for
> >display when there's no dc:title? What have other data providers done
> >when dealing with unpublished material with multiple possible "titles"?
> >
> >Jenn
> >
> >========================
> >Jenn Riley
> >Metadata Librarian
> >Digital Library Program
> >Indiana University - Bloomington
> >Main Library E170
> >(812) 856-5759
> >www.dlib.indiana.edu
> >
> >_______________________________________________
> >OAI-implementers mailing list
> >List information, archives, preferences and to unsubscribe:
> >http://openarchives.org/mailman/listinfo/oai-implementers
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
> 
> 


From jenlrile at indiana.edu  Tue Aug 31 14:18:47 2004
From: jenlrile at indiana.edu (Riley, Jenn)
Date: Tue Aug 31 14:18:53 2004
Subject: [OAI-implementers] dc:title vs. dc:description for images
Message-ID: <0560FE30E308454280C10066BBC4554C01AA4E36@iu-mssg-mbx05.exchange.iu.edu>

Hello all-

[This message is being posted to multiple lists - apologies for any
duplication.]

Thank you to everyone who responded to my query regarding usage of
dc:title and dc:description when there are 
multiple equally-valid values for each. In this case, I think I'm going
to put all the values in their own dc:title element. This is for a
number of reasons, not least of which is the strong focus dc:title
enjoys over dc:description in the current environment. I'll definitely
be keeping my eye on what various service providers
are doing with data from this collection and others to see if a revision
to our DC mapping is in order in the future.

Jenn

========================
Jenn Riley
Metadata Librarian
Digital Library Program
Indiana University - Bloomington
Main Library E170
(812) 856-5759
www.dlib.indiana.edu



> -----Original Message-----
> From: oai-implementers-bounces@openarchives.org 
> [mailto:oai-implementers-bounces@openarchives.org] On Behalf 
> Of Riley, Jenn
> Sent: Saturday, August 28, 2004 12:50 PM
> To: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: [OAI-implementers] dc:title vs. dc:description for images
> 
> Hello all-
> 
> I'm mapping metadata for an archival collection of digitized 
> slides (the collection is at 
> <http://www.dlib.indiana.edu/collections/cushman/>)
> from our native format to simple DC for exposure via our OAI 
> data provider, and I'm having trouble making a final decision 
> about how to deal with a dc:title vs. dc:description issue.
> 
> These slides are from a skilled amateur photographer, so they 
> do not have a "title," per se. They do have a very large 
> amount of description however, all provided by the original 
> photographer - a description written on the slide mount, plus 
> similar but not identical descriptions in between 1 and 3 
> small notebooks accomanying the slides. So we have between 2 
> and 4 descriptive strings for each image, none of which can 
> be considered to be more authoritative or complete than 
> another. I'm trying to decide whether to put these strings in 
> dc:title or dc:description elements.
> 
> Option 1: Put all of them in dc:title. This means each DC 
> record will have up to 4 dc:title elements. I'm leaning 
> strongly toward this solution at the moment, mainly because I 
> don't find any of the other options satisfactory.
> 
> Option 2: Put all of them in dc:description. This is from a 
> pure metadata standpoint the best solution - these strings 
> are all really descriptions, rather than formal titles. 
> However, this would result in NO dc:title element for these 
> records. Since service providers rely so heavily on dc:title 
> for intelligible display of records, I'm extremely hesitant 
> to use this solution.
> 
> Option 3a: Pick one of the strings to put in dc:title and put 
> the rest in dc:description. If we were to do this, I suppose 
> the description from the slide mount would go in dc:title, 
> since there's only ever 1 of these, but I really don't like 
> this solution. There's no reason to prefer this description 
> over the ones from the notebooks - in fact, the descriptions 
> in the notebooks were written when the picture was taken (the 
> slide mounts obviously were written after the film was 
> developed!) and the notebook descriptions weren't subject to 
> space considerations as the slide mount descriptions were. 
> But there's no reason to pick any of the 3 possible notebook 
> descriptions over any of the others so there's no good way to 
> pick one of them for dc:title either.
> 
> Option 3b: Pick one of the strings to put in dc:title and put 
> all of them in dc:description. Same as above, but duplicate 
> the value in dc:title in dc:description. I don't like this 
> solution for the same reasons as 3a, above.
> 
> Option 4: Create a generic title for each record (something 
> like "Charles W. Cushman slide") and put all the descriptive 
> strings in dc:description. Although I'm a librarian and we 
> construct "titles" for unpublished materials all the time, I 
> *really* don't like this solution.
> There are 15,000 slides in the collection, so if a user's 
> search came up with more than one record from this 
> collection, a display listing titles would be extremely 
> UN-useful. Also, we have a strong commitment in this 
> collection to preserve the photographer's original words, so 
> I'd like to find a way to make these what users see in search results.
> 
> I do plan to expose at least one other more robust metadata 
> format for these records, so hopefully some service providers 
> will be able to see and maintain the complex nature  of this 
> issue, but I still want to make sure that our simple DC is 
> intelligible for service providers who will only use that 
> metadata format.
> 
> So does anyone out there have advice on this issue? Is there 
> a pervasive practice out there by service providers to use a 
> dc:description for display when there's no dc:title? What 
> have other data providers done when dealing with unpublished 
> material with multiple possible "titles"?
> 
> Jenn
> 
> ========================
> Jenn Riley
> Metadata Librarian
> Digital Library Program
> Indiana University - Bloomington
> Main Library E170
> (812) 856-5759
> www.dlib.indiana.edu
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://openarchives.org/mailman/listinfo/oai-implementers
> 
> 

