From gonzalez@cnen.gov.br  Tue Jan  8 18:50:37 2002
From: gonzalez@cnen.gov.br (Sergio de A.Gonzalez)
Date: Tue, 8 Jan 2002 16:50:37 -0200
Subject: [OAI-implementers] (no subject)
Message-ID: <000301c19875$5e334b20$58010a0a@sede>


Sergio de A.Gonzalez
 


From jimlay@atypedigital.com  Tue Jan 15 00:43:21 2002
From: jimlay@atypedigital.com (Josie Imlay)
Date: Mon, 14 Jan 2002 16:43:21 -0800
Subject: [OAI-implementers] oai security
Message-ID: <20020115004321.GA8329@atypedigital.com>

I am working on an oai server right now and the people that own the information don't want it getting in to just anyone and everyone's hands. I satisfied this using some simple http protocol level authentication. What I am woundering is if people writing harvesters out there are implementing username/password support at all. 

Thanks,

Josie Imlay



From bergmark@CS.Cornell.EDU  Tue Jan 15 01:19:12 2002
From: bergmark@CS.Cornell.EDU (Donna Bergmark)
Date: Mon, 14 Jan 2002 20:19:12 -0500
Subject: [OAI-implementers] oai security
In-Reply-To: Your message of "Mon, 14 Jan 2002 16:43:21 PST."
 <20020115004321.GA8329@atypedigital.com>
Message-ID: <200201150119.g0F1JCY25423@elgin.cs.cornell.edu>

Josie,

I suspect that username and password authentication is contrary
to the spirit of the Open Archive Initiative.  However, you should 
feel free to use the OAI protocol for your own purposes. 

Currently intellectual property rights are handled in the response
to the Identify verb by simply stating them. 

We have not so far heard of people trying to use OAI for proprietary 
purposes, but this is the mail group from which to get an affirmative
response if there is one.  

Interesting.

Donna

From zubair@cs.odu.edu  Tue Jan 15 01:31:30 2002
From: zubair@cs.odu.edu (zubair@cs.odu.edu)
Date: Mon, 14 Jan 2002 20:31:30 -0500
Subject: [OAI-implementers] oai security
Message-ID: <OFE8B05C0F.134B9A1F-ON85256B42.000799F0@cs.odu.edu>

I am not sure I agree with Donna on this. I do not think putting
restriction on "who harvest a data provider" is against OAI. I am
reproducing here the statement from the OAI web site:

"We expect that some repositories that adopt the protocol will permit more
or less unrestricted access to their metadata, while others may use various
methods to restrict access (e.g., by IP address of origin)."

In fact, a number of communities may want to restrict access. We are
working on projects where we are using IP based access restriction.

Zubair





                                                                                                                                      
                    Donna Bergmark                                                                                                    
                    <bergmark@cs.cornell.edu>                   To:     Josie Imlay <jimlay@atypedigital.com>                         
                    Sent by:                                    cc:     oai-implementers@oaisrv.nsdl.cornell.edu                      
                    oai-implementers-admin@oaisrv.nsdl.c        Subject:     Re: [OAI-implementers] oai security                      
                    ornell.edu                                                                                                        
                                                                                                                                      
                                                                                                                                      
                    01/14/2002 08:19 PM                                                                                               
                    Please respond to bergmark                                                                                        
                                                                                                                                      
                                                                                                                                      




Josie,

I suspect that username and password authentication is contrary
to the spirit of the Open Archive Initiative.  However, you should
feel free to use the OAI protocol for your own purposes.

Currently intellectual property rights are handled in the response
to the Identify verb by simply stating them.

We have not so far heard of people trying to use OAI for proprietary
purposes, but this is the mail group from which to get an affirmative
response if there is one.

Interesting.

Donna
_______________________________________________
OAI-implementers mailing list
OAI-implementers@oaisrv.nsdl.cornell.edu
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers




From mln@ils.unc.edu  Tue Jan 15 01:36:22 2002
From: mln@ils.unc.edu (Michael L. Nelson)
Date: Mon, 14 Jan 2002 20:36:22 -0500 (EST)
Subject: [OAI-implementers] oai security
In-Reply-To: <20020115004321.GA8329@atypedigital.com>
Message-ID: <Pine.GSO.4.21.0201142033150.24848-100000@ruby.ils.unc.edu>

On Mon, 14 Jan 2002, Josie Imlay wrote:

> I am working on an oai server right now and the people that own the
> information don't want it getting in to just anyone and everyone's
> hands. I satisfied this using some simple http protocol level
> authentication. What I am woundering is if people writing harvesters
> out there are implementing username/password support at all.

Josie,

there are probably many data providers that require username/passwd for
harvesting.  I'm aware of several data providers that allow harvesting
only from certain hosts.

writing a harvester to handle usernames and passwords is no problem.  for
a Perl example, look at the User Agent object in LWP:

http://www.perldoc.com/perl5.6.1/lib/LWP/UserAgent.html

this will allow you to protect your OAI interface using standard http
authentication.

regards,

Michael

> 
> Thanks,
> 
> Josie Imlay
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

---
Michael L. Nelson
NASA Langley Research Center		m.l.nelson@larc.nasa.gov
MS 158, Hampton, VA 23681		http://www.ils.unc.edu/~mln/
+1 757 864 8511				+1 757 864 8342 (f)


From David.Letts@bl.uk  Tue Jan 15 11:36:23 2002
From: David.Letts@bl.uk (Letts, David)
Date: Tue, 15 Jan 2002 11:36:23 -0000
Subject: [OAI-implementers] Problem connecting to remote sites
Message-ID: <9DC75DF54C35D4118C4000508BA5510F037C311F@nt-bspex1.bl.uk>

I am writing a Java program to harvest data from remote sites. I am using
the COGPrints site (http://cogprints.soton.ac.uk/perl.oai) as a test. I have
also tried many other sites (as listed in the Repository Explorer). When the
Java program tries to connect to the site it throws a
java.net.ConnectException with the message Conection refused.
I am displaying the URL that the program is using and when I paste this into
the browser then the records are returned correctly. If I use the program to
harvest data from our own repository (only available over a LAN at the
moment) then there isn't a problem.
I'm wondering if the problem is an .htaccess file is refusing the Java
program entry to the site?

Any ideas would be extremely welcome,

Thanks in advance,

David Letts


*********************************************************************
The information contained in this e-mail is confidential and may be 
legally privileged. It is intended for the addressee(s) only. If you 
are not the intended recipient, please delete this e-mail and notify 
the postmaster@bl.uk : The contents of this e-mail must not be 
disclosed or copied without the sender's consent. 

The statements and opinions expressed in this message are those of 
the author and do not necessarily reflect those of the British 
Library. The British Library does not take any responsibility for 
the views of the author. 
*********************************************************************

From tim@tim.brody.btinternet.co.uk  Tue Jan 15 12:14:25 2002
From: tim@tim.brody.btinternet.co.uk (Tim Brody)
Date: Tue, 15 Jan 2002 12:14:25 -0000
Subject: [OAI-implementers] Problem connecting to remote sites
References: <9DC75DF54C35D4118C4000508BA5510F037C311F@nt-bspex1.bl.uk>
Message-ID: <001d01c19dbe$2c42ffe0$6400a8c0@Advocate>

AFAIK there aren't any restrictions on the cogprints site (i.e. no .htaccess
limitations), and, for my own server, there definitly aren't any
restrictions in citebase (http://citebase.eprints.org/cgi-bin/oai).

It may be that you are sitting behind a firewall, which is crossed using a
HTTP proxy. Try manually connecting to an external HTTP server using telnet
(# telnet servername 80). Also look in your Web browser's connection
settings. If you are firewalled you will need to implement proxy support
(basically connect to your proxy and send the same request, and things
should work).

N.B. CogPrints doesn't (currently) use resumptionToken flow control and
isn't very strict to the OAI protocol, so isn't necessarily a good test bed.

All the best,
Tim Brody

----- Original Message -----
From: "Letts, David" <David.Letts@bl.uk>
To: <oai-implementers@oaisrv.nsdl.cornell.edu>
Sent: Tuesday, January 15, 2002 11:36 AM
Subject: [OAI-implementers] Problem connecting to remote sites


> I am writing a Java program to harvest data from remote sites. I am using
> the COGPrints site (http://cogprints.soton.ac.uk/perl.oai) as a test. I
have
> also tried many other sites (as listed in the Repository Explorer). When
the
> Java program tries to connect to the site it throws a
> java.net.ConnectException with the message Conection refused.
> I am displaying the URL that the program is using and when I paste this
into
> the browser then the records are returned correctly. If I use the program
to
> harvest data from our own repository (only available over a LAN at the
> moment) then there isn't a problem.
> I'm wondering if the problem is an .htaccess file is refusing the Java
> program entry to the site?
>
> Any ideas would be extremely welcome,
>
> Thanks in advance,
>
> David Letts
>
>
> *********************************************************************
> The information contained in this e-mail is confidential and may be
> legally privileged. It is intended for the addressee(s) only. If you
> are not the intended recipient, please delete this e-mail and notify
> the postmaster@bl.uk : The contents of this e-mail must not be
> disclosed or copied without the sender's consent.
>
> The statements and opinions expressed in this message are those of
> the author and do not necessarily reflect those of the British
> Library. The British Library does not take any responsibility for
> the views of the author.
> *********************************************************************
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


From ldodds@ingenta.com  Tue Jan 15 12:29:23 2002
From: ldodds@ingenta.com (Leigh Dodds)
Date: Tue, 15 Jan 2002 12:29:23 -0000
Subject: [OAI-implementers] Problem connecting to remote sites
In-Reply-To: <001d01c19dbe$2c42ffe0$6400a8c0@Advocate>
Message-ID: <NCBBKFMJCLIMOBIGKFMJIELCHAAA.ldodds@ingenta.com>

> It may be that you are sitting behind a firewall, which is crossed using a
> HTTP proxy. Try manually connecting to an external HTTP server using telnet
> (# telnet servername 80). Also look in your Web browser's connection
> settings. If you are firewalled you will need to implement proxy support
> (basically connect to your proxy and send the same request, and things
> should work).

Proxy problems are a frequent cause of failures to connect from the 
java.net.URL class. Happily however you just need to tell the VM about 
your proxy settings to get this to work transparently.

Here's a javaworld tip that you might find useful:

http://www.javaworld.com/javaworld/javatips/jw-javatip42.html

Cheers,

L.


-- 
Leigh Dodds, Research Group, Ingenta | "Pluralitas non est ponenda
http://weblogs.userland.com/eclectic |    sine necessitate"
http://www.xml.com/pub/xmldeviant    |     -- William of Ockham

From support@eprints.org  Tue Jan 15 12:43:28 2002
From: support@eprints.org (ePrints Support)
Date: Tue, 15 Jan 2002 12:43:28 +0000
Subject: [OAI-implementers] ResumptionToken expiration
Message-ID: <20020115124328.A3684@ecs.soton.ac.uk>

I'm wondering what the correct way to report that a resumptionToken
is expired is? Currently I'm looking at a 400, which feels wrong as
it's technically a valid request.

I'm currently looking at the results cache expiring after 10 minutes
of non-use. 

-- 

 Christopher Gutteridge                   support@eprints.org 
 ePrints Technical Support                +44 23 8059 4833


From tim@tim.brody.btinternet.co.uk  Tue Jan 15 13:02:52 2002
From: tim@tim.brody.btinternet.co.uk (Tim Brody)
Date: Tue, 15 Jan 2002 13:02:52 -0000
Subject: [OAI-implementers] ResumptionToken expiration
References: <20020115124328.A3684@ecs.soton.ac.uk>
Message-ID: <005801c19dc4$f1647cd0$6400a8c0@Advocate>

I believe an expired resumptionToken (i.e. invalid) would be an "illegal
argument", so is a 400 error?

(10 minutes isn't very long, that would only be long enough to store the
responses - not long enough to process them - why time out so soon?)

All the best,
Tim.

----- Original Message -----
From: "ePrints Support" <support@eprints.org>
To: <oai-implementers@oaisrv.nsdl.cornell.edu>
Sent: Tuesday, January 15, 2002 12:43 PM
Subject: [OAI-implementers] ResumptionToken expiration


>
> I'm wondering what the correct way to report that a resumptionToken
> is expired is? Currently I'm looking at a 400, which feels wrong as
> it's technically a valid request.
>
> I'm currently looking at the results cache expiring after 10 minutes
> of non-use.
>
> --
>
>  Christopher Gutteridge                   support@eprints.org
>  ePrints Technical Support                +44 23 8059 4833
>
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


From David.Letts@bl.uk  Tue Jan 15 13:27:11 2002
From: David.Letts@bl.uk (Letts, David)
Date: Tue, 15 Jan 2002 13:27:11 -0000
Subject: [OAI-implementers] Problem connecting to remote sites
Message-ID: <9DC75DF54C35D4118C4000508BA5510F037C3123@nt-bspex1.bl.uk>

Thanks for the quick response and information provided. The link to the
article proved extremely helpful. The program now connects succesfully.

Thank you,

David.

-----Original Message-----
From: Leigh Dodds [mailto:ldodds@ingenta.com]
Sent: 15 January 2002 12:29
To: Tim Brody; oai-implementers@oaisrv.nsdl.cornell.edu
Cc: Letts, David
Subject: RE: [OAI-implementers] Problem connecting to remote sites


> It may be that you are sitting behind a firewall, which is crossed using a
> HTTP proxy. Try manually connecting to an external HTTP server using
telnet
> (# telnet servername 80). Also look in your Web browser's connection
> settings. If you are firewalled you will need to implement proxy support
> (basically connect to your proxy and send the same request, and things
> should work).

Proxy problems are a frequent cause of failures to connect from the 
java.net.URL class. Happily however you just need to tell the VM about 
your proxy settings to get this to work transparently.

Here's a javaworld tip that you might find useful:

http://www.javaworld.com/javaworld/javatips/jw-javatip42.html

Cheers,

L.


-- 
Leigh Dodds, Research Group, Ingenta | "Pluralitas non est ponenda
http://weblogs.userland.com/eclectic |    sine necessitate"
http://www.xml.com/pub/xmldeviant    |     -- William of Ockham


*********************************************************************
The information contained in this e-mail is confidential and may be 
legally privileged. It is intended for the addressee(s) only. If you 
are not the intended recipient, please delete this e-mail and notify 
the postmaster@bl.uk : The contents of this e-mail must not be 
disclosed or copied without the sender's consent. 

The statements and opinions expressed in this message are those of 
the author and do not necessarily reflect those of the British 
Library. The British Library does not take any responsibility for 
the views of the author. 
*********************************************************************

From simeon@cs.cornell.edu  Tue Jan 15 15:07:25 2002
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Tue, 15 Jan 2002 10:07:25 -0500 (EST)
Subject: [OAI-implementers] ResumptionToken expiration
In-Reply-To: <005801c19dc4$f1647cd0$6400a8c0@Advocate>
Message-ID: <Pine.LNX.4.33.0201151002170.26977-100000@ice.cs.cornell.edu>

On Tue, 15 Jan 2002, Tim Brody wrote:
> I believe an expired resumptionToken (i.e. invalid) would be an "illegal
> argument", so is a 400 error?

I agree. An expired resumptionToken is just the same as a resumptionToken
that was never valid. Hence 400.

To be helpful to harvester writers/operators (especially if you opt for
such a short life for resumptionTokens) you could include text content
with the 400 response that says that the resumptionToken has expired.

Cheers,
Simeon


From thabing@uiuc.edu  Tue Jan 15 15:36:33 2002
From: thabing@uiuc.edu (Thomas G. Habing)
Date: Tue, 15 Jan 2002 09:36:33 -0600
Subject: [OAI-implementers] oai security
References: <20020115004321.GA8329@atypedigital.com>
Message-ID: <3C444C81.33C6FB20@uiuc.edu>

Josie,

For our original OAI prototype, last January, we implemented both IP address
and username/password restrictions for our data provider implementation. 
Our implementation used Microsoft IIS Active Server Pages and VBScript.  If
it would be helpful, I could probably dig up some relevant code snippets to
share.

In that implementation, if a user had the correct name/password or were
coming from an approved IP address they were allowed unfettered access to
the complete, full records.  Otherwise, they were restricted to
'dumbed-down' versions of the same records, such as being limited to
harvesting only title, creator, date, and identifier elements.

Regards,
	Tom
-- 
Thomas G. Habing
Research Programmer, Digital Library Projects
University of Illinois at Urbana-Champaign
155 Grainger Engineering Library Information Center, MC-274
thabing@uiuc.edu, (217) 244-4425
http://dli.grainger.uiuc.edu


Josie Imlay wrote:
> 
> I am working on an oai server right now and the people that own the information don't want it getting in to just anyone and everyone's hands. I satisfied this using some simple http protocol level authentication. What I am woundering is if people writing harvesters out there are implementing username/password support at all.
> 
> Thanks,
> 
> Josie Imlay
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

From hussein@vt.edu  Tue Jan 15 15:55:10 2002
From: hussein@vt.edu (Hussein Suleman)
Date: Tue, 15 Jan 2002 10:55:10 -0500
Subject: [OAI-implementers] oai security
References: <20020115004321.GA8329@atypedigital.com>
Message-ID: <3C4450DE.9030105@vt.edu>

hi

i should start by reiterating that access controls were always an option 
for OAI interfaces - its "open" in the sense that the protocol spec is 
public and you are not restricted in where/how you implement it.

that aside, i do some harvesting but have not yet had the need for 
username/password provision so my code does not support it (and possibly 
will not for some time if ever). that does not preclude the possibility 
of someone else modifying my harvester to include such support (which is 
probably quite trivial, given that its in Perl)

harvesters are not difficult to write - they are usually only written by 
those people who want to build services on the exported data. if i was a 
service provider and you had data interesting to me, with HTTP access 
controls, i would definitely build support into my harvester for those 
controls in order to get to your data. however, until you find a service 
provider sufficiently interested in your data, having BasicAuth access 
controls can be one more hurdle. as an alternative i may even suggest 
using an IP access control list like Tom from UIUC just mentioned - its 
not difficult to implement and makes security primarily the concern of 
the data provider and not the service provider ...

ttfn
----hussein

Josie Imlay wrote:

> I am working on an oai server right now and the people that own the information don't want it getting in to just anyone and everyone's hands. I satisfied this using some simple http protocol level authentication. What I am woundering is if people writing harvesters out there are implementing username/password support at all. 
> 
> Thanks,
> 
> Josie Imlay
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


-- 
======================================================================
hussein suleman - hussein@vt.edu - vtcs - http://www.husseinsspace.com
======================================================================


From lagoze@cs.cornell.edu  Wed Jan 16 14:49:13 2002
From: lagoze@cs.cornell.edu (Carl Lagoze)
Date: Wed, 16 Jan 2002 09:49:13 -0500
Subject: [OAI-implementers] oai security
Message-ID: <706871B20764CD449DB0E8E3D81C4D430254806F@opus.cs.cornell.edu>

Other people have spoken here, but to add briefly:  there is nothing about OAI that precludes restricted access to metadata.  Since the protocol is carried over HTTP any HTTP access management mechanimsms are appropriate.

Carl

Digital Library Scientist
Computer Science Department
Cornell University
Ithaca, NY 14853 USA
Phone: +1-607-255-6046
FAX: +1-607-255-4428
Email: lagoze@cs.cornell.edu
WWW: http://www.cs.cornell.edu/lagoze 

> -----Original Message-----
> From: Donna Bergmark [mailto:bergmark@CS.Cornell.EDU]
> Sent: Monday, January 14, 2002 8:19 PM
> To: Josie Imlay
> Cc: oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: Re: [OAI-implementers] oai security 
> 
> 
> Josie,
> 
> I suspect that username and password authentication is contrary
> to the spirit of the Open Archive Initiative.  However, you should 
> feel free to use the OAI protocol for your own purposes. 
> 
> Currently intellectual property rights are handled in the response
> to the Identify verb by simply stating them. 
> 
> We have not so far heard of people trying to use OAI for proprietary 
> purposes, but this is the mail group from which to get an affirmative
> response if there is one.  
> 
> Interesting.
> 
> Donna
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

From Gul.Akbar@bl.uk  Wed Jan 16 14:55:54 2002
From: Gul.Akbar@bl.uk (Akbar, Gul)
Date: Wed, 16 Jan 2002 14:55:54 -0000
Subject: [OAI-implementers] Problems with  defining sets
Message-ID: <9DC75DF54C35D4118C4000508BA5510F037BA03F@nt-bspex1.bl.uk>

Would somebody be able to supply some information (or provide a link to some
existing information) that explains how to set up sets. I have read the
protocol document but it doesn't explain how sets are implemented.
As far as I can make out a set could just be a directory. However, if a
record belongs in more than one set (eg the sets are grouped by institutions
(as in the protocol) AND subject then there is the potential for records to
be duplicated - making it difficult to ensure that all records about a
particular resource are synchronised.
The protocol states that the "repository's set hierarchy is represented in
the protocol via setSpecs". However, it dosn't state how to define a
setSpec. Any help on this topic would be greatly appreciated.

Thanks in advance,

Gul Akbar.




*********************************************************************
The information contained in this e-mail is confidential and may be 
legally privileged. It is intended for the addressee(s) only. If you 
are not the intended recipient, please delete this e-mail and notify 
the postmaster@bl.uk : The contents of this e-mail must not be 
disclosed or copied without the sender's consent. 

The statements and opinions expressed in this message are those of 
the author and do not necessarily reflect those of the British 
Library. The British Library does not take any responsibility for 
the views of the author. 
*********************************************************************

From simeon@cs.cornell.edu  Wed Jan 16 15:40:40 2002
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Wed, 16 Jan 2002 10:40:40 -0500 (EST)
Subject: [OAI-implementers] Problems with  defining sets
In-Reply-To: <9DC75DF54C35D4118C4000508BA5510F037BA03F@nt-bspex1.bl.uk>
Message-ID: <Pine.LNX.4.33.0201161018330.29626-100000@ice.cs.cornell.edu>

On Wed, 16 Jan 2002, Akbar, Gul wrote:
> Would somebody be able to supply some information (or provide a link to some
> existing information) that explains how to set up sets. I have read the
> protocol document but it doesn't explain how sets are implemented.

The protocol document makes no comment about how sets might be
implemented by a data provided.

Within the protocol setSpecs are 'labels' which may be used to identify
groups of items within the repository. These labels may then used to
restrict certain operations (ListIdentifiers and ListRecords) to those
items.

> As far as I can make out a set could just be a directory. However, if a
> record belongs in more than one set (eg the sets are grouped by institutions
> (as in the protocol) AND subject then there is the potential for records to
> be duplicated - making it difficult to ensure that all records about a
> particular resource are synchronised.

OAI-PMH does not define any 'subject' construct. One could implement that
with sets though.

Items may belong to zero, one or more sets. It would seem inadvisable
to use directories to internally represent sets if you want to allow items
to belong to more than one set unless it is a simple hierarchy. However,
that is an implementation decision and thus out of scope of OAI-PMH.

> The protocol states that the "repository's set hierarchy is represented in
> the protocol via setSpecs". However, it dosn't state how to define a
> setSpec. Any help on this topic would be greatly appreciated.

setSpec is defined at the top of section 2.5:

  setTag -- a non-space separated string of alphanumeric characters;
  setSpec -- a colon [:] separated list of setTags of each node on
  the path leading from a root element to the actual node;

This is really just a definition of syntax. "The actual meaning of a Set
or of the arrangement of Sets in a repository is not defined in the
protocol".

In my OAI tutorial (http://library.cern.ch/HEPLW/4/papers/3/) section 3.5
I wrote:

Sets are provided as an optional construct for grouping items to support
selective harvesting [protocol doc section2.5]. It is not intended that
they should provide a mechanism by which a search is implemented, and
there is no controlled vocabulary for set names so automated
interpretation of set structure is not supported. It should be noted that
sets are optional both from the point of view of the data-provider - which
may or may not implement sets; and the service-provider - which may ignore
any set structure that is exposed. It is not clear whether sets will be
widely used and I shall not consider them further in this tutorial.

Hope this helps,
Simeon.

> Thanks in advance,
>
> Gul Akbar.
>
>
>
>
> *********************************************************************
> The information contained in this e-mail is confidential and may be
> legally privileged. It is intended for the addressee(s) only. If you
> are not the intended recipient, please delete this e-mail and notify
> the postmaster@bl.uk : The contents of this e-mail must not be
> disclosed or copied without the sender's consent.
>
> The statements and opinions expressed in this message are those of
> the author and do not necessarily reflect those of the British
> Library. The British Library does not take any responsibility for
> the views of the author.
> *********************************************************************
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
>



From p.d.cliff@ukoln.ac.uk  Wed Jan 16 16:39:41 2002
From: p.d.cliff@ukoln.ac.uk (Pete Cliff)
Date: Wed, 16 Jan 2002 16:39:41 +0000 (GMT)
Subject: [OAI-implementers] oai security
In-Reply-To: <706871B20764CD449DB0E8E3D81C4D430254806F@opus.cs.cornell.edu>
Message-ID: <Pine.SO4.4.05.10201161633440.20120-100000@lamin.ukoln.ac.uk>

Hello!

On Wed, 16 Jan 2002, Carl Lagoze wrote:

> Other people have spoken here, but to add briefly:  there is nothing
> about OAI that precludes restricted access to metadata.  Since the
> protocol is carried over HTTP any HTTP access management mechanimsms
> are appropriate.

Just picking up on this thread as I've been out of the office for a couple
of days. 

The Resource Discovery Network currently builds the database behind
ResourceFinder - our cross-searching service see www.rdn.ac.uk - by
gathering metadata records using the OAI protocol. We don't publish the
addresses of our repositories, and protect them with IP based
authentication - a fairly closed enviroment - but OAI has made this easy
and standard.

We then have the potential to share records in a standard way, even if we
don't do it currently...

Cheers,

--
Pete Cliff
--
Systems Developer - Resource Discovery Network - www.rdn.ac.uk
UKOLN University of Bath, Bath, BA2 7AY. UK.
Telephone: +44 1225 383218   Fax: +44 1225 386838
www.ukoln.ac.uk/ukoln/staff/p.d.cliff


From bergmark@CS.Cornell.EDU  Wed Jan 16 18:34:31 2002
From: bergmark@CS.Cornell.EDU (Donna Bergmark)
Date: Wed, 16 Jan 2002 13:34:31 -0500
Subject: [OAI-implementers] OAI Site Browser
Message-ID: <200201161834.g0GIYVu11188@elgin.cs.cornell.edu>

Some of you are OAI service providers who use the ListFriends
script found on the Registered Data Providers page.
(http://www.openarchives.org/Register/BrowseSites.pl).

I changed that script to include repositoryIdentifiers where
they exist.  

Would one of you test the new script and see that it doesn't
break anything?  Let me know if there are problems.

Donna

From support@eprints.org  Fri Jan 18 11:06:58 2002
From: support@eprints.org (ePrints Support)
Date: Fri, 18 Jan 2002 11:06:58 +0000
Subject: [OAI-implementers] XML Schema for OAI compliance with NSDL harvesting
In-Reply-To: <p04320405b83e7d58bd91@[10.38.144.7]>; from jperkins@fox.nstn.ca on Thu, Dec 13, 2001 at 01:58:03PM -0400
References: <706871B20764CD449DB0E8E3D81C4D4301F2C701@opus.cs.cornell.edu> <p04320405b83e7d58bd91@[10.38.144.7]>
Message-ID: <20020118110658.B14115@ecs.soton.ac.uk>

Sorry for replying to old message - I'm catching up on my mail.

On Thu, Dec 13, 2001 at 01:58:03PM -0400, John Perkins wrote:
> resources it would work fine. What we gained by many communities 
> adopting DC for discovery would far offset the lack of depth and 
> breadth at the discovery level.  We also concluded that using DC 
> qualifed was an additional level of complexity that didn't buy us any 
> more at the discovery level and so we suggested museums not use it.

I feel strongly that we should keep simple dc as required in OAI. Some 
archives really care about supporting OAI, but many more have no objection
if it's not too hard. DC is cheap and cheerful and at the very least better
than a google search (I would hope). It will promote broad resource 
descovery. 

Anyone who is willing to implement a more complex schema should be able
to implement unqualified dc easily "in passing".

The problem for this very loose format is for people trying to mechanically
process the OAI data. For example:
- identifying and merging records from different sources which describe 
the same item.  
- citation linking work. For example people wanting to build systems which
trawl huge piles of OAI records looking for the metadata record which best
matches a citation in a paper. 

Lack of semantics make this tasks harder. I know that some people on the
list work on this kinda stuff (Tim Brody), if I've missed the point, let me
know.

If I were working on this I would want clearer semantics, but still having
all archives using the same semantics.

Maybe OAI could define a better but optional qualified dc standard which 
is a bit more work to implement, like level 2 DOM. Maybe "oai_lv2_dc" which
could make it clear that the date is the date of creation of the item
refered to by the metadata, not the record of it. And clearly define how
dates and peoples names should be formated.

This would require no change to the current protocol, just OAI recommending
a oai_lv2_dc spec as "best-er" practice. People would still have to do
oai_dc too. (which would be pretty damn easy).

The people wanting to use OAI for mechanical processing rather than resource
discovery would have to discuss the actual requirements.



-- 

 Christopher Gutteridge                   support@eprints.org 
 ePrints Technical Support                +44 23 8059 4833


From wunder@inktomi.com  Thu Jan 24 19:02:55 2002
From: wunder@inktomi.com (Walter Underwood)
Date: Thu, 24 Jan 2002 11:02:55 -0800
Subject: [OAI-implementers] DP9 and HTML metadata
Message-ID: <1477300000.1011898975@diva.inktomi.com>

As a spider engineer, I'd like to suggest an improvement to DP9.
I'm sending this to the whole OAI list partly to introduce myself,
and partly because it is an interesting omission in DP9.

DP9 should use HTML metadata standards to present the Dublin Core
metadata. Right now, it prettyprints the info, but that is not
useful for a spider. 

In addition to the pretty representation, the generated HTML should
include meta tags for each DC element. I'd recommend also using
native HTML/HTTP standards for a couple of the elements:

   dc.title:Hamlet --> <title>Hamlet</title>
   dc.language:en  --> <meta http-equiv="content-language" content="en">

Our engine (Inktomi Enterprise Search) will use that metadata for
the information presented in the results page. In addition, the
engine can be configured to use DC.identifier as the URL which is
presented with the results.

Finally, if there are browsable index pages with links to the 
generated GetRecord pages, those should probably include a
noindex robots meta tag. Lists of URLs are usually not very
useful search results. They are excellent roots (start pages)
for spidering, though.

wunder
--
Walter Underwood
wunder@inktomi.com
Senior Staff Engineer, Inktomi
http://www.inktomi.com/


From mln@ils.unc.edu  Thu Jan 24 19:18:25 2002
From: mln@ils.unc.edu (Michael L. Nelson)
Date: Thu, 24 Jan 2002 14:18:25 -0500 (EST)
Subject: [OAI-implementers] DP9 and HTML metadata
In-Reply-To: <1477300000.1011898975@diva.inktomi.com>
Message-ID: <Pine.GSO.4.21.0201241409560.12367-100000@ruby.ils.unc.edu>

Walter,

These are excellent suggestions, and ones that I'm sure Xiaoming Liu can
easily add.

But since you're on the line, I have some questions for you ;-)

1.  Do you have an official or personal opinion that you can share about
OAI & spidering?  

2.  DP9 is great for spiders that don't know any better, but what are the
chances of "OAI-aware" spiders?  Or is that such a special case that its
not worth accounting for...

Specifically, I maintain http://naca.larc.nasa.gov/.  Spiders are
frequently churning around in the tens of thousands of possible pages
there.  Of course, this is a good substitute:

http://arc.cs.odu.edu:8080/dp9/listidentifiers/NACA

but even better would be a spider that knew to use:

http://naca.larc.nasa.gov/oai/

thanks,

Michael

On Thu, 24 Jan 2002, Walter Underwood wrote:

> As a spider engineer, I'd like to suggest an improvement to DP9.
> I'm sending this to the whole OAI list partly to introduce myself,
> and partly because it is an interesting omission in DP9.
> 
> DP9 should use HTML metadata standards to present the Dublin Core
> metadata. Right now, it prettyprints the info, but that is not
> useful for a spider. 
> 
> In addition to the pretty representation, the generated HTML should
> include meta tags for each DC element. I'd recommend also using
> native HTML/HTTP standards for a couple of the elements:
> 
>    dc.title:Hamlet --> <title>Hamlet</title>
>    dc.language:en  --> <meta http-equiv="content-language" content="en">
> 
> Our engine (Inktomi Enterprise Search) will use that metadata for
> the information presented in the results page. In addition, the
> engine can be configured to use DC.identifier as the URL which is
> presented with the results.
> 
> Finally, if there are browsable index pages with links to the 
> generated GetRecord pages, those should probably include a
> noindex robots meta tag. Lists of URLs are usually not very
> useful search results. They are excellent roots (start pages)
> for spidering, though.
> 
> wunder
> --
> Walter Underwood
> wunder@inktomi.com
> Senior Staff Engineer, Inktomi
> http://www.inktomi.com/
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

---
Michael L. Nelson
NASA Langley Research Center		m.l.nelson@larc.nasa.gov
MS 158, Hampton, VA 23681		http://www.ils.unc.edu/~mln/
+1 757 864 8511				+1 757 864 8342 (f)


From wunder@inktomi.com  Thu Jan 24 20:01:03 2002
From: wunder@inktomi.com (Walter Underwood)
Date: Thu, 24 Jan 2002 12:01:03 -0800
Subject: [OAI-implementers] DP9 and HTML metadata
In-Reply-To: <Pine.GSO.4.21.0201241409560.12367-100000@ruby.ils.unc.edu>
References: <Pine.GSO.4.21.0201241409560.12367-100000@ruby.ils.unc.edu>
Message-ID: <1509340000.1011902463@diva.inktomi.com>

--On Thursday, January 24, 2002 02:18:25 PM -0500 "Michael L. Nelson" <mln@ils.unc.edu> wrote:
> 
> But since you're on the line, I have some questions for you ;-)
> 
> 1.  Do you have an official or personal opinion that you can share about
> OAI & spidering?  

Open archives are great, and a common protocol is a good idea.
I haven't looked at the OAI protocol yet.

Metadata-only indexes have some serious weaknesses. They almost
require a separate thesaurus with lots of entry terms, and even
then, they won't handle searches for secondary characteristics,
like names of characters in fiction.

Metadata+fulltext is much more powerful.

For example, the "Celebration of Women Writers" collection is good,
but the metadata is minimal. The Caltech Thesis collection has nice, big
descriptions, which gives a bigger "target" for matching user queries.

For "celebration", I'd recommend indexing the source documents instead.

Good metadata is very expensive, so we only see that on high-investment
documents, like public techreports. Even then, I've seen some surprisingly
sloppy index keywords ("IR" in one report, "Information Retrieval" in
the next).

> 2.  DP9 is great for spiders that don't know any better, but what are the
> chances of "OAI-aware" spiders?  Or is that such a special case that its
> not worth accounting for...

Part of the answer is "how much will people pay for that?"
Another part is "how hard is it to implement?"
And then there is "how much fun is it?"

I don't have the answer to any of those right now.

> ... Of course, this is a good substitute:
> 
> http://arc.cs.odu.edu:8080/dp9/listidentifiers/NACA

For spiders, that should be broken into smaller pages, with around
1000 links each. Big pages with tons of links can cause problems.
Perhaps a page for each year.

And you need the HTML pages anyway, for humans to view.

wunder
--
Walter Underwood
wunder@inktomi.com
Senior Staff Engineer, Inktomi
http://www.inktomi.com/


From liu_x@cs.odu.edu  Fri Jan 25 06:03:38 2002
From: liu_x@cs.odu.edu (Xiaoming Liu)
Date: Fri, 25 Jan 2002 01:03:38 -0500 (EST)
Subject: [OAI-implementers] DP9 and HTML metadata
In-Reply-To: <1477300000.1011898975@diva.inktomi.com>
Message-ID: <Pine.SOL.4.10.10201250006320.27005-100000@defiant.cs.odu.edu>

Walter,

These suggestions are great! They are added in the test site:
	http://egbert.cs.odu.edu:8901/dp9

I hope I have addressed most issues you mentioned, including,
--Add html meta tag for each DC field.
--Use dc:title in <title>title</title> (This is also suggested by Tim
Brody, thanks)
--dc.language:en  --> <meta http-equiv="content-language"
content="en">
-- Add  <META NAME="ROBOTS" CONTENT="NOINDEX,FOLLOW"> in browsable index
page.


I also add another HTML/HTTP tag,
<meta content="2000-07-27" http-equiv="Last-Modified">

The value in this field is "datestamp" in OAI protocol, roughly it means
the last modification date of metadata record, for its precise definition
you may see
http://www.openarchives.org/OAI_protocol/openarchivesprotocol.html#Datestamp
 
All pages in DP9 are dynamically created, so the last-modified header
in DP9 http response may be misleading and  bring about addtional
indexing overhead to web crawlers.  I hope "last modified" HTML/HTTP
header may help a bit. 

Several issues need more works,
-- Use DC.identifier as URL which is presented with the results.

In OAI, the DC.identifier may not be an URL, (although in many cases they
are). I am not sure whether a validator should be added.

-- Break large page (like NACA) to smaller pieces (metntioned in
re:Michael's mail)

Due to current limitations of DP9, it is difficult to add this
feature right now. DP9 forwards requests to data provider and tries to
present whatever it gets. We are thinking about some cache mechansims, it
may help solve this problem.

There are over 1M metadata records available in current OAI compliant
repositories (see http://arc.cs.odu.edu), it is great if they are all get
indexed by search engines :-)

thanks,

Liu




On Thu, 24 Jan 2002, Walter Underwood wrote:

> As a spider engineer, I'd like to suggest an improvement to DP9.
> I'm sending this to the whole OAI list partly to introduce myself,
> and partly because it is an interesting omission in DP9.
> 
> DP9 should use HTML metadata standards to present the Dublin Core
> metadata. Right now, it prettyprints the info, but that is not
> useful for a spider. 
> 
> In addition to the pretty representation, the generated HTML should
> include meta tags for each DC element. I'd recommend also using
> native HTML/HTTP standards for a couple of the elements:
> 
>    dc.title:Hamlet --> <title>Hamlet</title>
>    dc.language:en  --> <meta http-equiv="content-language" content="en">
> 
> Our engine (Inktomi Enterprise Search) will use that metadata for
> the information presented in the results page. In addition, the
> engine can be configured to use DC.identifier as the URL which is
> presented with the results.
> 
> Finally, if there are browsable index pages with links to the 
> generated GetRecord pages, those should probably include a
> noindex robots meta tag. Lists of URLs are usually not very
> useful search results. They are excellent roots (start pages)
> for spidering, though.
> 
> wunder
> --
> Walter Underwood
> wunder@inktomi.com
> Senior Staff Engineer, Inktomi
> http://www.inktomi.com/
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


From wunder@inktomi.com  Fri Jan 25 20:04:39 2002
From: wunder@inktomi.com (Walter Underwood)
Date: Fri, 25 Jan 2002 12:04:39 -0800
Subject: [OAI-implementers] protocol comments, OAI 2.0
Message-ID: <12708390.1011960279@[0.0.0.0]>

Looking through the OAI 1.1 spec, I have some comments on it.
The site says that a 2.0 spec is expected, so this would seem
like a good time to comment.

Is this the right place to comment?

wunder
--
Walter R. Underwood
Senior Staff Engineer
Inktomi Enterprise Search
http://search.inktomi.com/

From simeon@cs.cornell.edu  Fri Jan 25 20:15:19 2002
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Fri, 25 Jan 2002 15:15:19 -0500 (EST)
Subject: [OAI-implementers] protocol comments, OAI 2.0
In-Reply-To: <12708390.1011960279@[0.0.0.0]>
Message-ID: <Pine.LNX.4.44.0201251514060.5917-100000@ice.cs.cornell.edu>

The technical committee is quite some way down the line with
v2 but we'd be pleased to hear your comments. Fire away...

Cheers,
Simeon.


On Fri, 25 Jan 2002, Walter Underwood wrote:
> Looking through the OAI 1.1 spec, I have some comments on it.
> The site says that a 2.0 spec is expected, so this would seem
> like a good time to comment.
> 
> Is this the right place to comment?
> 
> wunder
> --
> Walter R. Underwood
> Senior Staff Engineer
> Inktomi Enterprise Search
> http://search.inktomi.com/


From wunder@inktomi.com  Fri Jan 25 22:00:06 2002
From: wunder@inktomi.com (Walter Underwood)
Date: Fri, 25 Jan 2002 14:00:06 -0800
Subject: [OAI-implementers] protocol comments, OAI 2.0
In-Reply-To: <12708390.1011960279@[0.0.0.0]>
References: <12708390.1011960279@[0.0.0.0]>
Message-ID: <13124168.1011967206@[0.0.0.0]>

Themes: use SOAP, make it stateless, make it simpler.

SOAP is being implemented everywhere. Even AppleScript can make SOAP
calls. The last time I saw this many vendors use one standard was
Ethernet. So replace the custom XML protocol with SOAP.

A stateless protocol can be cached outside of the server,
so that is a very valuable thing to do. The current spec
has a defensive tone about load. That should not be necessary.
A few modifications will make the protocols stateless and
cache-friendly.

ListIdentifiers and ListRecords are stateful now. They should be
replaced with a "paged list" model, where the client requests a
starting element number and a number of results. This is an exact
match for the normal web results interface. It is also the
approach used in the LDAP virtual list control.

ListIdentifiers/Records also needs to be very clear about the
contents of successive calls for different parts of the
list. Consider a rapidly changing repository, like a newswire.
The results for the list may change between calls. The list
is not part of some transaction, where the contents don't change
for the duration of the session. If a client really needs a
consistant list, it can ask for the whole thing. Each request
for a portion of the list is independent and can be cached.

Datestamps are problematic in protocols, and should not be
used. Computers insist that you choose some time for that
day. Is it noon? One minute after midnight? How do you compare
that to a time on the same day? So don't allow datestamps in
protocols. Always use timestamps to the second, in UTC. Don't
allow timezones or less precision.

Of course, the metadata may contain date-only times.

Since deleted record items are not reliable, they are not all
that useful. After the robot is burned the first time, the
implementors will switch to polling the entire repository.
They are sort of useful as hints, but I can see serious
problems in some uses. In the newswire example, it is common
to have a limited time right to the news articles, perhaps
two weeks. So a reliable list of deleted items would grow
without bound. Not good.

Robots can use something like the HTTP if-modified-since request.
This would be a parameter for GetRecord. If the record has
been modified since the timestamp, return it. Otherwise, return
the info that it has not been modified. Implementors should try
and make this request fast.

I have not looked at the interaction between SOAP and HTTP caches.
It is possibled that they can be cached. If so, take some extra care.
A GET can be satisfied by a cache, but a POST cannot. Properly
setting the HTTP headers on responses means that a server can rely
on an external HTTP cache rather than managing an internal cache.
This is a big win.

The "Set" concept is optional and I don't see much motivation for it.
I don't see a request which allows multiple sets, so there is no
reason to have both sets and repositories. Except for listing them
(ListSets), which is a limited sort of directory service.

In SOAP-land, directory service is the job of UDDI, and it should
not be re-implemented differently in a protocol. So remove Sets.
A single SOAP server can still be registered for multiple repositories,
or corpora, or collections, or whatever they are called.

I have a few minor nits, like there is no reason to outlaw XML
features which are required in all parsers, like UTF-16 or decimal
entities. But switching to SOAP makes lexical issues moot.

Overall, the protocol is good. Using URIs, Dublin Core, HTTP/XML,
all those things are exactly right. The spec is clear and readable.
And I'm delighted that it doesn't use RDF.

wunder
--
Walter R. Underwood
Senior Staff Engineer
Inktomi Enterprise Search
http://search.inktomi.com/

From simeon@cs.cornell.edu  Wed Jan 30 19:08:26 2002
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Wed, 30 Jan 2002 14:08:26 -0500 (EST)
Subject: [OAI-implementers] protocol comments, OAI 2.0
In-Reply-To: <13124168.1011967206@[0.0.0.0]>
Message-ID: <Pine.LNX.4.44.0201301111490.21950-100000@ice.cs.cornell.edu>

Walter,

Thanks for your comments. 

On Fri, 25 Jan 2002, Walter Underwood wrote:
> Themes: use SOAP, make it stateless, make it simpler.
> 
> SOAP is being implemented everywhere. Even AppleScript can make SOAP
> calls. The last time I saw this many vendors use one standard was
> Ethernet. So replace the custom XML protocol with SOAP.

The technical committee agreed that the protocol should be more decoupled
from HTTP but we didn't feel that SOAP is the correct option at the
moment. It is likely that some people will experiment with OAI v2 over
SOAP.
 
> A stateless protocol can be cached outside of the server,
> so that is a very valuable thing to do. The current spec
> has a defensive tone about load. That should not be necessary.
> A few modifications will make the protocols stateless and
> cache-friendly.
> 
> ListIdentifiers and ListRecords are stateful now. They should be
> replaced with a "paged list" model, where the client requests a
> starting element number and a number of results. This is an exact
> match for the normal web results interface. It is also the
> approach used in the LDAP virtual list control.

Load is a concern for some implementers. For example, arXiv (the
repository I work with) would not want to give clients the opportunity to
ask for all 185,000 metadata records in one response.
 
> ListIdentifiers/Records also needs to be very clear about the
> contents of successive calls for different parts of the
> list. Consider a rapidly changing repository, like a newswire.
> The results for the list may change between calls. The list
> is not part of some transaction, where the contents don't change
> for the duration of the session. If a client really needs a
> consistant list, it can ask for the whole thing. Each request
> for a portion of the list is independent and can be cached.

OAI is implicitly not focused on rapidly changing repositories and this
has influenced the design of v1.1 and continues to influence the design of
v2. Creating a low barrier to adoption is considered very important and
the use of an opaque resumptionToken gives implementers great flexibility.
For example, for arXiv the only state involved in a set of list requests
is in the resumptionToken (nothing is stored on the repository). In other
implementations the result set is cached. Allowing implementers this
flexibility reduces the barrier to adoption by repositories.
 
> Datestamps are problematic in protocols, and should not be
> used. Computers insist that you choose some time for that
> day. Is it noon? One minute after midnight? How do you compare
> that to a time on the same day? So don't allow datestamps in
> protocols. Always use timestamps to the second, in UTC. Don't
> allow time zones or less precision.

There has been broad agreement to move to UTC for all date/timestamps.
However, there is support for allowing different granularities (with well
defined precision extension semantics) to reflect the underlying
granularity of some repositories.

> Of course, the metadata may contain date-only times.
> 
> Since deleted record items are not reliable, they are not all
> that useful. After the robot is burned the first time, the
> implementors will switch to polling the entire repository.
> They are sort of useful as hints, but I can see serious
> problems in some uses. In the newswire example, it is common
> to have a limited time right to the news articles, perhaps
> two weeks. So a reliable list of deleted items would grow
> without bound. Not good.

Clearly such a repository would maintain records of deleted items only for
a fixed time. That would still be useful provided the harvesting interval
is much smaller than the expiry time. Without deleted records, one is
forced to poll in all cases.

> Robots can use something like the HTTP if-modified-since request.
> This would be a parameter for GetRecord. If the record has
> been modified since the timestamp, return it. Otherwise, return
> the info that it has not been modified. Implementors should try
> and make this request fast.

ListRecords provides a better way to say if-modified-since for any set or
the whole repository. I think that in many implementations the cost of
implementing a not-modified response to if-modified-since would be 
only marginally less than returning the metadata.
 
> I have not looked at the interaction between SOAP and HTTP caches.
> It is possibled that they can be cached. If so, take some extra care.
> A GET can be satisfied by a cache, but a POST cannot. Properly
> setting the HTTP headers on responses means that a server can rely
> on an external HTTP cache rather than managing an internal cache.
> This is a big win.
> 
> The "Set" concept is optional and I don't see much motivation for it.
> I don't see a request which allows multiple sets, so there is no
> reason to have both sets and repositories. Except for listing them
> (ListSets), which is a limited sort of directory service.

It is not possible to get away from the concept of repositories (usually
different servers run by different people). Some people want to use sets
and they can; others can ignore them and there is no overhead in that
case. One historical example is that arXiv is partitioned into four sets
(cs, math, physics, nlin) and the NCSTRL digital library wanted to harvest
only the cs set. The Dienst equivalent of OAI-PMH's sets facilitated this.  
Note that the use of sets is not limited to subject partitioning.

> In SOAP-land, directory service is the job of UDDI, and it should
> not be re-implemented differently in a protocol. So remove Sets.
> A single SOAP server can still be registered for multiple repositories,
> or corpora, or collections, or whatever they are called.

Sets provide for a simple, arbitrarily defined partitioning of a
repository. There is interest in defining community specific set
organizations to aid in aggregation within certain communities. This
doesn't seem to be the same as the purpose of UDDI (which could still
prove a sensible model for global registration of OAI services).

> I have a few minor nits, like there is no reason to outlaw XML
> features which are required in all parsers, like UTF-16 or decimal
> entities. But switching to SOAP makes lexical issues moot.
> 
> Overall, the protocol is good. Using URIs, Dublin Core, HTTP/XML,
> all those things are exactly right. The spec is clear and readable.
> And I'm delighted that it doesn't use RDF.

Feelings about RDF seem so frequently to be almost religious! 

Cheers,
Simeon.

[My comments are influenced by the discussions of the OAI technical
committee but I am speaking only for myself]

 
> wunder
> --
> Walter R. Underwood
> Senior Staff Engineer
> Inktomi Enterprise Search
> http://search.inktomi.com/
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers




From wunder@inktomi.com  Wed Jan 30 23:00:37 2002
From: wunder@inktomi.com (Walter Underwood)
Date: Wed, 30 Jan 2002 15:00:37 -0800
Subject: [OAI-implementers] protocol comments, OAI 2.0
In-Reply-To: <Pine.LNX.4.44.0201301111490.21950-100000@ice.cs.cornell.edu>
References: <Pine.LNX.4.44.0201301111490.21950-100000@ice.cs.cornell.edu>
Message-ID: <3781160000.1012431637@diva.inktomi.com>

--On Wednesday, January 30, 2002 02:08:26 PM -0500 Simeon Warner <simeon@cs.cornell.edu> wrote:
> 
> The technical committee agreed that the protocol should be more decoupled
> from HTTP but we didn't feel that SOAP is the correct option at the
> moment. 

I would be very interested in the reasons for this. With a SOAP
interface, it would be fairly easy to build a harvester for
our search engine. It would be a very nice sample program for our
indexing interface. But with a one-of-a-kind XML protocol, it isn't 
worth the trouble.

I believe that not using SOAP is a serious mistake. It means that
OAI will remain a niche protocol, with few implementations, few
users, and little positive effect.

With SOAP, you get scaling support, test suites, development tools,
supported libraries, directory service, etc. A custom protocol can
never catch up. And implementors have much better things to do
with their time than re-invent RPC.

> Load is a concern for some implementers. For example, arXiv (the
> repository I work with) would not want to give clients the opportunity to
> ask for all 185,000 metadata records in one response.

The system can limit the number returned in each response.
On the other hand, if the client really needs all the records,
one response is probably more efficient than multiple responses.
And the one response can be cached externally.
  
> ListRecords provides a better way to say if-modified-since for any set or
> the whole repository.

It replicates a standard HTTP feature in a non-standard way. As someone
who writes spiders/harvesters, I think it is not better. At HP, we
used to say, "standard is better than better". But, I'm honestly
not sure whether SOAP allows If-modified-since. If it doesn't, then
don't use it.

> It is not possible to get away from the concept of repositories (usually
> different servers run by different people). Some people want to use sets
> and they can; others can ignore them and there is no overhead in that
> case.

Perhaps my point wasn't clear. Since there is no way to address a
request to more than one set, there is no need for sets to be visible
in the protocol. Different sets can be different protocol endpoints,
with no loss of generality. Instead of respository, speak of the
server which is providing access to the sets.

So one server could provide these:

  arXiv
  arXiv-cs
  arXiv-math
  arXiv-physics
  arXiv-nlin

Or those could be spread across multiple servers.

Moving service discovery to UDDI also means that the OAI protocol doesn't
need the ListSets request.

wunder
--
Walter Underwood
wunder@inktomi.com
Senior Staff Engineer, Inktomi
http://www.inktomi.com/


From mln@ils.unc.edu  Thu Jan 31 04:37:36 2002
From: mln@ils.unc.edu (Michael L. Nelson)
Date: Wed, 30 Jan 2002 23:37:36 -0500 (EST)
Subject: [OAI-implementers] protocol comments, OAI 2.0
In-Reply-To: <3781160000.1012431637@diva.inktomi.com>
Message-ID: <Pine.GSO.4.21.0201302228320.8192-100000@ruby.ils.unc.edu>

>And implementors have much better things to do with their time than
>re-invent RPC.

I thought re-inventing Sun RPC is what SOAP is all about ;-)

>I would be very interested in the reasons for this. With a SOAP
>interface, it would be fairly easy to build a harvester for
>our search engine. It would be a very nice sample program for our
>indexing interface. But with a one-of-a-kind XML protocol, it isn't 
>worth the trouble.

I agree with your point about a one-off protocol.  However, as Simeon
mentioned, OAI 2.0 will not have http dependencies.  Much like DP9, we
fully expect 3rd party OAI <-> SOAP gateways to be written.  This would
make the OAI data providers available to SOAP-based crawlers.

>Different sets can be different protocol endpoints, with no loss of
>generality. Instead of respository, speak of the server which is
>providing access to the sets.

>So one server could provide these:

>  arXiv
>  arXiv-cs
>  arXiv-math
>  arXiv-physics
>  arXiv-nlin

>Or those could be spread across multiple servers.

this is still doable in OAI; the following suggests multiple strategies
that would actually be similar in implementation:

http://www.arxiv.org/oai/?verb=ListRecords&set=physics
http://www.arxiv.org/oai/?verb=ListRecords&set=math
etc.

or

http://www.arxiv.org/oai/physics/?verb=ListRecords
http://www.arxiv.org/oai/math/?verb=ListRecords
etc.

Indeed, I think time will reveal that 1 DL (or 1 organization) will desire
many OAI interfaces.


Perhaps the best description is the primary goal of keeping OAI as simple
as possible for data providers, even at the expense of service provider.
The notion is that if being a DP is as *absolutely simple* as possible,
more DPs will exist.  A critical mass of DPs will cause SPs to emerge.

I suppose this point is debatable, but I consider the OAI-PMH over http
much easier to implement than SOAP.

So, I guess the next question is "who will write the first OAI <-> SOAP
gateway?"

regards,

Michael

---
Michael L. Nelson
NASA Langley Research Center		m.l.nelson@larc.nasa.gov
MS 158, Hampton, VA 23681		http://www.ils.unc.edu/~mln/
+1 757 864 8511				+1 757 864 8342 (f)




From wunder@inktomi.com  Thu Jan 31 05:07:54 2002
From: wunder@inktomi.com (Walter Underwood)
Date: Wed, 30 Jan 2002 21:07:54 -0800
Subject: [OAI-implementers] protocol comments, OAI 2.0
In-Reply-To: <Pine.GSO.4.21.0201302228320.8192-100000@ruby.ils.unc.edu>
References: <Pine.GSO.4.21.0201302228320.8192-100000@ruby.ils.unc.edu>
Message-ID: <7141038.1012424874@[0.0.0.0]>

--On Wednesday, January 30, 2002 11:37 PM -0500 "Michael L. Nelson" <mln@ils.unc.edu> wrote:
>
> I agree with your point about a one-off protocol.  However, as Simeon
> mentioned, OAI 2.0 will not have http dependencies.

SOAP does not have HTTP dependencies. HTTP is only one transport
for SOAP. E-mail is another.

> Perhaps the best description is the primary goal of keeping OAI as simple
> as possible for data providers, even at the expense of service provider.
> The notion is that if being a DP is as *absolutely simple* as possible,
> more DPs will exist.  A critical mass of DPs will cause SPs to emerge.

Custom protocols are never simple. They are dead ends. There won't be
an O'Reilly book for OAI. There will be for SOAP.

Why build something and wait for the users to come? Take it to them,
in their language. Now. Even AppleScript can make SOAP calls. Really.

> So, I guess the next question is "who will write the first OAI <-> SOAP
> gateway?"

My question is, "why should it be neccesary, when it could have
been a SOAP protocol in the first place?" Why design something
that is destined to be an epicycle in the cosmology?

I'm guessing that 2.0 is "too far along" to change. That is not
a good reason to do the wrong thing. The model is already there,
recast it in WSDL.

wunder
--
Walter R. Underwood
Senior Staff Engineer
Inktomi Enterprise Search
http://search.inktomi.com/

From jtregear@salud.unm.edu  Thu Jan 31 21:29:41 2002
From: jtregear@salud.unm.edu (Jonathan Tregear)
Date: Thu, 31 Jan 2002 14:29:41 -0700
Subject: [OAI-implementers] protocol comments, OAI 2.0
Message-ID: <sc5954f4.093@salud.unm.edu>

I am also interested in the reasons that the OAI technical committee
doesn't feel that SOAP is the correct option at this moment. Has the
technical committee published any discussion on this issue that I can
read? If not, could someone from the technical committee post a summary
of the reasons for this conclusion?

This is particularly important to me because I need to make a decision
about a number of repositories that I am working on. As another
perspective on the ease of implementation justification for data
providers of continuing with the current custom OAI protocal,
personally, as one of those potential data providers I would rather
invest my institutions time and resources coding to a W3C web services
standard than to, what is in essence, a proprietary protocol. This has
caused me to delay, altogether, implementing our repositories for now.

I realize the unfortunate timing of the emergence of SOAP as a web
standard after a great deal of institutional infrastructure has already
been created around the current OAI protocol, but as they say times have
changed and what I seem to be seeing here is the beginnings of a web
services replay of the proprietary html tag wars of the past few years.
And the last thing I want to see is OAI playing the part of Netscape 4.7
in this replay.

We now insist that the web developers in our organization support and
code to W3C html standards. In the absence of really good reasons to the
contrary, I think OAI should support and implement W3C web services
standards as well. Gateways (other than as a transitional step) are not
the right answer here. It is very OAI centric to think that a much
larger web services community should come to you rather than OAI
supporting web service standards directly. For the long-term benefit of
the larger open archives community, I hope that this happens sooner
rather than later.

Thanks,
Jonathan Tregear
Health Sciences Center
University of New Mexico

>>> Walter Underwood <wunder@inktomi.com> 01/30/02 22:13 PM >>>
--On Wednesday, January 30, 2002 11:37 PM -0500 "Michael L. Nelson"
<mln@ils.unc.edu> wrote:
>
> I agree with your point about a one-off protocol.  However, as Simeon
> mentioned, OAI 2.0 will not have http dependencies.

SOAP does not have HTTP dependencies. HTTP is only one transport
for SOAP. E-mail is another.

> Perhaps the best description is the primary goal of keeping OAI as
simple
> as possible for data providers, even at the expense of service
provider.
> The notion is that if being a DP is as *absolutely simple* as
possible,
> more DPs will exist.  A critical mass of DPs will cause SPs to emerge.

Custom protocols are never simple. They are dead ends. There won't be
an O'Reilly book for OAI. There will be for SOAP.

Why build something and wait for the users to come? Take it to them,
in their language. Now. Even AppleScript can make SOAP calls. Really.

> So, I guess the next question is "who will write the first OAI <->
SOAP
> gateway?"

My question is, "why should it be neccesary, when it could have
been a SOAP protocol in the first place?" Why design something
that is destined to be an epicycle in the cosmology?

I'm guessing that 2.0 is "too far along" to change. That is not
a good reason to do the wrong thing. The model is already there,
recast it in WSDL.

wunder
--
Walter R. Underwood
Senior Staff Engineer
Inktomi Enterprise Search
http://search.inktomi.com/
_______________________________________________
OAI-implementers mailing list
OAI-implementers@oaisrv.nsdl.cornell.edu
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


