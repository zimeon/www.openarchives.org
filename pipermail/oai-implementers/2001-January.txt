From ejc@twcny.rr.com  Sun Jan 21 04:59:25 2001
From: ejc@twcny.rr.com (elly)
Date: Sat, 20 Jan 2001 23:59:25 -0500
Subject: [Oai-implementers] List started for OAI-implementers
Message-ID: <KOEAIMBHMBHIPEBPEOHNEELFCCAA.ejc@twcny.rr.com>

Test

From elly@CS.Cornell.EDU  Thu Jan 25 17:10:35 2001
From: elly@CS.Cornell.EDU (elly)
Date: Thu, 25 Jan 2001 12:10:35 -0500
Subject: [OAI-implementers] FW from Jeff Young: MARC to DC Translator (ALPHA)
Message-ID: <706871B20764CD449DB0E8E3D81C4D43010EA9B5@opus.cs.cornell.edu>

From:	Young,Jeff 
Sent:	Thursday, January 25, 2001 8:57 AM
Subject: MARC to DC Translator (ALPHA)
 
Sorry for the cross-posting.
 
While working on an OAI repository, I had the need to convert 
MARC communication format records to unqualified Dublin Core. 
I searched the web for such a tool, without success, and 
decided to write one based on OCLC's CORC system. I suspect 
such a service would be useful for others as well, so I'd 
like to announce the availability of the server for 
evaluation purposes. Its status should be considered alpha, 
and I can't make any long-term promises about its continued 
availability yet.

I've set up a form from which records can be submitted to the 
server at http://purl.org/alcme/marc2dc/index.html. If you 
look closely, you'll see some caveats listed on the form, as 
well as a reference to a file containing a few test records 
I've put out on the web for you to play with.
  
Until it's been scrutinized, I wouldn't recommend that you 
trust the results as definitive. I would also request that 
you don't overburden the server by converting your entire 
OPAC just yet. Just give it a poke and let me know what you 
think. I'd be particularly interested in information and 
perhaps even the comparison of results  with any other MARC 
to DC converters that people may know about.
 
 Thanks,
 Jeff
 
 ---
 Jeffrey A. Young
 Senior Consulting Systems Analyst
 Office of Research, Mail Code 710
 OCLC Online Computer Library Center, Inc.
 6565 Frantz Road
 Dublin, OH   43017-3395
 www.oclc.org
 
 Voice:	614-764-4342
 Fax:		614-764-2344
 Email:	jyoung@oclc.org
 


From jyoung@oclc.org  Thu Jan 25 18:46:45 2001
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 25 Jan 2001 13:46:45 -0500
Subject: [OAI-implementers] RE: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
Message-ID: <E5431CF93E29F9478878F623E5B9CE98341EAE@OA3-SERVER.oa.oclc.org>

(I'm moving this from oai-alpha to oai-implementers where it should get
broader attention.)

Thanks for your feedback, Diane. One appealing option for me would be to
support multiple crosswalks with my server. I would note, however, that a
client/server model isn't the most efficient way of doing these things. The
main reason I used this approach is because the MARC to DC conversion that
CORC uses isn't easily de-coupled from the overall system (regrettably).
Client/servers are also nice because of their flexibility. Given a choice,
though, I would have preferred to write an XSLT stylesheet, which could be
easily distributed. Maybe someday.

Having worked on CORC during it's development phase, however, I feel
compelled to make a defense of its crosswalk. CORC has a large and diverse
user base in Dublin Core terms, and thus compromises were undoubtedly made.
Being able to convert MARC to DC and then back to MARC is indeed a
challenge. I would note, however, that our staff worked closely with the
Library of Congress MARC office on virtually the entire crosswalk. The
result should be a fuller, richer record than most crosswalks provide. The
CORC staff is aware that some tweaks are necessary, and are working on them.
As Dublin Core become more prevalent, CORC will be obliged to accommodate
changes if crosswalk standards arise. Another benefit of the client/server
model is that such changes and fixes to CORC will be immediately reflected
by this server.

I wouldn't claim that CORC's crosswalk is definitive, but I do think it
deserves consideration. Discussing the options available, as Diane as done,
should be very helpful for people faced with the task of converting their
MARC collections to DC.

Jeff

> -----Original Message-----
> From: Diane I. Hillmann [mailto:dih1@cornell.edu]
> Sent: Thursday, January 25, 2001 10:16 AM
> To: OAI alpha group
> Cc: oai-alpha@nsdl.CORNELL.EDU
> Subject: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
> 
> 
> Jeff:
> 
> There is, in fact, a mapping from MARC to DC at the address 
> below, though I 
> can well imagine that you could not find it in a web search.
> 
> http://128.253.121.110/NSDLmetaWG/MARCtoDC.htm
> 
> Note that this mapping is to qualified DC, though that shouldn't be a 
> terrible problem.
> 
> I'd be a bit leery of using a mapping based on CORC, as it makes some 
> unwise compromises (IMHO) chasing the unholy grail of 
> round-trip mapping.
> 
> Diane
> 
> 
> At 08:09 PM 1/24/2001 -0500, you wrote:
> 
> >--- begin forwarded text
> >
> >
> >Status: U
> >From: "Young,Jeff" <jyoung@oclc.org>
> >To: "OAI alpha group" <oai-alpha@nsdl.CORNELL.EDU>
> >Subject: [oai-alpha] MARC to DC Translator (ALPHA)
> >Date: Wed, 24 Jan 2001 17:49:02 -0500
> >List-Unsubscribe: <mailto:leave-oai-alpha-156R@www.nsdl.cornell.edu>
> >Reply-To: "OAI alpha group" <oai-alpha@nsdl.CORNELL.EDU>
> >
> >While working on an OAI repository, I had the need to convert MARC
> >communication format records to unqualified Dublin Core. I 
> searched the web
> >for such a tool, without success, and decided to write one 
> based on OCLC's
> >CORC system. I suspect such a service would be useful for 
> others as well, so
> >I'd like to announce the availability of the server for 
> evaluation purposes.
> >Its status should be considered alpha, and I can't make any long-term
> >promises about its continued availability yet.
> >
> >I've set up a form from which records can be submitted to 
> the server at
> >http://purl.org/alcme/marc2dc/index.html. If you look 
> closely, you'll see
> >some caveats listed on the form, as well as a reference to a 
> file containing
> >a few test records I've put out on the web for you to play with.
> >
> >Until it's been scrutinized, I wouldn't recommend that you 
> trust the results
> >as definitive. I would also request that you don't 
> overburden the server by
> >converting your entire OPAC just yet. Just give it a poke 
> and let me know
> >what you think. I'd be particularly interested in 
> information and perhaps
> >even the comparison of results  with any other MARC to DC 
> converters that
> >people may know about.
> >
> >Thanks,
> >Jeff
> >
> >---
> >Jeffrey A. Young
> >Senior Consulting Systems Analyst
> >Office of Research, Mail Code 710
> >OCLC Online Computer Library Center, Inc.
> >6565 Frantz Road
> >Dublin, OH   43017-3395
> >www.oclc.org
> >
> >Voice:  614-764-4342
> >Fax:            614-764-2344
> >Email:  jyoung@oclc.org
> >
> >
> >
> >
> >---
> >You are currently subscribed to oai-alpha as: dih1@cornell.edu
> >To unsubscribe send a blank email to 
> leave-oai-alpha-156R@www.nsdl.cornell.edu
> >
> >--- end forwarded text
> >
> 
> *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> Diane I. Hillmann
> Metadata Specialist
> National Science Digital Library Project at Cornell
> Department of Computer Science          Voice: 607/255-5691
> 419 Rhodes Hall                                 Fax: 607/255-4428
> Ithaca, NY 14853                                Email: 
> dih1@cornell.edu
> *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> 
> 
> 
> ---
> You are currently subscribed to oai-alpha as: jyoung@oclc.org
> To unsubscribe send a blank email to 
> leave-oai-alpha-156R@www.nsdl.cornell.edu
> 

From jyoung@oclc.org  Thu Jan 25 21:44:10 2001
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 25 Jan 2001 16:44:10 -0500
Subject: [OAI-implementers] RE: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
Message-ID: <E5431CF93E29F9478878F623E5B9CE98341EB1@OA3-SERVER.oa.oclc.org>

It's difficult for me to judge how much of this is of interest to the
OAI-implementers group. At the very least, perhaps Diane and I have hinted
that the issues are more subtle and difficult than one would hope.

I'd like to reiterate that the client/server model isn't the most efficient
way to do conversions. If people understand this and still desire a choice
of crosswalks, though, I'd be willing to consider it.

Finally, I hope that the concern about "round trips" between MARC and DC is
more of an issue for CORC than it is for my server. CORC uses "qualified"
Dublin Core whereas OAI specifies (and my server produces) "unqualified" DC.
Basically, I've taken CORC's qualified DC and "dumbed it down" to
unqualified. From there, there's no going back to MARC. One could argue the
result is still tainted by the issues Diane raises, but, OTOH, perhaps the
problem is mitigated by the limitations inherent in unqualified Dublin Core.

Jeff

> -----Original Message-----
> From: Diane I. Hillmann [mailto:dih1@cornell.edu]
> Sent: Thursday, January 25, 2001 3:59 PM
> To: Young,Jeff
> Cc: childree@oclc.org; oai-implementers@oaisrv.nsdl.cornell.edu
> Subject: RE: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
> 
> 
> Jeff:
> 
> Multiple crosswalks might be useful, particularly in that it 
> might give you 
> the option of qualified or unqualified DC (not to mention all 
> the other 
> crosswalks out there).
> 
> Eric C. will tell you that I've been arguing with him and 
> everybody at OCLC 
> about this issue for years. My argument is less with CORC's specific 
> compromises (though I've argued with those, too) than with 
> the ostensible 
> reasons for them. Some of them were early attempts to "anticipate" 
> qualifiers that *might* have been blessed (but weren't), but 
> many more were 
> made to facilitate round trips between MARC and DC. It seems 
> to me if you 
> want to go back and forth between a rich and a simple record 
> for the same 
> resource, linking (or some other strategy) makes far better 
> sense than 
> crosswalking again, and gives far more reliable results. This 
> is one of 
> those problems that is endemic with early implementations, but is not 
> necessarily more valid just because it's being done in a 
> large database.
> 
> Eric will also tell you that I have also been vocal on MARBI against 
> changes in MARC to facilitate round-tripping.  So I am, at 
> the very least, 
> consistent.
> 
> Diane
> 
> At 01:46 PM 1/25/2001 -0500, you wrote:
> >(I'm moving this from oai-alpha to oai-implementers where it 
> should get
> >broader attention.)
> >
> >Thanks for your feedback, Diane. One appealing option for me 
> would be to
> >support multiple crosswalks with my server. I would note, 
> however, that a
> >client/server model isn't the most efficient way of doing 
> these things. The
> >main reason I used this approach is because the MARC to DC 
> conversion that
> >CORC uses isn't easily de-coupled from the overall system 
> (regrettably).
> >Client/servers are also nice because of their flexibility. 
> Given a choice,
> >though, I would have preferred to write an XSLT stylesheet, 
> which could be
> >easily distributed. Maybe someday.
> >
> >Having worked on CORC during it's development phase, however, I feel
> >compelled to make a defense of its crosswalk. CORC has a 
> large and diverse
> >user base in Dublin Core terms, and thus compromises were 
> undoubtedly made.
> >Being able to convert MARC to DC and then back to MARC is indeed a
> >challenge. I would note, however, that our staff worked 
> closely with the
> >Library of Congress MARC office on virtually the entire 
> crosswalk. The
> >result should be a fuller, richer record than most 
> crosswalks provide. The
> >CORC staff is aware that some tweaks are necessary, and are 
> working on them.
> >As Dublin Core become more prevalent, CORC will be obliged 
> to accommodate
> >changes if crosswalk standards arise. Another benefit of the 
> client/server
> >model is that such changes and fixes to CORC will be 
> immediately reflected
> >by this server.
> >
> >I wouldn't claim that CORC's crosswalk is definitive, but I 
> do think it
> >deserves consideration. Discussing the options available, as 
> Diane as done,
> >should be very helpful for people faced with the task of 
> converting their
> >MARC collections to DC.
> >
> >Jeff
> >
> > > -----Original Message-----
> > > From: Diane I. Hillmann [mailto:dih1@cornell.edu]
> > > Sent: Thursday, January 25, 2001 10:16 AM
> > > To: OAI alpha group
> > > Cc: oai-alpha@nsdl.CORNELL.EDU
> > > Subject: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
> > >
> > >
> > > Jeff:
> > >
> > > There is, in fact, a mapping from MARC to DC at the address
> > > below, though I
> > > can well imagine that you could not find it in a web search.
> > >
> > > http://128.253.121.110/NSDLmetaWG/MARCtoDC.htm
> > >
> > > Note that this mapping is to qualified DC, though that 
> shouldn't be a
> > > terrible problem.
> > >
> > > I'd be a bit leery of using a mapping based on CORC, as 
> it makes some
> > > unwise compromises (IMHO) chasing the unholy grail of
> > > round-trip mapping.
> > >
> > > Diane
> > >
> > >
> > > At 08:09 PM 1/24/2001 -0500, you wrote:
> > >
> > > >--- begin forwarded text
> > > >
> > > >
> > > >Status: U
> > > >From: "Young,Jeff" <jyoung@oclc.org>
> > > >To: "OAI alpha group" <oai-alpha@nsdl.CORNELL.EDU>
> > > >Subject: [oai-alpha] MARC to DC Translator (ALPHA)
> > > >Date: Wed, 24 Jan 2001 17:49:02 -0500
> > > >List-Unsubscribe: 
> <mailto:leave-oai-alpha-156R@www.nsdl.cornell.edu>
> > > >Reply-To: "OAI alpha group" <oai-alpha@nsdl.CORNELL.EDU>
> > > >
> > > >While working on an OAI repository, I had the need to 
> convert MARC
> > > >communication format records to unqualified Dublin Core. I
> > > searched the web
> > > >for such a tool, without success, and decided to write one
> > > based on OCLC's
> > > >CORC system. I suspect such a service would be useful for
> > > others as well, so
> > > >I'd like to announce the availability of the server for
> > > evaluation purposes.
> > > >Its status should be considered alpha, and I can't make 
> any long-term
> > > >promises about its continued availability yet.
> > > >
> > > >I've set up a form from which records can be submitted to
> > > the server at
> > > >http://purl.org/alcme/marc2dc/index.html. If you look
> > > closely, you'll see
> > > >some caveats listed on the form, as well as a reference to a
> > > file containing
> > > >a few test records I've put out on the web for you to play with.
> > > >
> > > >Until it's been scrutinized, I wouldn't recommend that you
> > > trust the results
> > > >as definitive. I would also request that you don't
> > > overburden the server by
> > > >converting your entire OPAC just yet. Just give it a poke
> > > and let me know
> > > >what you think. I'd be particularly interested in
> > > information and perhaps
> > > >even the comparison of results  with any other MARC to DC
> > > converters that
> > > >people may know about.
> > > >
> > > >Thanks,
> > > >Jeff
> > > >
> > > >---
> > > >Jeffrey A. Young
> > > >Senior Consulting Systems Analyst
> > > >Office of Research, Mail Code 710
> > > >OCLC Online Computer Library Center, Inc.
> > > >6565 Frantz Road
> > > >Dublin, OH   43017-3395
> > > >www.oclc.org
> > > >
> > > >Voice:  614-764-4342
> > > >Fax:            614-764-2344
> > > >Email:  jyoung@oclc.org
> > > >
> > > >
> > > >
> > > >
> > > >---
> > > >You are currently subscribed to oai-alpha as: dih1@cornell.edu
> > > >To unsubscribe send a blank email to
> > > leave-oai-alpha-156R@www.nsdl.cornell.edu
> > > >
> > > >--- end forwarded text
> > > >
> > >
> > > 
> *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> > > Diane I. Hillmann
> > > Metadata Specialist
> > > National Science Digital Library Project at Cornell
> > > Department of Computer Science          Voice: 607/255-5691
> > > 419 Rhodes Hall                                 Fax: 607/255-4428
> > > Ithaca, NY 14853                                Email:
> > > dih1@cornell.edu
> > > 
> *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> > >
> > >
> > >
> > > ---
> > > You are currently subscribed to oai-alpha as: jyoung@oclc.org
> > > To unsubscribe send a blank email to
> > > leave-oai-alpha-156R@www.nsdl.cornell.edu
> > >
> 
> *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> Diane I. Hillmann
> Metadata Specialist
> National Science Digital Library Project at Cornell
> Department of Computer Science          Voice: 607/255-5691
> 419 Rhodes Hall                                 Fax: 607/255-4428
> Ithaca, NY 14853                                Email: 
> dih1@cornell.edu
> *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> 
> 

From dih1@cornell.edu  Thu Jan 25 20:59:14 2001
From: dih1@cornell.edu (Diane I. Hillmann)
Date: Thu, 25 Jan 2001 15:59:14 -0500
Subject: [OAI-implementers] RE: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE98341EAE@OA3-SERVER.oa.oclc.
 org>
Message-ID: <4.3.2.7.2.20010125153851.022555e0@postoffice2.mail.cornell.edu>

Jeff:

Multiple crosswalks might be useful, particularly in that it might give you 
the option of qualified or unqualified DC (not to mention all the other 
crosswalks out there).

Eric C. will tell you that I've been arguing with him and everybody at OCLC 
about this issue for years. My argument is less with CORC's specific 
compromises (though I've argued with those, too) than with the ostensible 
reasons for them. Some of them were early attempts to "anticipate" 
qualifiers that *might* have been blessed (but weren't), but many more were 
made to facilitate round trips between MARC and DC. It seems to me if you 
want to go back and forth between a rich and a simple record for the same 
resource, linking (or some other strategy) makes far better sense than 
crosswalking again, and gives far more reliable results. This is one of 
those problems that is endemic with early implementations, but is not 
necessarily more valid just because it's being done in a large database.

Eric will also tell you that I have also been vocal on MARBI against 
changes in MARC to facilitate round-tripping.  So I am, at the very least, 
consistent.

Diane

At 01:46 PM 1/25/2001 -0500, you wrote:
>(I'm moving this from oai-alpha to oai-implementers where it should get
>broader attention.)
>
>Thanks for your feedback, Diane. One appealing option for me would be to
>support multiple crosswalks with my server. I would note, however, that a
>client/server model isn't the most efficient way of doing these things. The
>main reason I used this approach is because the MARC to DC conversion that
>CORC uses isn't easily de-coupled from the overall system (regrettably).
>Client/servers are also nice because of their flexibility. Given a choice,
>though, I would have preferred to write an XSLT stylesheet, which could be
>easily distributed. Maybe someday.
>
>Having worked on CORC during it's development phase, however, I feel
>compelled to make a defense of its crosswalk. CORC has a large and diverse
>user base in Dublin Core terms, and thus compromises were undoubtedly made.
>Being able to convert MARC to DC and then back to MARC is indeed a
>challenge. I would note, however, that our staff worked closely with the
>Library of Congress MARC office on virtually the entire crosswalk. The
>result should be a fuller, richer record than most crosswalks provide. The
>CORC staff is aware that some tweaks are necessary, and are working on them.
>As Dublin Core become more prevalent, CORC will be obliged to accommodate
>changes if crosswalk standards arise. Another benefit of the client/server
>model is that such changes and fixes to CORC will be immediately reflected
>by this server.
>
>I wouldn't claim that CORC's crosswalk is definitive, but I do think it
>deserves consideration. Discussing the options available, as Diane as done,
>should be very helpful for people faced with the task of converting their
>MARC collections to DC.
>
>Jeff
>
> > -----Original Message-----
> > From: Diane I. Hillmann [mailto:dih1@cornell.edu]
> > Sent: Thursday, January 25, 2001 10:16 AM
> > To: OAI alpha group
> > Cc: oai-alpha@nsdl.CORNELL.EDU
> > Subject: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
> >
> >
> > Jeff:
> >
> > There is, in fact, a mapping from MARC to DC at the address
> > below, though I
> > can well imagine that you could not find it in a web search.
> >
> > http://128.253.121.110/NSDLmetaWG/MARCtoDC.htm
> >
> > Note that this mapping is to qualified DC, though that shouldn't be a
> > terrible problem.
> >
> > I'd be a bit leery of using a mapping based on CORC, as it makes some
> > unwise compromises (IMHO) chasing the unholy grail of
> > round-trip mapping.
> >
> > Diane
> >
> >
> > At 08:09 PM 1/24/2001 -0500, you wrote:
> >
> > >--- begin forwarded text
> > >
> > >
> > >Status: U
> > >From: "Young,Jeff" <jyoung@oclc.org>
> > >To: "OAI alpha group" <oai-alpha@nsdl.CORNELL.EDU>
> > >Subject: [oai-alpha] MARC to DC Translator (ALPHA)
> > >Date: Wed, 24 Jan 2001 17:49:02 -0500
> > >List-Unsubscribe: <mailto:leave-oai-alpha-156R@www.nsdl.cornell.edu>
> > >Reply-To: "OAI alpha group" <oai-alpha@nsdl.CORNELL.EDU>
> > >
> > >While working on an OAI repository, I had the need to convert MARC
> > >communication format records to unqualified Dublin Core. I
> > searched the web
> > >for such a tool, without success, and decided to write one
> > based on OCLC's
> > >CORC system. I suspect such a service would be useful for
> > others as well, so
> > >I'd like to announce the availability of the server for
> > evaluation purposes.
> > >Its status should be considered alpha, and I can't make any long-term
> > >promises about its continued availability yet.
> > >
> > >I've set up a form from which records can be submitted to
> > the server at
> > >http://purl.org/alcme/marc2dc/index.html. If you look
> > closely, you'll see
> > >some caveats listed on the form, as well as a reference to a
> > file containing
> > >a few test records I've put out on the web for you to play with.
> > >
> > >Until it's been scrutinized, I wouldn't recommend that you
> > trust the results
> > >as definitive. I would also request that you don't
> > overburden the server by
> > >converting your entire OPAC just yet. Just give it a poke
> > and let me know
> > >what you think. I'd be particularly interested in
> > information and perhaps
> > >even the comparison of results  with any other MARC to DC
> > converters that
> > >people may know about.
> > >
> > >Thanks,
> > >Jeff
> > >
> > >---
> > >Jeffrey A. Young
> > >Senior Consulting Systems Analyst
> > >Office of Research, Mail Code 710
> > >OCLC Online Computer Library Center, Inc.
> > >6565 Frantz Road
> > >Dublin, OH   43017-3395
> > >www.oclc.org
> > >
> > >Voice:  614-764-4342
> > >Fax:            614-764-2344
> > >Email:  jyoung@oclc.org
> > >
> > >
> > >
> > >
> > >---
> > >You are currently subscribed to oai-alpha as: dih1@cornell.edu
> > >To unsubscribe send a blank email to
> > leave-oai-alpha-156R@www.nsdl.cornell.edu
> > >
> > >--- end forwarded text
> > >
> >
> > *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> > Diane I. Hillmann
> > Metadata Specialist
> > National Science Digital Library Project at Cornell
> > Department of Computer Science          Voice: 607/255-5691
> > 419 Rhodes Hall                                 Fax: 607/255-4428
> > Ithaca, NY 14853                                Email:
> > dih1@cornell.edu
> > *~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
> >
> >
> >
> > ---
> > You are currently subscribed to oai-alpha as: jyoung@oclc.org
> > To unsubscribe send a blank email to
> > leave-oai-alpha-156R@www.nsdl.cornell.edu
> >

*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
Diane I. Hillmann
Metadata Specialist
National Science Digital Library Project at Cornell
Department of Computer Science          Voice: 607/255-5691
419 Rhodes Hall                                 Fax: 607/255-4428
Ithaca, NY 14853                                Email: dih1@cornell.edu
*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*



From jyoung@oclc.org  Thu Jan 25 13:56:45 2001
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 25 Jan 2001 08:56:45 -0500
Subject: [OAI-implementers] FW: MARC to DC Translator (ALPHA)
Message-ID: <E5431CF93E29F9478878F623E5B9CE98341EA4@OA3-SERVER.oa.oclc.org>

Sorry for the cross-posting.

While working on an OAI repository, I had the need to convert MARC
communication format records to unqualified Dublin Core. I searched the web
for such a tool, without success, and decided to write one based on OCLC's
CORC system. I suspect such a service would be useful for others as well, so
I'd like to announce the availability of the server for evaluation purposes.
Its status should be considered alpha, and I can't make any long-term
promises about its continued availability yet.

I've set up a form from which records can be submitted to the server at
http://purl.org/alcme/marc2dc/index.html. If you look closely, you'll see
some caveats listed on the form, as well as a reference to a file containing
a few test records I've put out on the web for you to play with.
 
Until it's been scrutinized, I wouldn't recommend that you trust the results
as definitive. I would also request that you don't overburden the server by
converting your entire OPAC just yet. Just give it a poke and let me know
what you think. I'd be particularly interested in information and perhaps
even the comparison of results  with any other MARC to DC converters that
people may know about.

Thanks,
Jeff

---
Jeffrey A. Young
Senior Consulting Systems Analyst
Office of Research, Mail Code 710
OCLC Online Computer Library Center, Inc.
6565 Frantz Road
Dublin, OH   43017-3395
www.oclc.org

Voice:	614-764-4342
Fax:		614-764-2344
Email:	jyoung@oclc.org




From jyoung@oclc.org  Thu Jan 25 22:54:37 2001
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 25 Jan 2001 17:54:37 -0500
Subject: [OAI-implementers] RE: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
Message-ID: <E5431CF93E29F9478878F623E5B9CE98341EB3@OA3-SERVER.oa.oclc.org>

(I'm redirecting this from the oai-alpha list to the oai-implementers list
where most of the related discussion has occurred.)

I'm pleased to hear that LC is leading the effort for a one-way crosswalk.
My assumption is that such a specification would be definitive making the
entire discussion of my CORC-based server obsolete. Once the spec is
published, we will want to identify the mechanisms that people can use to
perform the conversions. For example, I can imagine a MARC-XML to DC
transform being performed using XSLT stylesheets. Having such a stylesheet
available would make life very easy for many of us.

Assuming that discussion of my server isn't entirely moot now, you're quite
welcome to run your records through it. I'm confident that you'll find
problems, but that's why I called it an alpha. I promise to resolve any
problems you report as quickly as I can.

CORC's crosswalk is table driven, so, in theory, I should be able to package
it up in readable form. I'll distribute something to the list as soon as I
can.

Jeff

> -----Original Message-----
> From: Caroline Arms [mailto:caar@loc.gov]
> Sent: Thursday, January 25, 2001 5:19 PM
> To: OAI alpha group
> Subject: [oai-alpha] Re: Fwd: MARC to DC Translator (ALPHA)
> 
> 
> 
> Jeff,
> 
> I'd like to echo Diane Hillman's implication that what matters when
> converting from MARC to Dublin Core is the mapping you 
> choose.  Is yours
> documented somewhere?  I have had some experience with 
> receiving exported
> DC records from CORC and know from the receiving end that it 
> has been a
> moving target over the last six months.
> 
> The mapping we have used for LC's initial Open Archives 
> implementation was
> worked out in conjunction with Rebecca Guenther of the MARC Standards
> Office as a mapping suitable for one-way mapping (as opposed 
> to the CORC
> round-trip mapping).  It also takes into account the choices of how to
> index particular MARC fields and subfields we have made over 
> the years for
> American Memory.  Rebecca has not yet documented her 
> recommended one-way
> mapping publicly (on the MARC Standards web page) but intends to.
> 
> Since I'm not the programmer here (and he's away for a few 
> days), I can't
> run your records through our conversion, but if you are 
> interested, I can
> see how much effort that would be.  Will your system be happy 
> if I run a
> set of 200 MARC records through it?  They will give special character
> conversion a workout.  I'd be happy to send you the results 
> if you wanted
> to do a comparison.
> 
> What we have done for our implementation is similar to Diane's
> mapping, although not identical.  In addition, we decided (at 
> least for
> the time being) to drop a few more fields when converting to 
> unqualified
> DC because we thought systems that only used simple DC would 
> be unlikely
> to cope reasonably with some details -- alternate titles, for 
> example. I
> (personally) have been hoping that practical experience with 
> real data and
> real service providers would guide future practice in the 
> cases that are
> not obvious.
> 
> You can see what our conversion does empirically through Hussein's
> Repository Explorer at the American Memory (lcoa1) 
> "repository."  The set
> of records I would run through your converter would be the Dance
> Instruction manuals.
> 
>      Caroline Arms                                caar@loc.gov
>      National Digital Library Program
>      Library of Congress
> 
>      
> 
> 
> ---
> You are currently subscribed to oai-alpha as: jyoung@oclc.org
> To unsubscribe send a blank email to 
> leave-oai-alpha-156R@www.nsdl.cornell.edu
> 

From support@eprints.org  Sat Jan 27 11:45:49 2001
From: support@eprints.org (ePrints Support)
Date: Sat, 27 Jan 2001 11:45:49 +0000
Subject: [OAI-implementers] Re: [oai-alpha] Re: Help!
In-Reply-To: <LYRIS-152-960-2001.01.26-20.25.48--support#eprints.org@www.nsdl.cornell.edu>; from simeon@mmm.lanl.gov on Fri, Jan 26, 2001 at 06:26:33PM -0700
References: <LYRIS-125-951-2001.01.24-10.59.43--simeon#lanl.gov@www.nsdl.cornell.edu> <LYRIS-152-960-2001.01.26-20.25.48--support#eprints.org@www.nsdl.cornell.edu>
Message-ID: <20010127114549.C29332@ecs.soton.ac.uk>

(from oai-alpha)

On Fri, Jan 26, 2001 at 06:26:33PM -0700, Simeon Warner wrote:
> I agree that the following can be illegal in fairly obvious
> ways:
>   from & until     (illegal dates)
>   identifier       (illegal uri)
>   resumptionToken  (spec says illegal use and expired will give 400)
> 
> However, according to the schemas of verbs that return values that
> will be used for set and metadataPrefix, they also be illegal: 
>   set              (doesn't match "([a-zA-Z0-9_])+(:[A-Za-z0-9]+)*")
>   metadataPrefix   (doesn't match "[a-zA-Z0-9_]+")

from & until: Illegal dates (I agree)

identifier: what's an illegal uri? 
   a) one which dosn't match oai:[a-z]+:.*    (regexp may be slightly off)
or 
   b) one which dosn't match oai:nameofarchive:.*
I suggest (a) - it's possible that an archive could mirror OAI records
from another archive AS WELL as it's own. (Isn't it?)

resumptionToken: If an archive dosn't support this
   then I suppose it should always give a 400 error.
Isn't there an 'expired' return code in http? it's confusing giving
the same response for 'illegal' and 'expired'

set: not matching [a-zA-Z0-9_])+(:[A-Za-z0-9]+)* is a 400 error but
   how about a set which passes the spec but isn't in the archive?
I suggest it just returns a header with no results in that case.

metadataPrefix: similar. Not matching [a-zA-Z0-9_]+ is illegal (400)
   but what happens if it passes the regexp but isn't in the list
   supported the archive?
Again, I suggest it just returns a header with no results in this case.

Other queries:
   oai_dc: When should we put a 'oai_' before the metadataPrefix,
   exactly what does it mean (why isn't it just dc?)

   inside <metadata></metadata> is ANYTHING defined by OAI or
   is everything, including the initial tags <dc></dc> and namespace
   etc. defined by the metadata standard?

-- 

Christopher Gutteridge 
ePrints Technical Support
support@eprints.org


From simeon@lanl.gov  Sat Jan 27 15:37:12 2001
From: simeon@lanl.gov (Simeon Warner)
Date: Sat, 27 Jan 2001 08:37:12 -0700 (MST)
Subject: [OAI-implementers] Re: [oai-alpha] Re: Help!
In-Reply-To: <20010127114549.C29332@ecs.soton.ac.uk>
Message-ID: <Pine.LNX.4.10.10101270813170.5382-100000@mmm.lanl.gov>


On Sat, 27 Jan 2001, ePrints Support wrote:

> (from oai-alpha)
> 
> On Fri, Jan 26, 2001 at 06:26:33PM -0700, Simeon Warner wrote:
> > I agree that the following can be illegal in fairly obvious
> > ways:
> >   from & until     (illegal dates)
> >   identifier       (illegal uri)
> >   resumptionToken  (spec says illegal use and expired will give 400)
> > 
> > However, according to the schemas of verbs that return values that
> > will be used for set and metadataPrefix, they also be illegal: 
> >   set              (doesn't match "([a-zA-Z0-9_])+(:[A-Za-z0-9]+)*")
> >   metadataPrefix   (doesn't match "[a-zA-Z0-9_]+")
> 
> from & until: Illegal dates (I agree)
> 
> identifier: what's an illegal uri? 
>    a) one which dosn't match oai:[a-z]+:.*    (regexp may be slightly off)
> or 
>    b) one which dosn't match oai:nameofarchive:.*
> I suggest (a) - it's possible that an archive could mirror OAI records
> from another archive AS WELL as it's own. (Isn't it?)

My feeling was that only a) qualifies for a 400 response.
 
> resumptionToken: If an archive dosn't support this
>    then I suppose it should always give a 400 error.
> Isn't there an 'expired' return code in http? it's confusing giving
> the same response for 'illegal' and 'expired'

The spec says there should be 400 in both cases. Any sensible 
harvester will know that it is giving back a once-valid 
resumptionToken and hence 400 => expired.
 
> set: not matching [a-zA-Z0-9_])+(:[A-Za-z0-9]+)* is a 400 error but
>    how about a set which passes the spec but isn't in the archive?
> I suggest it just returns a header with no results in that case.

The second case should certainly return header with no results, only
illegal value (not matching regexp) gives 400.
  
> metadataPrefix: similar. Not matching [a-zA-Z0-9_]+ is illegal (400)
>    but what happens if it passes the regexp but isn't in the list
>    supported the archive?
> Again, I suggest it just returns a header with no results in this case.

Again, unrecognized/unsupported should return header with no results,
only illegal value gives 400.
 
> Other queries:
>    oai_dc: When should we put a 'oai_' before the metadataPrefix,
>    exactly what does it mean (why isn't it just dc?)

My understanding is that the metadataPrefixes are simply strings
returned by ListMetadataFormats which may be reused in requests
that specify a metadataPrefix to request metedata according the
corresponding schema in the ListMetadataFormats response.
Further, 'oai_dc' is the name oai has chosen to refer to dc
by (and everyone must support it and not call it 'wibble'
instead). Given that the metadataPrefixes are just shorthand
names to refer to the schema, I don't know why it was necessary
to add the 'oai_'.    
 
>    inside <metadata></metadata> is ANYTHING defined by OAI or
>    is everything, including the initial tags <dc></dc> and namespace
>    etc. defined by the metadata standard?

As far as I understand it (which is not really very well), everything
from the initial <dc ...> tag to the </dc> is specified by the
dc schema (http://www.openarchives.org/OAI/dc.xsd), or other
schema for other metadata formats. In the dc schema it says:

 <element name="dc" type="dc:dublincoreType"/>


Cheers,
Simeon.


> 
> -- 
> 
> Christopher Gutteridge 
> ePrints Technical Support
> support@eprints.org
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


From herbertv@CS.Cornell.EDU  Mon Jan 29 15:21:36 2001
From: herbertv@CS.Cornell.EDU (herbert van de sompel)
Date: Mon, 29 Jan 2001 10:21:36 -0500
Subject: [OAI-implementers] Re: [oai-alpha] Re: Help!
References: <Pine.LNX.4.10.10101270813170.5382-100000@mmm.lanl.gov>
Message-ID: <3A758A80.51A31DD2@cs.cornell.edu>

hi all,

Quite an interesting discussion regarding the exception handling (400,
empty records et all).  

When writing the specs as a result of the discussion over the weekend 2
weeks ago, my goal was to distinguish between the handling of:
- illegal verbs, 
- illegal arguments,
- values (both illegal and not leading to any result).

I thought that was a pretty clear line to draw:

- illegal protocol syntax: usage of illegal verbs and illegal arguments
results in 400
- something wrong with argument values: usage of illegal values and/or
values that lead to no result yield "empty" responses

The current dicussion seems to suggest that illegal values should also
result in a 400.  But from the discussion, it shows that defining what
an illegal value is isn't all that simple: illegal as to the protcol
(e.g. illegal format for datestamp) or illegal in a certain repository
(e.g. non-supported metadataPrefix), ...  

While I do agree that the provision of a datestamp with an illegal
syntax can be considered to be illegal protocol syntax, I remain tempted
to stick with the original concept, whereby everything that is releated
to values of arguments is NOT handled with a 400, but with an "empty"
response.  Please note that the out-of-context usage of a
resumptionToken falls under the category of "illegal protocol syntax"
because the section on resumptionTokens explicitely says "all other
usage of resumptionTokens is illegal and hence returns 400". 

 I think that the issue re oai-format identifiers that was brought up
supports the above approach: some repos will use oai-formated
identifiers, others will not.  similarly, other xsd's will be used as
"description" containers, some of which may limit the validity of other
argument values (valid set values, for instance).  if we take the return
of 400 down to the level of argument values, and in addition take into
account these repo (or community) specific issues in the decission
whether an argument value is "legal" or "illegal" (hence in deciding
whether to return 400 or not), all repos will do exception handling in
different manners.  I am not too enthusiastic about that idea.

I am very interested in comments.

herbert

Simeon Warner wrote:
> 
> On Sat, 27 Jan 2001, ePrints Support wrote:
> 
> > (from oai-alpha)
> >
> > On Fri, Jan 26, 2001 at 06:26:33PM -0700, Simeon Warner wrote:
> > > I agree that the following can be illegal in fairly obvious
> > > ways:
> > >   from & until     (illegal dates)
> > >   identifier       (illegal uri)
> > >   resumptionToken  (spec says illegal use and expired will give 400)
> > >
> > > However, according to the schemas of verbs that return values that
> > > will be used for set and metadataPrefix, they also be illegal:
> > >   set              (doesn't match "([a-zA-Z0-9_])+(:[A-Za-z0-9]+)*")
> > >   metadataPrefix   (doesn't match "[a-zA-Z0-9_]+")
> >
> > from & until: Illegal dates (I agree)
> >
> > identifier: what's an illegal uri?
> >    a) one which dosn't match oai:[a-z]+:.*    (regexp may be slightly off)
> > or
> >    b) one which dosn't match oai:nameofarchive:.*
> > I suggest (a) - it's possible that an archive could mirror OAI records
> > from another archive AS WELL as it's own. (Isn't it?)
> 
> My feeling was that only a) qualifies for a 400 response.
> 
> > resumptionToken: If an archive dosn't support this
> >    then I suppose it should always give a 400 error.
> > Isn't there an 'expired' return code in http? it's confusing giving
> > the same response for 'illegal' and 'expired'
> 
> The spec says there should be 400 in both cases. Any sensible
> harvester will know that it is giving back a once-valid
> resumptionToken and hence 400 => expired.
> 
> > set: not matching [a-zA-Z0-9_])+(:[A-Za-z0-9]+)* is a 400 error but
> >    how about a set which passes the spec but isn't in the archive?
> > I suggest it just returns a header with no results in that case.
> 
> The second case should certainly return header with no results, only
> illegal value (not matching regexp) gives 400.
> 
> > metadataPrefix: similar. Not matching [a-zA-Z0-9_]+ is illegal (400)
> >    but what happens if it passes the regexp but isn't in the list
> >    supported the archive?
> > Again, I suggest it just returns a header with no results in this case.
> 
> Again, unrecognized/unsupported should return header with no results,
> only illegal value gives 400.
> 
> > Other queries:
> >    oai_dc: When should we put a 'oai_' before the metadataPrefix,
> >    exactly what does it mean (why isn't it just dc?)
> 
> My understanding is that the metadataPrefixes are simply strings
> returned by ListMetadataFormats which may be reused in requests
> that specify a metadataPrefix to request metedata according the
> corresponding schema in the ListMetadataFormats response.
> Further, 'oai_dc' is the name oai has chosen to refer to dc
> by (and everyone must support it and not call it 'wibble'
> instead). Given that the metadataPrefixes are just shorthand
> names to refer to the schema, I don't know why it was necessary
> to add the 'oai_'.
> 
> >    inside <metadata></metadata> is ANYTHING defined by OAI or
> >    is everything, including the initial tags <dc></dc> and namespace
> >    etc. defined by the metadata standard?
> 
> As far as I understand it (which is not really very well), everything
> from the initial <dc ...> tag to the </dc> is specified by the
> dc schema (http://www.openarchives.org/OAI/dc.xsd), or other
> schema for other metadata formats. In the dc schema it says:
> 
>  <element name="dc" type="dc:dublincoreType"/>
> 
> Cheers,
> Simeon.
> 
> >
> > --
> >
> > Christopher Gutteridge
> > ePrints Technical Support
> > support@eprints.org
> >
> > _______________________________________________
> > OAI-implementers mailing list
> > OAI-implementers@oaisrv.nsdl.cornell.edu
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> >
> 
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

-- 
Herbert Van de Sompel
Visiting Assistant Professor
Cornell University -- Computer Science
tel + 1 - 607 - 255 - 3085
fax + 1 - 607 - 255 - 4428
http://www.cs.cornell.edu/people/herbertv/
digital life in libraries used to be primitive

From simeon@lanl.gov  Mon Jan 29 18:10:33 2001
From: simeon@lanl.gov (Simeon Warner)
Date: Mon, 29 Jan 2001 11:10:33 -0700 (MST)
Subject: [OAI-implementers] Re: [oai-alpha] Re: Help!
In-Reply-To: <3A758A80.51A31DD2@cs.cornell.edu>
Message-ID: <Pine.LNX.4.10.10101291103160.21620-100000@mmm.lanl.gov>


On Mon, 29 Jan 2001, herbert van de sompel wrote:
> hi all,
> 
> Quite an interesting discussion regarding the exception handling (400,
> empty records et all).  
> 
> When writing the specs as a result of the discussion over the weekend 2
> weeks ago, my goal was to distinguish between the handling of:
> - illegal verbs, 
> - illegal arguments,
> - values (both illegal and not leading to any result).
> 
> I thought that was a pretty clear line to draw:
> 
> - illegal protocol syntax: usage of illegal verbs and illegal arguments
> results in 400
> - something wrong with argument values: usage of illegal values and/or
> values that lead to no result yield "empty" responses
> 
> The current dicussion seems to suggest that illegal values should also
> result in a 400.  But from the discussion, it shows that defining what
> an illegal value is isn't all that simple: illegal as to the protcol
> (e.g. illegal format for datestamp) or illegal in a certain repository
> (e.g. non-supported metadataPrefix), ...  

I disagree here, I think the discussion has only been about what is
illegal from the protocol point of view. I think we all agree that
illegal/unsupported/unknown from a repository point of view should
lead to empty responses.

It is not clear to me why it is beneficial to silently accept requests
that include syntactically incorrect arguments which clearly indicate
errors in a harvester program. 400 seems more sensible.

> While I do agree that the provision of a datestamp with an illegal
> syntax can be considered to be illegal protocol syntax, I remain tempted
> to stick with the original concept, whereby everything that is releated
> to values of arguments is NOT handled with a 400, but with an "empty"
> response. Please note that the out-of-context usage of a
> resumptionToken falls under the category of "illegal protocol syntax"
> because the section on resumptionTokens explicitely says "all other
> usage of resumptionTokens is illegal and hence returns 400". 
> 
>  I think that the issue re oai-format identifiers that was brought up
> supports the above approach: some repos will use oai-formated
> identifiers, others will not. 

From the protocol point of view, only invalid URIs are invalid
identifiers, any other restriction is repository specfic.
 
Cheers,
Simeon


>  similarly, other xsd's will be used as
> "description" containers, some of which may limit the validity of other
> argument values (valid set values, for instance).  if we take the return
> of 400 down to the level of argument values, and in addition take into
> account these repo (or community) specific issues in the decission
> whether an argument value is "legal" or "illegal" (hence in deciding
> whether to return 400 or not), all repos will do exception handling in
> different manners.  I am not too enthusiastic about that idea.
> 
> I am very interested in comments.
> 
> herbert
> 
> Simeon Warner wrote:
> > 
> > On Sat, 27 Jan 2001, ePrints Support wrote:
> > 
> > > (from oai-alpha)
> > >
> > > On Fri, Jan 26, 2001 at 06:26:33PM -0700, Simeon Warner wrote:
> > > > I agree that the following can be illegal in fairly obvious
> > > > ways:
> > > >   from & until     (illegal dates)
> > > >   identifier       (illegal uri)
> > > >   resumptionToken  (spec says illegal use and expired will give 400)
> > > >
> > > > However, according to the schemas of verbs that return values that
> > > > will be used for set and metadataPrefix, they also be illegal:
> > > >   set              (doesn't match "([a-zA-Z0-9_])+(:[A-Za-z0-9]+)*")
> > > >   metadataPrefix   (doesn't match "[a-zA-Z0-9_]+")
> > >
> > > from & until: Illegal dates (I agree)
> > >
> > > identifier: what's an illegal uri?
> > >    a) one which dosn't match oai:[a-z]+:.*    (regexp may be slightly off)
> > > or
> > >    b) one which dosn't match oai:nameofarchive:.*
> > > I suggest (a) - it's possible that an archive could mirror OAI records
> > > from another archive AS WELL as it's own. (Isn't it?)
> > 
> > My feeling was that only a) qualifies for a 400 response.
> > 
> > > resumptionToken: If an archive dosn't support this
> > >    then I suppose it should always give a 400 error.
> > > Isn't there an 'expired' return code in http? it's confusing giving
> > > the same response for 'illegal' and 'expired'
> > 
> > The spec says there should be 400 in both cases. Any sensible
> > harvester will know that it is giving back a once-valid
> > resumptionToken and hence 400 => expired.
> > 
> > > set: not matching [a-zA-Z0-9_])+(:[A-Za-z0-9]+)* is a 400 error but
> > >    how about a set which passes the spec but isn't in the archive?
> > > I suggest it just returns a header with no results in that case.
> > 
> > The second case should certainly return header with no results, only
> > illegal value (not matching regexp) gives 400.
> > 
> > > metadataPrefix: similar. Not matching [a-zA-Z0-9_]+ is illegal (400)
> > >    but what happens if it passes the regexp but isn't in the list
> > >    supported the archive?
> > > Again, I suggest it just returns a header with no results in this case.
> > 
> > Again, unrecognized/unsupported should return header with no results,
> > only illegal value gives 400.
> > 
> > > Other queries:
> > >    oai_dc: When should we put a 'oai_' before the metadataPrefix,
> > >    exactly what does it mean (why isn't it just dc?)
> > 
> > My understanding is that the metadataPrefixes are simply strings
> > returned by ListMetadataFormats which may be reused in requests
> > that specify a metadataPrefix to request metedata according the
> > corresponding schema in the ListMetadataFormats response.
> > Further, 'oai_dc' is the name oai has chosen to refer to dc
> > by (and everyone must support it and not call it 'wibble'
> > instead). Given that the metadataPrefixes are just shorthand
> > names to refer to the schema, I don't know why it was necessary
> > to add the 'oai_'.
> > 
> > >    inside <metadata></metadata> is ANYTHING defined by OAI or
> > >    is everything, including the initial tags <dc></dc> and namespace
> > >    etc. defined by the metadata standard?
> > 
> > As far as I understand it (which is not really very well), everything
> > from the initial <dc ...> tag to the </dc> is specified by the
> > dc schema (http://www.openarchives.org/OAI/dc.xsd), or other
> > schema for other metadata formats. In the dc schema it says:
> > 
> >  <element name="dc" type="dc:dublincoreType"/>
> > 
> > Cheers,
> > Simeon.


From hussein@vt.edu  Mon Jan 29 19:00:20 2001
From: hussein@vt.edu (Hussein Suleman)
Date: Mon, 29 Jan 2001 14:00:20 -0500
Subject: [OAI-implementers] Re: [oai-alpha] Re: Help!
References: <Pine.LNX.4.10.10101291103160.21620-100000@mmm.lanl.gov>
Message-ID: <3A75BDC4.C40ACF9A@vt.edu>

hi

from the perspective of someone writing conformance tests, i am probably
going to use a 2-fold certification scheme, possibly calling the levels
"correct" and "robust" ... where correct implies that the repository
responds properly to correctly formatted requests and robust meaning
that the repository responds properly to incorrect requests ...

so, if your repository responds properly to all the verbs (with all the
correct parameter combinations) your repository will be "correct"

and, if you can handle erroneous requests gracefully, where illegal
combinations of arguments generate 400's and illegal values of arguments
generate either 400's or valid XML, then your implementation is "robust"
and you can add your archive to the repository explorer as a
demonstration archive.

i think since we didnt rigorously define what illegal parameter values
are, we need to be prepared to accept both 400's and empty responses as
correct since the interpretation is going to be archive-specific.

[disclaimer: of course this is not how it works at the moment - right
now the definitions are still fuzzy but i will change those as soon as i
see agreement emerging from this discussion.]

one more concern i have is about list sizes... validation is a wonderful
feature to have but more validation = more requests = more responses =
more record metadata ... for illustration, if i wrote a "good"
validation test (which, mind you i have not because of this exact issue)
for "ListRecords" i would need at least 4 metadata formats (default,
non-default, bad, missing), 8 date pairs (valid from, valid until, valid
both, from>until, invalid from, invalid until, invalid both, missing), 3
sets (valid, invalid, missing), 3 resumptionTokens (valid, invalid,
missing), etc ...

so without going into more combinatorial explosion math, its obvious
that testing is a delicate balance between correctness and denial of
service :)) ... i would like to provide more correctness testing and the
greatest obstacle to this is massive ListRecords/ListIdentifiers
responses from some repositories ... so, a plea to all out there: flow
control is a wonderful feature - lets all use it :)

ttfn

hussein

-- 
=========================================================================
hussein suleman -- hussein@vt.edu -- vt cs --
http://purl.org/net/hussein
=========================================================================

From thabing@uiuc.edu  Mon Jan 29 21:06:01 2001
From: thabing@uiuc.edu (Thomas G. Habing)
Date: Mon, 29 Jan 2001 15:06:01 -0600
Subject: [OAI-implementers] Re: [oai-alpha] Re: Help!
References: <Pine.LNX.4.10.10101291103160.21620-100000@mmm.lanl.gov> <3A75BDC4.C40ACF9A@vt.edu>
Message-ID: <3A75DB39.8A47732A@uiuc.edu>

Hi all,

Just thought I would add to the discussion re. 400 errors versus empty
results.

Our repository currently has 14 cases which return 400 errors (although
based on the previous messages, I am thinking of adding some more):

1) If there is no verb parameter at all:
	400 Bad Request ('verb' is a required parameter)

2) An unknown verb is encountered:
	400 Bad Request('" & verb & "' is not a valid verb)

GetRecord
---------
3) If there is no identifier:
	400 Bad Request ('identifier' is a required parameter)

4) If there is no metadaPrefix:
	400 Bad Request ('metadataPrefix' is a required parameter)

ListIdentifiers
---------------
5) If there is a resumptionToken plus other parameters:
	400 Bad Request ('resumptionToken' must be the only parameter)

6) If until is not a valid date:
	400 Bad Request ('" & untilDateStr & "' is not a valid date)

7) If from is not a valid date:
	400 Bad Request ('" & fromDateStr & "' is not a valid date)

8) An unrecognized resumptionToken is sent:
	400 Bad Request ('" & server.urlencode(resumptionToken)& "' is not a valid
	resumptionToken)

ListRecords
-----------
9) If there is no metadaPrefix:
	400 Bad Request ('metadataPrefix' is a required parameter)

10) If there is a resumptionToken plus other parameters:
	400 Bad Request ('resumptionToken' must be the only parameter)

11) If until is not a valid date:
	400 Bad Request ('" & untilDateStr & "' is not a valid date)

12) If from is not a valid date:
	400 Bad Request ('" & fromDateStr & "' is not a valid date)

13) An unrecognized resumptionToken is sent:
	400 Bad Request ('" & server.urlencode(resumptionToken)& "' is not a valid
	resumptionToken)

ListSets
--------
14) A resumption token is sent (our ListSets doesn't implement this):
	400 Bad Request ('" & server.urlencode(resumptionToken) & "' is not a valid
	resumptionToken)

Weighing in on the current controversy, I agree with Simeon that malformed
arguments should probably result in 400s, but correctly formed arguments
that just can't be supported by the repository should result in empty XML. 
Based on this I am considering adding (in addition to the above):

1) checks that an 'identifier' is a valid URI (but not necessarily using the
OAI scheme),

2) that 'metadataPrefix' conforms to the given regular expression

3) that 'set' conforms to the given regular expression

4) possibly, that the the dates 'from' <= 'until'?

Another issue relating to errors is the addition of non-standard parameters.
For example, there might be a community of providers and harvesters which
decide to extend the protocol, possibly by adding non-standard parameters to
some of the verbs. For example, adding a 'creator' param to the ListRecords
verb so that only records with a given creator are returned.  The question
is, should providers return a 400 if they encounter an unknown parameter,
or, assuming all else is correct, should they just ignore the extra param,
and process the request as usual.  In other words, should communities be
allowed to extend the protocol with the expectation that providers who do
not support the extension will degrade gracefully, and continue to honor
their requests, simply ignoring the extensions?  Should providers that do
this be allowed to register as conformant to the OAI spec?

Note that I have no intention of doing this with our system, but since it
just occurred to me I thought I should bring it up.

Regards,
	Tom

-- 
Thomas G. Habing
Research Programmer, Digital Library Initiative
University of Illinois at Urbana-Champaign
052 Grainger Engineering Library, MC-274
thabing@uiuc.edu, (217) 244-7809


Hussein Suleman wrote:
> 
> hi
> 
> from the perspective of someone writing conformance tests, i am probably
> going to use a 2-fold certification scheme, possibly calling the levels
> "correct" and "robust" ... where correct implies that the repository
> responds properly to correctly formatted requests and robust meaning
> that the repository responds properly to incorrect requests ...
> 
> so, if your repository responds properly to all the verbs (with all the
> correct parameter combinations) your repository will be "correct"
> 
> and, if you can handle erroneous requests gracefully, where illegal
> combinations of arguments generate 400's and illegal values of arguments
> generate either 400's or valid XML, then your implementation is "robust"
> and you can add your archive to the repository explorer as a
> demonstration archive.
> 
> i think since we didnt rigorously define what illegal parameter values
> are, we need to be prepared to accept both 400's and empty responses as
> correct since the interpretation is going to be archive-specific.
> 
> [disclaimer: of course this is not how it works at the moment - right
> now the definitions are still fuzzy but i will change those as soon as i
> see agreement emerging from this discussion.]
> 
> one more concern i have is about list sizes... validation is a wonderful
> feature to have but more validation = more requests = more responses =
> more record metadata ... for illustration, if i wrote a "good"
> validation test (which, mind you i have not because of this exact issue)
> for "ListRecords" i would need at least 4 metadata formats (default,
> non-default, bad, missing), 8 date pairs (valid from, valid until, valid
> both, from>until, invalid from, invalid until, invalid both, missing), 3
> sets (valid, invalid, missing), 3 resumptionTokens (valid, invalid,
> missing), etc ...
> 
> so without going into more combinatorial explosion math, its obvious
> that testing is a delicate balance between correctness and denial of
> service :)) ... i would like to provide more correctness testing and the
> greatest obstacle to this is massive ListRecords/ListIdentifiers
> responses from some repositories ... so, a plea to all out there: flow
> control is a wonderful feature - lets all use it :)
> 
> ttfn
> 
> hussein
> 
> --
> =========================================================================
> hussein suleman -- hussein@vt.edu -- vt cs --
> http://purl.org/net/hussein
> =========================================================================
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

From jyoung@oclc.org  Tue Jan 30 21:00:35 2001
From: jyoung@oclc.org (Young,Jeff)
Date: Tue, 30 Jan 2001 16:00:35 -0500
Subject: [OAI-implementers] ListMetadataFormats problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98341EDE@OA3-SERVER.oa.oclc.org>

I'm working on an OAI repository for a group that wants to define it's own
metadata format. The trick is, this format will be a combination of Dublin
Core elements and some new elements yet to be defined. The examples in the
OAI specs, however, all assume that the metadata will consist of elements
from a single namespace. I believe, for the most part, that the OAI spec
doesn't preclude the use of multiple namespaces. For example, I imagine that
the following XML fragment is likely to be acceptable:

<combined xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:myelems="http://www.myelems.com/"
	xmlns:xsi="..."
	xsi:schemaLocation="http://purl.org/dc/elements/1.1/
		http://www.myelems.com/
		http://www.myelems.com/combined.xsd">
  <dc:title>This is the title</dc:title>
  <myelems:shoesize>12</myelems:shoesize>
</combined>

(As far as I can tell, specifying multiple namespaces in the
xsi:schemaLocation attribute is perfectly valid.)

Assuming no one sees any problems with this, I do think I see a problem with
ListMetadataFormats.xsd. Now that multiple namespaces are involved, I expect
that ListMetadataFormats will need to accommodate them with multiple
metadataNamespace elements. The XML schema for ListMetadataFormats, however,
sets the maxOccurs for metadataNamespace to one. I suspect this is easily
changed to unbounded.

Hopefully, the problem is no more involved than this, but someone may want
to check my assumptions.

Thanks,
Jeff

---
Jeffrey A. Young
Senior Consulting Systems Analyst
Office of Research, Mail Code 710
OCLC Online Computer Library Center, Inc.
6565 Frantz Road
Dublin, OH   43017-3395
www.oclc.org

Voice:	614-764-4342
Fax:		614-764-2344
Email:	jyoung@oclc.org




From Steven Bird <sb@ldc.upenn.edu>  Tue Jan 30 22:44:04 2001
From: Steven Bird <sb@ldc.upenn.edu> (Steven Bird)
Date: Tue, 30 Jan 2001 17:44:04 EST
Subject: [OAI-implementers] ListMetadataFormats problem
In-Reply-To: Your mail dated Tuesday 30 January, 2001.
Message-ID: <200101302244.f0UMi4p26757@fitzwater.ldc.upenn.edu>

> I'm working on an OAI repository for a group that wants to define it's own
> metadata format. The trick is, this format will be a combination of Dublin
> Core elements and some new elements yet to be defined.

This is just what the Open Language Archives Community (OLAC) wants to do,
but it hasn't been clear to us how best to do it with schemas.  As a
starting point we've made a copy of the DC format with our own namespace
(http://www.language-archives.org/olac-0.1.xsd), and we're planning to
add qualifications in the style of DC Qualifiers.

It will be trivial for our data providers to generate DC from this richer set.
It mostly consists in throwing away the refinements and qualifications,
and mapping from the controlled vocabularies (such as language codes) to
human-readable versions, a mapping which is automatic.

What do people think of this approach?  Keeping things simple for the data
providers seems more important than trying to track what the XML world
currently thinks is the neatest way to do something.  However, if this
multi-namespace approach can work in the OAI framework then we might also
use it.

-Steven


From hussein@vt.edu  Wed Jan 31 00:10:07 2001
From: hussein@vt.edu (Hussein Suleman)
Date: Tue, 30 Jan 2001 19:10:07 -0500
Subject: [OAI-implementers] ListMetadataFormats problem
References: <E5431CF93E29F9478878F623E5B9CE98341EDE@OA3-SERVER.oa.oclc.org>
Message-ID: <3A7757DF.13ED919D@vt.edu>

hi

i think Jeff and Steven have made some interesting points that
illustrate exactly how we expect the protocol to be used - as the
individual communities see fit to use it.

that said, i want to suggest an alternative (with yet one more level of
encapsulation) that will allow for a solution without changing the
existing schemata ... we could create a container to hold multiple
metadata types which each still retain their original schemata and
namespaces, and which does not require a change to
ListMetadataFormats...

<dc_myelems xmlns="http://metadata.gurus.org/dc_myelems">
  <dc xmlns="http://purl.org/dc/elements/1.1/">
    <title>Some random title</title>
    <creator>Some random creator</creator>
  </dc>
  <myelems xmlns="http://www.myelems.com/">
    <shoesize>25</shoesize>
  </myelems>
</dc_myelems>

which raises the interesting point about what we should do if something
in the protocol needs to be changed ... i presume that since it is
frozen, nothing can be changed unless it is definitely an error (as
opposed to a missing feature) ... but i could be wrong here ...

ttfn

hussein

-- 
=========================================================================
hussein suleman -- hussein@vt.edu -- vt cs --
http://purl.org/net/hussein
=========================================================================

From tdb198@ecs.soton.ac.uk  Wed Jan 31 11:56:49 2001
From: tdb198@ecs.soton.ac.uk (Tim Brody)
Date: Wed, 31 Jan 2001 11:56:49 +0000 (GMT)
Subject: [OAI-implementers] ListMetadataFormats problem
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE98341EDE@OA3-SERVER.oa.oclc.org>
Message-ID: <Pine.LNX.4.21.0101311137480.2997-100000@michelmersh.ecs.soton.ac.uk>

On Tue, 30 Jan 2001, Young,Jeff wrote:

> I'm working on an OAI repository for a group that wants to define it's own
> metadata format. The trick is, this format will be a combination of Dublin
> Core elements and some new elements yet to be defined. The examples in the
> OAI specs, however, all assume that the metadata will consist of elements
> from a single namespace. I believe, for the most part, that the OAI spec
> doesn't preclude the use of multiple namespaces. For example, I imagine that
> the following XML fragment is likely to be acceptable:
> 
> <combined xmlns:dc="http://purl.org/dc/elements/1.1/"
> 	xmlns:myelems="http://www.myelems.com/"
> 	xmlns:xsi="..."
> 	xsi:schemaLocation="http://purl.org/dc/elements/1.1/
> 		http://www.myelems.com/
> 		http://www.myelems.com/combined.xsd">
>   <dc:title>This is the title</dc:title>
>   <myelems:shoesize>12</myelems:shoesize>
> </combined>
> 
> (As far as I can tell, specifying multiple namespaces in the
> xsi:schemaLocation attribute is perfectly valid.)

Dear all,

I wonder whether the following is reasonable (perhaps not appropriate to
the issue at hand):

<dc ...>
 <description>(comment) Comments...</description>
 <identifier>oai:arXiv:nut-ex/xyz</identifier>
 <identifier>(journal) Nucl. Phys. xyz</identifier>
 <identifier>...
</dc>

Or would:

<dc ...>
 <description type="comment">Comments...</description>
</dc>

Be more sensible?

My reasoning is adding new types of metadata sets means that a harvester
must be specifically written to understand that data set to extract any
useful information. If a backwards compatible system can be used with DC
then harvesters need not be specialised, but archives are given the
opportunity to qualify their responses. For example a harvester could
amalgamate all <description> fields, or, if the harvester supports
differential description fields it can take advantage of archives that
provide that information.

<relation type="shoesize"> anyone?

Tim Brody
Computer Science, University of Southampton
email: tdb198@soton.ac.uk
Web: http://www.ecs.soton.ac.uk/~tdb198/



From lagoze@cs.cornell.edu  Wed Jan 31 12:15:15 2001
From: lagoze@cs.cornell.edu (lagoze@cs.cornell.edu)
Date: Wed, 31 Jan 2001 07:15:15 -0500
Subject: [OAI-implementers] ListMetadataFormats problem
Message-ID: <706871B20764CD449DB0E8E3D81C4D43BD74F4@opus.cs.cornell.edu>

Jeff, I think you've got the wrong approach here.  Having spent the last
hour or so staring at the xml schema primer at
http://www.w3.org/TR/xmlschema-0  I found the explanation on importing
types at http://www.w3.org/TR/xmlschema-0/#import.  Using this mechanism
you can pull in types (elements) from another namespace.  E.g., you
could define a schema carlmeta.xsd with a target namespace
http://foo.org/carlmeta with an import of
http://purl.org/dc/elements/1.1.  I quote the primer:

When schema components are imported from multiple namespaces, each
namespace must be identified with a separate import element. The import
elements themselves must appear as the first children of the schema
element. Furthermore, each namespace must be associated with a prefix,
using a standard namespace declaration, and that prefix is used to
qualify references to any schema components belonging to that namespace.
Finally, import elements optionally contain a schemaLocation attribute
to help locate resources associated with the namespaces. 

Don't have time now to experiment with this but coming up with an
example shouldn't be too hard.

Carl

> -----Original Message-----
> From: Young,Jeff [mailto:jyoung@oclc.org]
> Sent: Tuesday, January 30, 2001 4:58 PM
> To: 'lagoze@cs.cornell.edu'
> Subject: FW: [OAI-implementers] ListMetadataFormats problem
> 
> 
> Hi Carl,
> 
> I don't think things are as simple as I'd hoped. I want to 
> check with you
> first, though, before I stir up more confusion in the 
> listserv. Apparently,
> the xsi:schemaLocation element expects namespaces to be 
> paired with schema
> locations. If this is true, then a single schema won't work for the
> application I described below. Is there any reason that 
> schemas can't be
> repeatable as well as namespaces in relation to metadata formats?
> 
> Jeff
> 
> > -----Original Message-----
> > From: Young,Jeff [mailto:jyoung@oclc.org] 
> > Sent: Tuesday, January 30, 2001 4:01 PM
> > To: 'OAI-implementers'
> > Subject: [OAI-implementers] ListMetadataFormats problem
> > 
> > 
> > I'm working on an OAI repository for a group that wants to 
> > define it's own
> > metadata format. The trick is, this format will be a 
> > combination of Dublin
> > Core elements and some new elements yet to be defined. The 
> > examples in the
> > OAI specs, however, all assume that the metadata will consist 
> > of elements
> > from a single namespace. I believe, for the most part, that 
> > the OAI spec
> > doesn't preclude the use of multiple namespaces. For example, 
> > I imagine that
> > the following XML fragment is likely to be acceptable:
> > 
> > <combined xmlns:dc="http://purl.org/dc/elements/1.1/"
> > 	xmlns:myelems="http://www.myelems.com/"
> > 	xmlns:xsi="..."
> > 	xsi:schemaLocation="http://purl.org/dc/elements/1.1/
> > 		http://www.myelems.com/
> > 		http://www.myelems.com/combined.xsd">
> >   <dc:title>This is the title</dc:title>
> >   <myelems:shoesize>12</myelems:shoesize>
> > </combined>
> > 
> > (As far as I can tell, specifying multiple namespaces in the
> > xsi:schemaLocation attribute is perfectly valid.)
> > 
> > Assuming no one sees any problems with this, I do think I see 
> > a problem with
> > ListMetadataFormats.xsd. Now that multiple namespaces are 
> > involved, I expect
> > that ListMetadataFormats will need to accommodate them with multiple
> > metadataNamespace elements. The XML schema for 
> > ListMetadataFormats, however,
> > sets the maxOccurs for metadataNamespace to one. I suspect 
> > this is easily
> > changed to unbounded.
> > 
> > Hopefully, the problem is no more involved than this, but 
> > someone may want
> > to check my assumptions.
> > 
> > Thanks,
> > Jeff
> > 
> > ---
> > Jeffrey A. Young
> > Senior Consulting Systems Analyst
> > Office of Research, Mail Code 710
> > OCLC Online Computer Library Center, Inc.
> > 6565 Frantz Road
> > Dublin, OH   43017-3395
> > www.oclc.org
> > 
> > Voice:	614-764-4342
> > Fax:		614-764-2344
> > Email:	jyoung@oclc.org
> > 
> > 
> > 
> > _______________________________________________
> > OAI-implementers mailing list
> > OAI-implementers@oaisrv.nsdl.cornell.edu
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> 

From herbertv@CS.Cornell.EDU  Wed Jan 31 14:38:47 2001
From: herbertv@CS.Cornell.EDU (herbert van de sompel)
Date: Wed, 31 Jan 2001 09:38:47 -0500
Subject: [Fwd: [OAI-implementers] ListMetadataFormats problem]
Message-ID: <3A782377.FB84AD1A@cs.cornell.edu>

This is a multi-part message in MIME format.
--------------95728BFCAD6AF04D848B543B
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

see attached mail from Carl.

herbert
--------------95728BFCAD6AF04D848B543B
Content-Type: message/rfc822
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Return-Path: <oai-implementers-admin@oaisrv.nsdl.cornell.edu>
Received: from oaisrv.nsdl.cornell.edu (IDENT:root@oaisrv.nsdl.cornell.edu [128.84.154.156])
	by sundial.cs.cornell.edu (8.9.3/8.9.3/M-3.3) with ESMTP id HAA00577;
	Wed, 31 Jan 2001 07:17:51 -0500 (EST)
Received: from oaisrv.nsdl.cornell.edu (IDENT:mailman@localhost.localdomain [127.0.0.1])
	by oaisrv.nsdl.cornell.edu (8.11.0/8.11.0) with ESMTP id f0VCH1905235;
	Wed, 31 Jan 2001 07:17:01 -0500
Received: from opus.cs.cornell.edu (exchange.cs.cornell.edu [128.84.97.8])
	by oaisrv.nsdl.cornell.edu (8.11.0/8.11.0) with ESMTP id f0VCGM905220
	for <oai-implementers@oaisrv.nsdl.cornell.edu>; Wed, 31 Jan 2001 07:16:22 -0500
Received: by opus.cs.cornell.edu with Internet Mail Service (5.5.2650.21)
	id <C93CW1PH>; Wed, 31 Jan 2001 07:16:32 -0500
Received: by opus.cs.cornell.edu with Internet Mail Service (5.5.2650.21)
	id <C93CW1PC>; Wed, 31 Jan 2001 07:15:15 -0500
Message-ID: <706871B20764CD449DB0E8E3D81C4D43BD74F4@opus.cs.cornell.edu>
From: lagoze@CS.Cornell.EDU
To: jyoung@oclc.org
Cc: oai-implementers@openarchvies.org
Subject: RE: [OAI-implementers] ListMetadataFormats problem
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2650.21)
Content-Type: text/plain;
	charset="ISO-8859-1"
Sender: oai-implementers-admin@oaisrv.nsdl.cornell.edu
Errors-To: oai-implementers-admin@oaisrv.nsdl.cornell.edu
X-BeenThere: oai-implementers@oaisrv.nsdl.cornell.edu
X-Mailman-Version: 2.0.1
Precedence: bulk
List-Help: <mailto:oai-implementers-request@oaisrv.nsdl.cornell.edu?subject=help>
List-Post: <mailto:oai-implementers@oaisrv.nsdl.cornell.edu>
List-Subscribe: <http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers>,
	<mailto:oai-implementers-request@oaisrv.nsdl.cornell.edu?subject=subscribe>
List-Id: List to discuss implementation of the OAI protocol <oai-implementers.oaisrv.nsdl.cornell.edu>
List-Unsubscribe: <http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers>,
	<mailto:oai-implementers-request@oaisrv.nsdl.cornell.edu?subject=unsubscribe>
List-Archive: <http://oaisrv.nsdl.cornell.edu/pipermail/oai-implementers/>
Date: Wed, 31 Jan 2001 07:15:15 -0500
X-Mozilla-Status2: 00000000

Jeff, I think you've got the wrong approach here.  Having spent the last
hour or so staring at the xml schema primer at
http://www.w3.org/TR/xmlschema-0  I found the explanation on importing
types at http://www.w3.org/TR/xmlschema-0/#import.  Using this mechanism
you can pull in types (elements) from another namespace.  E.g., you
could define a schema carlmeta.xsd with a target namespace
http://foo.org/carlmeta with an import of
http://purl.org/dc/elements/1.1.  I quote the primer:

When schema components are imported from multiple namespaces, each
namespace must be identified with a separate import element. The import
elements themselves must appear as the first children of the schema
element. Furthermore, each namespace must be associated with a prefix,
using a standard namespace declaration, and that prefix is used to
qualify references to any schema components belonging to that namespace.
Finally, import elements optionally contain a schemaLocation attribute
to help locate resources associated with the namespaces. 

Don't have time now to experiment with this but coming up with an
example shouldn't be too hard.

Carl

> -----Original Message-----
> From: Young,Jeff [mailto:jyoung@oclc.org]
> Sent: Tuesday, January 30, 2001 4:58 PM
> To: 'lagoze@cs.cornell.edu'
> Subject: FW: [OAI-implementers] ListMetadataFormats problem
> 
> 
> Hi Carl,
> 
> I don't think things are as simple as I'd hoped. I want to 
> check with you
> first, though, before I stir up more confusion in the 
> listserv. Apparently,
> the xsi:schemaLocation element expects namespaces to be 
> paired with schema
> locations. If this is true, then a single schema won't work for the
> application I described below. Is there any reason that 
> schemas can't be
> repeatable as well as namespaces in relation to metadata formats?
> 
> Jeff
> 
> > -----Original Message-----
> > From: Young,Jeff [mailto:jyoung@oclc.org] 
> > Sent: Tuesday, January 30, 2001 4:01 PM
> > To: 'OAI-implementers'
> > Subject: [OAI-implementers] ListMetadataFormats problem
> > 
> > 
> > I'm working on an OAI repository for a group that wants to 
> > define it's own
> > metadata format. The trick is, this format will be a 
> > combination of Dublin
> > Core elements and some new elements yet to be defined. The 
> > examples in the
> > OAI specs, however, all assume that the metadata will consist 
> > of elements
> > from a single namespace. I believe, for the most part, that 
> > the OAI spec
> > doesn't preclude the use of multiple namespaces. For example, 
> > I imagine that
> > the following XML fragment is likely to be acceptable:
> > 
> > <combined xmlns:dc="http://purl.org/dc/elements/1.1/"
> > 	xmlns:myelems="http://www.myelems.com/"
> > 	xmlns:xsi="..."
> > 	xsi:schemaLocation="http://purl.org/dc/elements/1.1/
> > 		http://www.myelems.com/
> > 		http://www.myelems.com/combined.xsd">
> >   <dc:title>This is the title</dc:title>
> >   <myelems:shoesize>12</myelems:shoesize>
> > </combined>
> > 
> > (As far as I can tell, specifying multiple namespaces in the
> > xsi:schemaLocation attribute is perfectly valid.)
> > 
> > Assuming no one sees any problems with this, I do think I see 
> > a problem with
> > ListMetadataFormats.xsd. Now that multiple namespaces are 
> > involved, I expect
> > that ListMetadataFormats will need to accommodate them with multiple
> > metadataNamespace elements. The XML schema for 
> > ListMetadataFormats, however,
> > sets the maxOccurs for metadataNamespace to one. I suspect 
> > this is easily
> > changed to unbounded.
> > 
> > Hopefully, the problem is no more involved than this, but 
> > someone may want
> > to check my assumptions.
> > 
> > Thanks,
> > Jeff
> > 
> > ---
> > Jeffrey A. Young
> > Senior Consulting Systems Analyst
> > Office of Research, Mail Code 710
> > OCLC Online Computer Library Center, Inc.
> > 6565 Frantz Road
> > Dublin, OH   43017-3395
> > www.oclc.org
> > 
> > Voice:	614-764-4342
> > Fax:		614-764-2344
> > Email:	jyoung@oclc.org
> > 
> > 
> > 
> > _______________________________________________
> > OAI-implementers mailing list
> > OAI-implementers@oaisrv.nsdl.cornell.edu
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> 
_______________________________________________
OAI-implementers mailing list
OAI-implementers@oaisrv.nsdl.cornell.edu
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


--------------95728BFCAD6AF04D848B543B--


From herbertv@CS.Cornell.EDU  Wed Jan 31 14:40:30 2001
From: herbertv@CS.Cornell.EDU (herbert van de sompel)
Date: Wed, 31 Jan 2001 09:40:30 -0500
Subject: [OAI-implementers] re: ListMetadataFormats problem
Message-ID: <3A7823DE.B47AB938@cs.cornell.edu>

I am completely on the same line of thinking with Carl, here.  There
needs to be a one-to-one relationship between a metadataPrefix and the
location of a schema describing the metadataformat represented by that
metadataPrefix.  If that metadataformats wants to draw from multiple
namespaces, that is fine, but that should be declared in the schema for
the metadataformat as Carl indicates.  Building on Carl's example, a
repo working with the CARL metadataformat would reply to the
ListMetadataFormat verb as:

<?xml version="1.0" encoding="UTF-8"?>
  <ListMetadataFormats 
     
xmlns="http://www.openarchives.org/OAI/1.0/OAI_ListMetadataFormats"
      xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance"
     
xsi:schemaLocation="http://www.openarchives.org/OAI/1.0/OAI_ListMetadataFormats         
                   
http://www.openarchives.org/OAI/1.0/OAI_ListMetadataFormats.xsd">
    <responseDate>2000-10-01T19:20:30-04:00</responseDate> 
    <requestURL>http://an.oa.org/OAI-script?verb=ListMetadataFormats
               
&amp;identifier=oai%3AarXiv%3Ahep-th%2F9901001</requestURL>
    <metadataFormat>
      <metadataPrefix>oai_CARL</metadataPrefix>
      <schema>http://foo.org/carlmeta.xsd</schema>
      <metadataNamespace>http://foo.org/carlmeta</metadataNamespace>
    </metadataFormat>
    <metadataFormat>
      <metadataPrefix>oai_dc</metadataPrefix>
      <schema>http://www.openarchives.org/OAI/dc.xsd</schema>
     
<metadataNamespace>http://purl.org/dc/elements/1.1/</metadataNamespace>
    </metadataFormat>
</ListMetadataFormats> 

That is, the repo undertands oai_CARL as a metadataPrefix, and it points
at http://foo.org/carlmeta.xsd as the location of the corresponding
schema.  That carlmetadata.xsd schema will declare the import of
whichever other metadataformats it wants to build upon.  See XML Primer
section "5. Advanced Concepts III: The Quarterly Report"
(http://www.w3.org/TR/xmlschema-0/#quartelyReport) for an example
(report.xsd) that shows how this can be done.

If, in our example, the CARL formats want to use DC elements, I think
that the top part of the carlmetadata.xsd schema would look like:

<schema targetNamespace="http://foo.org/carlmeta"
                      xmlns="http://www.w3.org/2000/08/XMLSchema"
                      xmlns:carl="http://foo.org/carlmeta"
                      xmlns:dc="http://purl.org/dc/elements/1.1/"
                      elementFormDefault="qualified">

<!-- import DC -->
<import namespace="http://purl.org/dc/elements/1.1/"/>

<element name="oai_carl" type=carl:carlType>

<complexType name="carlType">
 <sequence>
   <element name="element1" type="string"/>
   <element name="element2" type="carl:element2Type"/>
   <element name="element3" type="dc:creator"/>
 </sequence>
</complexType>

....


greetings

herbert

lagoze@CS.Cornell.EDU wrote:
> 
> Jeff, I think you've got the wrong approach here.  Having spent the last
> hour or so staring at the xml schema primer at
> http://www.w3.org/TR/xmlschema-0  I found the explanation on importing
> types at http://www.w3.org/TR/xmlschema-0/#import.  Using this mechanism
> you can pull in types (elements) from another namespace.  E.g., you
> could define a schema carlmeta.xsd with a target namespace
> http://foo.org/carlmeta with an import of
> http://purl.org/dc/elements/1.1.  I quote the primer:
> 
> When schema components are imported from multiple namespaces, each
> namespace must be identified with a separate import element. The import
> elements themselves must appear as the first children of the schema
> element. Furthermore, each namespace must be associated with a prefix,
> using a standard namespace declaration, and that prefix is used to
> qualify references to any schema components belonging to that namespace.
> Finally, import elements optionally contain a schemaLocation attribute
> to help locate resources associated with the namespaces.
> 
> Don't have time now to experiment with this but coming up with an
> example shouldn't be too hard.
> 
> Carl
> 
> > -----Original Message-----
> > From: Young,Jeff [mailto:jyoung@oclc.org]
> > Sent: Tuesday, January 30, 2001 4:58 PM
> > To: 'lagoze@cs.cornell.edu'
> > Subject: FW: [OAI-implementers] ListMetadataFormats problem
> >
> >
> > Hi Carl,
> >
> > I don't think things are as simple as I'd hoped. I want to
> > check with you
> > first, though, before I stir up more confusion in the
> > listserv. Apparently,
> > the xsi:schemaLocation element expects namespaces to be
> > paired with schema
> > locations. If this is true, then a single schema won't work for the
> > application I described below. Is there any reason that
> > schemas can't be
> > repeatable as well as namespaces in relation to metadata formats?
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Young,Jeff [mailto:jyoung@oclc.org]
> > > Sent: Tuesday, January 30, 2001 4:01 PM
> > > To: 'OAI-implementers'
> > > Subject: [OAI-implementers] ListMetadataFormats problem
> > >
> > >
> > > I'm working on an OAI repository for a group that wants to
> > > define it's own
> > > metadata format. The trick is, this format will be a
> > > combination of Dublin
> > > Core elements and some new elements yet to be defined. The
> > > examples in the
> > > OAI specs, however, all assume that the metadata will consist
> > > of elements
> > > from a single namespace. I believe, for the most part, that
> > > the OAI spec
> > > doesn't preclude the use of multiple namespaces. For example,
> > > I imagine that
> > > the following XML fragment is likely to be acceptable:
> > >
> > > <combined xmlns:dc="http://purl.org/dc/elements/1.1/"
> > >     xmlns:myelems="http://www.myelems.com/"
> > >     xmlns:xsi="..."
> > >     xsi:schemaLocation="http://purl.org/dc/elements/1.1/
> > >             http://www.myelems.com/
> > >             http://www.myelems.com/combined.xsd">
> > >   <dc:title>This is the title</dc:title>
> > >   <myelems:shoesize>12</myelems:shoesize>
> > > </combined>
> > >
> > > (As far as I can tell, specifying multiple namespaces in the
> > > xsi:schemaLocation attribute is perfectly valid.)
> > >
> > > Assuming no one sees any problems with this, I do think I see
> > > a problem with
> > > ListMetadataFormats.xsd. Now that multiple namespaces are
> > > involved, I expect
> > > that ListMetadataFormats will need to accommodate them with multiple
> > > metadataNamespace elements. The XML schema for
> > > ListMetadataFormats, however,
> > > sets the maxOccurs for metadataNamespace to one. I suspect
> > > this is easily
> > > changed to unbounded.
> > >
> > > Hopefully, the problem is no more involved than this, but
> > > someone may want
> > > to check my assumptions.
> > >
> > > Thanks,
> > > Jeff
> > >
> > > ---
> > > Jeffrey A. Young
> > > Senior Consulting Systems Analyst
> > > Office of Research, Mail Code 710
> > > OCLC Online Computer Library Center, Inc.
> > > 6565 Frantz Road
> > > Dublin, OH   43017-3395
> > > www.oclc.org
> > >
> > > Voice:      614-764-4342
> > > Fax:                614-764-2344
> > > Email:      jyoung@oclc.org
> > >
> > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > OAI-implementers@oaisrv.nsdl.cornell.edu
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > >
> >
> _______________________________________________
> OAI-implementers mailing list
> OAI-implementers@oaisrv.nsdl.cornell.edu
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

-- 
Herbert Van de Sompel
Visiting Assistant Professor
Cornell University -- Computer Science
tel + 1 - 607 - 255 - 3085
fax + 1 - 607 - 255 - 4428
http://www.cs.cornell.edu/people/herbertv/
digital life in libraries used to be primitive
-- 
Herbert Van de Sompel
Visiting Assistant Professor
Cornell University -- Computer Science
tel + 1 - 607 - 255 - 3085
fax + 1 - 607 - 255 - 4428
http://www.cs.cornell.edu/people/herbertv/
digital life in libraries used to be primitive

From bass@MIT.EDU  Wed Jan 31 16:48:19 2001
From: bass@MIT.EDU (Mick Bass)
Date: Wed, 31 Jan 2001 11:48:19 -0500
Subject: [OAI-implementers] ListMetadataFormats problem
Message-ID: <4.3.2.7.2.20010131114803.00c8a900@hesiod>

--=====================_149350594==_.ALT
Content-Type: text/plain; charset="us-ascii"; format=flowed

Mick Bass here, from HP (employer) and MIT (partner & development site), 
leading DSpace joint development effort <http://www.dspace.org>.

I'm rather uninitiated in the ways of XML-Schema (but aren't we 
all...).  So take these comments only as potentially helpful...

import would seemingly allow validation of DC elements as a part of a 
schema in another namespace.

It sounds like in addition to this you want to extend DC to include new 
elements, though, so I'd also recommend a read of the tutorial section on 
"Derving complex types by extension":

<http://www.w3.org/TR/xmlschema-0/#DerivExt>:

>4.2 Deriving Types by Extension
>To create our address constructs, we start by creating a complex type 
>called Address in the usual way (see address.xsd). The Address type 
>contains the basic elements of an address: a name, a street and a city. 
>(Such a definition will not work for all countries, but it will serve the 
>purposes of our example.) From this starting point we derive two new 
>complex types that contain all the elements of the original type plus 
>additional elements that are specific to addresses in the US and the UK. 
>The technique we use here to derive new (complex) address types by 
>extending an existing type is the same technique we used in in Section 
>2.5.1, except that our base type here is a complex type whereas our base 
>type in the previous section was a simple type.
>We define the two new complex types, USAddress and UKAddress, using the 
>complexType element. In addition, we indicate that the content models of 
>the new types are complex, i.e. contain elements, by using the 
>complexContent element, and we indicate that we are extending the base 
>type Address by the value of the base attribute on the extension element.
>When a complex type is derived by extension, its effective content model 
>is the content model of the base type plus the content model specified in 
>the type derivation. Furthermore, the two content models are treated as 
>two children of a sequential group. In the case of UKAddress, the content 
>model of UKAddress is the content model of Address plus the declarations 
>for a postcode element and an exportCode attribute.

The dublincore schema at http://www.openarchives.org/OAI/dc.xsd defines:

<element name="dc" type="dc:dublincoreType"/>

  <complexType name="dublincoreType">
   <choice minOccurs="0" maxOccurs="unbounded">
    <element name="title" minOccurs="0" maxOccurs="unbounded" type="string"/>
    <element name="creator"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="subject"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="description"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="contributor"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="publisher"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="date"  minOccurs="0" maxOccurs="unbounded" type="string"/>
    <element name="type"  minOccurs="0" maxOccurs="unbounded" type="string"/>
    <element name="format"  minOccurs="0" maxOccurs="unbounded" type="string"/>
    <element name="identifier"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="source"  minOccurs="0" maxOccurs="unbounded" type="string"/>
    <element name="language"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="relation"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="coverage"  minOccurs="0" maxOccurs="unbounded" 
type="string"/>
    <element name="rights"  minOccurs="0" maxOccurs="unbounded" type="string"/>
   </choice>
  </complexType>

You may want something like:

<element name="edc" type="edc:extendedDublincoreType"/>

<complexType name="extendedDublincoreType">
   <complexContent>
     <extension base="dc:dublincoreType">
       <sequence>
         <element name="shoesize" minOccurs="0" maxOccurs="unbounded" 
type="string"/>
         <element name="numfeet" minOccurs="0" maxOccurs="unbounded" 
type="positiveInteger"/>
       </sequence>
     </extension>
   </complexContent>
</complexType>

I'm thinking this would be defined in your namespace (here, "edc"), but the 
dc namespace would need to be imported so that the validation processor 
would be aware of the definition of dublincoreType, so that your extension 
could be validated.

If this were to work, you ought to be able to declare instance metadata of 
type ExtendedDublinCoreType (in namespace "edc"), and have it be 
successfully validated in schemas expecting straight up DublinCore.  The 
details of actually getting this to work, I leave to you, but this seems to 
be their  intent from a read through the XML-Schema documentation :)

The impact on harvesters of instance metadata exported using types derived 
by extension is not yet clear to me...

- Mick

At 07:15 AM 1/31/01 -0500, you wrote:
>Jeff, I think you've got the wrong approach here.  Having spent the last
>hour or so staring at the xml schema primer at
>http://www.w3.org/TR/xmlschema-0 I found the explanation on importing
>types at http://www.w3.org/TR/xmlschema-0/#import. Using this mechanism
>you can pull in types (elements) from another namespace.  E.g., you
>could define a schema carlmeta.xsd with a target namespace
>http://foo.org/carlmeta with an import of
>http://purl.org/dc/elements/1.1. I quote the primer:
>
>When schema components are imported from multiple namespaces, each
>namespace must be identified with a separate import element. The import
>elements themselves must appear as the first children of the schema
>element. Furthermore, each namespace must be associated with a prefix,
>using a standard namespace declaration, and that prefix is used to
>qualify references to any schema components belonging to that namespace.
>Finally, import elements optionally contain a schemaLocation attribute
>to help locate resources associated with the namespaces.
>
>Don't have time now to experiment with this but coming up with an
>example shouldn't be too hard.
>
>Carl
>
> > -----Original Message-----
> > From: Young,Jeff [mailto:jyoung@oclc.org]
> > Sent: Tuesday, January 30, 2001 4:58 PM
> > To: 'lagoze@cs.cornell.edu'
> > Subject: FW: [OAI-implementers] ListMetadataFormats problem
> >
> >
> > Hi Carl,
> >
> > I don't think things are as simple as I'd hoped. I want to
> > check with you
> > first, though, before I stir up more confusion in the
> > listserv. Apparently,
> > the xsi:schemaLocation element expects namespaces to be
> > paired with schema
> > locations. If this is true, then a single schema won't work for the
> > application I described below. Is there any reason that
> > schemas can't be
> > repeatable as well as namespaces in relation to metadata formats?
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Young,Jeff [mailto:jyoung@oclc.org]
> > > Sent: Tuesday, January 30, 2001 4:01 PM
> > > To: 'OAI-implementers'
> > > Subject: [OAI-implementers] ListMetadataFormats problem
> > >
> > >
> > > I'm working on an OAI repository for a group that wants to
> > > define it's own
> > > metadata format. The trick is, this format will be a
> > > combination of Dublin
> > > Core elements and some new elements yet to be defined. The
> > > examples in the
> > > OAI specs, however, all assume that the metadata will consist
> > > of elements
> > > from a single namespace. I believe, for the most part, that
> > > the OAI spec
> > > doesn't preclude the use of multiple namespaces. For example,
> > > I imagine that
> > > the following XML fragment is likely to be acceptable:
> > >
> > > <combined xmlns:dc="http://purl.org/dc/elements/1.1/"
> > >     xmlns:myelems="http://www.myelems.com/"
> > >     xmlns:xsi="..."
> > >     xsi:schemaLocation="http://purl.org/dc/elements/1.1/
> > >             http://www.myelems.com/
> > >             http://www.myelems.com/combined.xsd">
> > >   <dc:title>This is the title</dc:title>
> > >   <myelems:shoesize>12</myelems:shoesize>
> > > </combined>
> > >
> > > (As far as I can tell, specifying multiple namespaces in the
> > > xsi:schemaLocation attribute is perfectly valid.)
> > >
> > > Assuming no one sees any problems with this, I do think I see
> > > a problem with
> > > ListMetadataFormats.xsd. Now that multiple namespaces are
> > > involved, I expect
> > > that ListMetadataFormats will need to accommodate them with multiple
> > > metadataNamespace elements. The XML schema for
> > > ListMetadataFormats, however,
> > > sets the maxOccurs for metadataNamespace to one. I suspect
> > > this is easily
> > > changed to unbounded.
> > >
> > > Hopefully, the problem is no more involved than this, but
> > > someone may want
> > > to check my assumptions.
> > >
> > > Thanks,
> > > Jeff
> > >
> > > ---
> > > Jeffrey A. Young
> > > Senior Consulting Systems Analyst
> > > Office of Research, Mail Code 710
> > > OCLC Online Computer Library Center, Inc.
> > > 6565 Frantz Road
> > > Dublin, OH   43017-3395
> > > www.oclc.org
> > >
> > > Voice:      614-764-4342
> > > Fax:                614-764-2344
> > > Email:      jyoung@oclc.org
> > >
> > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > OAI-implementers@oaisrv.nsdl.cornell.edu
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > >
> >
>_______________________________________________
>OAI-implementers mailing list
>OAI-implementers@oaisrv.nsdl.cornell.edu
>http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

=========================
Mick Bass,   Sloan MOT 2000
R&D Project Manager
Hewlett-Packard Company
Cambridge, MA

617.253.6617 office
617.899.3938 mobile
617.452.3000 fax
617.627.9694 residence

bass@alum.mit.edu
mick_bass@hp.com
=========================

--=====================_149350594==_.ALT
Content-Type: text/html; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<html>
Mick Bass here, from HP (employer) and MIT (partner &amp; development
site), leading DSpace joint development effort
&lt;<a href=3D"http://www.dspace.org/"=
 eudora=3D"autourl">http://www.dspace.</a><a href=3D"http://www.dspace.org/"=
 eudora=3D"autourl">org</a>&gt;.<br>
<br>
I'm rather uninitiated in the ways of XML-Schema (but aren't we
all...).&nbsp; So take these comments only as potentially=20
helpful...<br>
<br>
import would seemingly allow validation of DC elements as a part of a
schema in another namespace. <br>
<br>
It sounds like in addition to this you want to extend DC to include new
elements, though, so I'd also recommend a read of the tutorial section on
&quot;Derving complex types by extension&quot;:<br>
<br>
&lt;<a href=3D"http://www.w3.org/TR/xmlschema-0/#DerivExt"=
 eudora=3D"autourl">http://www.w3.org/TR/xmlschema-0/#DerivExt</a>&gt;:<br>
<br>
<blockquote type=3Dcite cite><font size=3D5><b>4.2 Deriving Types by
Extension <br>
</b></font>To create our address constructs, we start by creating a
complex type called
<font face=3D"Courier New, Courier" size=3D4>Address</font><font=
 face=3D"Courier New, Courier">
in the usual way (see </font><font face=3D"Courier New, Courier" size=3D4=
 color=3D"#0000FF"><u>address.xsd</u></font><font face=3D"Courier New,=
 Courier">). The </font><font face=3D"Courier New, Courier"=
 size=3D4>Address</font><font face=3D"Courier New, Courier"> type contains=
 the basic elements of an address: a name, a street and a city. (Such a=
 definition will not work for all countries, but it will serve the purposes=
 of our example.) From this starting point we derive two new complex types=
 that contain all the elements of the original type plus additional elements=
 that are specific to addresses in the US and the UK. The technique we use=
 here to derive new (complex) address types by extending an existing type is=
 the same technique we used in in </font><font color=3D"#0000FF"><u>Section=
 2.5.1</u></font><font face=3D"Courier New, Courier">, except that our base=
 type here is a complex type whereas our base type in the previous section=
 was a simple type. <br>
</font>We define the two new complex types, <font face=3D"Courier New,=
 Courier" size=3D4>USAddress</font><font face=3D"Courier New, Courier"> and=
 </font><font face=3D"Courier New, Courier" size=3D4>UKAddress</font><font=
 face=3D"Courier New, Courier">, using the </font><font face=3D"Courier New,=
 Courier" size=3D4 color=3D"#0000FF"><u>complexType</u></font><font=
 face=3D"Courier New, Courier"> element. In addition, we indicate that the=
 content models of the new types are complex, i.e. contain elements, by=
 using the </font><font face=3D"Courier New, Courier" size=3D4=
 color=3D"#0000FF"><u>complexContent</u></font><font face=3D"Courier New,=
 Courier"> element, and we indicate that we are extending the base type=
 </font><font face=3D"Courier New, Courier" size=3D4>Address</font><font=
 face=3D"Courier New, Courier"> by the value of the </font><font=
 face=3D"Courier New, Courier" size=3D4=
 color=3D"#0000FF"><u>base</u></font><font face=3D"Courier New, Courier">=
 attribute on the </font><font face=3D"Courier New, Courier" size=3D4=
 color=3D"#0000FF"><u>extension</u></font><font face=3D"Courier New,=
 Courier"> element. <br>
</font>When a complex type is derived by extension, its effective content=
 model is the content model of the base type plus the content model=
 specified in the type derivation. Furthermore, the two content models are=
 treated as two children of a sequential group. In the case of <font=
 face=3D"Courier New, Courier" size=3D4>UKAddress</font><font face=3D"Courie=
r New, Courier">, the content model of </font><font face=3D"Courier New,=
 Courier" size=3D4>UKAddress</font><font face=3D"Courier New, Courier"> is=
 the content model of </font><font face=3D"Courier New, Courier"=
 size=3D4>Address</font><font face=3D"Courier New, Courier"> plus the=
 declarations for a </font><font face=3D"Courier New, Courier"=
 size=3D4>postcode</font><font face=3D"Courier New, Courier"> element and an=
 </font><font face=3D"Courier New, Courier" size=3D4>exportCode</font><font=
 face=3D"Courier New, Courier"> attribute. </font></blockquote><br>
The dublincore schema at <a href=3D"http://www.openarchives.org/OAI/dc.xsd"=
 eudora=3D"autourl">http://www.openarchives.org/OAI/dc.xsd</a> defines:<br>
<br>
<font face=3D"Fixedsys" size=3D1>&lt;element name=3D&quot;dc&quot;=
 type=3D&quot;dc:dublincoreType&quot;/&gt;<br>
<br>
&nbsp;&lt;complexType name=3D&quot;dublincoreType&quot;&gt;<br>
&nbsp; &lt;choice minOccurs=3D&quot;0&quot;=
 maxOccurs=3D&quot;unbounded&quot;&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;title&quot; minOccurs=3D&quot;0&quot;=
 maxOccurs=3D&quot;unbounded&quot; type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;creator&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;subject&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;description&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;contributor&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;publisher&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;date&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;type&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;format&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;identifier&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;source&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;language&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;relation&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;coverage&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp;&nbsp; &lt;element name=3D&quot;rights&quot;&nbsp;=
 minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/&gt;<br>
&nbsp; &lt;/choice&gt;<br>
&nbsp;&lt;/complexType&gt;<br>
<br>
</font>You may want something like:<br>
<br>
<font face=3D"Fixedsys" size=3D1>&lt;element name=3D&quot;edc&quot;=
 type=3D&quot;edc:extendedDublincoreType&quot;/&gt;<br>
<br>
</font><font face=3D"Fixedsys">&lt;complexType=
 name=3D&quot;extendedDublincoreType&quot;&gt; <br>
&nbsp; &lt;complexContent&gt; <br>
&nbsp;&nbsp;&nbsp; &lt;extension base=3D&quot;dc:dublincoreType&quot;&gt;=
 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;sequence&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;element=
 name=3D&quot;shoesize&quot; </font><font face=3D"Fixedsys"=
 size=3D1>minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 type=3D&quot;string&quot;/</font><font face=3D"Fixedsys">&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;element=
 name=3D&quot;numfeet&quot; </font><font face=3D"Fixedsys"=
 size=3D1>minOccurs=3D&quot;0&quot; maxOccurs=3D&quot;unbounded&quot;=
 </font><font face=3D"Fixedsys">type=3D&quot;positiveInteger&quot;/&gt; <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/sequence&gt; <br>
&nbsp;&nbsp;&nbsp; &lt;/extension&gt; <br>
&nbsp; &lt;/complexContent&gt; <br>
&lt;/complexType&gt; <br>
<br>
</font>I'm thinking this would be defined in your namespace (here,=
 &quot;edc&quot;), but the dc namespace would need to be imported so that=
 the validation processor would be aware of the definition of=
 dublincoreType, so that your extension could be validated.<br>
<br>
If this were to work, you ought to be able to declare instance metadata of=
 type ExtendedDublinCoreType (in namespace &quot;edc&quot;), and have it be=
 successfully validated in schemas expecting straight up DublinCore.&nbsp;=
 The details of actually getting this to work, I leave to you, but this=
 seems to be their&nbsp; intent from a read through the XML-Schema=
 documentation :)<br>
<br>
The impact on harvesters of instance metadata exported using types derived=
 by extension is not yet clear to me...<br>
<br>
- Mick<br>
<br>
At 07:15 AM 1/31/01 -0500, you wrote:<br>
<blockquote type=3Dcite cite>Jeff, I think you've got the wrong approach=
 here.&nbsp; Having spent the last<br>
hour or so staring at the xml schema primer at<br>
<a href=3D"http://www.w3.org/TR/xmlschema-0"=
 eudora=3D"autourl">http://www.w3.org/TR/xmlschema-0</a> I found the=
 explanation on importing<br>
types at <a href=3D"http://www.w3.org/TR/xmlschema-0/#import"=
 eudora=3D"autourl">http://www.w3.org/TR/xmlschema-0/#import</a>. Using this=
 mechanism<br>
you can pull in types (elements) from another namespace.&nbsp; E.g., you<br>
could define a schema carlmeta.xsd with a target namespace<br>
<a href=3D"http://foo.org/carlmeta"=
 eudora=3D"autourl">http://foo.org/carlmeta</a> with an import of<br>
<a href=3D"http://purl.org/dc/elements/1.1"=
 eudora=3D"autourl">http://purl.org/dc/elements/1.1</a>. I quote the=
 primer:<br>
<br>
When schema components are imported from multiple namespaces, each<br>
namespace must be identified with a separate import element. The import<br>
elements themselves must appear as the first children of the schema<br>
element. Furthermore, each namespace must be associated with a prefix,<br>
using a standard namespace declaration, and that prefix is used to<br>
qualify references to any schema components belonging to that namespace.<br>
Finally, import elements optionally contain a schemaLocation attribute<br>
to help locate resources associated with the namespaces. <br>
<br>
Don't have time now to experiment with this but coming up with an<br>
example shouldn't be too hard.<br>
<br>
Carl<br>
<br>
&gt; -----Original Message-----<br>
&gt; From: Young,Jeff [<a href=3D"mailto:jyoung@oclc.org"=
 eudora=3D"autourl">mailto:jyoung@oclc.org</a>]<br>
&gt; Sent: Tuesday, January 30, 2001 4:58 PM<br>
&gt; To: 'lagoze@cs.cornell.edu'<br>
&gt; Subject: FW: [OAI-implementers] ListMetadataFormats problem<br>
&gt; <br>
&gt; <br>
&gt; Hi Carl,<br>
&gt; <br>
&gt; I don't think things are as simple as I'd hoped. I want to <br>
&gt; check with you<br>
&gt; first, though, before I stir up more confusion in the <br>
&gt; listserv. Apparently,<br>
&gt; the xsi:schemaLocation element expects namespaces to be <br>
&gt; paired with schema<br>
&gt; locations. If this is true, then a single schema won't work for the<br>
&gt; application I described below. Is there any reason that <br>
&gt; schemas can't be<br>
&gt; repeatable as well as namespaces in relation to metadata formats?<br>
&gt; <br>
&gt; Jeff<br>
&gt; <br>
&gt; &gt; -----Original Message-----<br>
&gt; &gt; From: Young,Jeff [<a href=3D"mailto:jyoung@oclc.org"=
 eudora=3D"autourl">mailto:jyoung@oclc.org</a>] <br>
&gt; &gt; Sent: Tuesday, January 30, 2001 4:01 PM<br>
&gt; &gt; To: 'OAI-implementers'<br>
&gt; &gt; Subject: [OAI-implementers] ListMetadataFormats problem<br>
&gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; I'm working on an OAI repository for a group that wants to <br>
&gt; &gt; define it's own<br>
&gt; &gt; metadata format. The trick is, this format will be a <br>
&gt; &gt; combination of Dublin<br>
&gt; &gt; Core elements and some new elements yet to be defined. The <br>
&gt; &gt; examples in the<br>
&gt; &gt; OAI specs, however, all assume that the metadata will consist <br>
&gt; &gt; of elements<br>
&gt; &gt; from a single namespace. I believe, for the most part, that <br>
&gt; &gt; the OAI spec<br>
&gt; &gt; doesn't preclude the use of multiple namespaces. For example, <br>
&gt; &gt; I imagine that<br>
&gt; &gt; the following XML fragment is likely to be acceptable:<br>
&gt; &gt; <br>
&gt; &gt; &lt;combined=
 xmlns:dc=3D&quot;http://purl.org/dc/elements/1.1/&quot;<br>
&gt; &gt; <x-tab>&nbsp;&nbsp;&nbsp;&nbsp;</x-tab>xmlns:myelems=3D&quot;<a=
 href=3D"http://www.myelems.com/"=
 eudora=3D"autourl">http://www.myelems.com/</a>&quot;<br>
&gt; &gt;=
 <x-tab>&nbsp;&nbsp;&nbsp;&nbsp;</x-tab>xmlns:xsi=3D&quot;...&quot;<br>
&gt; &gt; <x-tab>&nbsp;&nbsp;&nbsp;&nbsp;</x-tab>xsi:schemaLocation=3D&quot;=
<a=
 href=3D"http://purl.org/dc/elements/1.1/%3E%20%3E%20http://www.myelems.com/=
%3E%20%3E%20http://www.myelems.com/combined.xsd"=
 eudora=3D"autourl">http://purl.org/dc/elements/1.1/<br>
&gt; &gt;=
 <x-tab>&nbsp;&nbsp;&nbsp;&nbsp;</x-tab><x-tab>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;</x-tab>http://www.myelems.com/<br>
&gt; &gt;=
 <x-tab>&nbsp;&nbsp;&nbsp;&nbsp;</x-tab><x-tab>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;</x-tab>http://www.myelems.com/combined.xsd</a>&quot;&gt;=
<br>
&gt; &gt;&nbsp;&nbsp; &lt;dc:title&gt;This is the title&lt;/dc:title&gt;<br>
&gt; &gt;&nbsp;&nbsp;=
 &lt;myelems:shoesize&gt;12&lt;/myelems:shoesize&gt;<br>
&gt; &gt; &lt;/combined&gt;<br>
&gt; &gt; <br>
&gt; &gt; (As far as I can tell, specifying multiple namespaces in the<br>
&gt; &gt; xsi:schemaLocation attribute is perfectly valid.)<br>
&gt; &gt; <br>
&gt; &gt; Assuming no one sees any problems with this, I do think I see <br>
&gt; &gt; a problem with<br>
&gt; &gt; ListMetadataFormats.xsd. Now that multiple namespaces are <br>
&gt; &gt; involved, I expect<br>
&gt; &gt; that ListMetadataFormats will need to accommodate them with=
 multiple<br>
&gt; &gt; metadataNamespace elements. The XML schema for <br>
&gt; &gt; ListMetadataFormats, however,<br>
&gt; &gt; sets the maxOccurs for metadataNamespace to one. I suspect <br>
&gt; &gt; this is easily<br>
&gt; &gt; changed to unbounded.<br>
&gt; &gt; <br>
&gt; &gt; Hopefully, the problem is no more involved than this, but <br>
&gt; &gt; someone may want<br>
&gt; &gt; to check my assumptions.<br>
&gt; &gt; <br>
&gt; &gt; Thanks,<br>
&gt; &gt; Jeff<br>
&gt; &gt; <br>
&gt; &gt; ---<br>
&gt; &gt; Jeffrey A. Young<br>
&gt; &gt; Senior Consulting Systems Analyst<br>
&gt; &gt; Office of Research, Mail Code 710<br>
&gt; &gt; OCLC Online Computer Library Center, Inc.<br>
&gt; &gt; 6565 Frantz Road<br>
&gt; &gt; Dublin, OH&nbsp;&nbsp; 43017-3395<br>
&gt; &gt; <a href=3D"http://www.oclc.org/"=
 eudora=3D"autourl">www.oclc.org</a><br>
&gt; &gt; <br>
&gt; &gt;=
 Voice:<x-tab>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</x-tab>614-764-4342<br>
&gt; &gt;=
 Fax:<x-tab>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</x-tab><x-tab>&=
nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</x-tab>614-764-2344<br>
&gt; &gt;=
 Email:<x-tab>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</x-tab>jyoung@oclc.org<br=
>
&gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; _______________________________________________<br>
&gt; &gt; OAI-implementers mailing list<br>
&gt; &gt; OAI-implementers@oaisrv.nsdl.cornell.edu<br>
&gt; &gt; <a=
 href=3D"http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers"=
 eudora=3D"autourl">http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-impl=
ementers</a><br>
&gt; &gt; <br>
&gt; <br>
_______________________________________________<br>
OAI-implementers mailing list<br>
OAI-implementers@oaisrv.nsdl.cornell.edu<br>
<a href=3D"http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers"=
 eudora=3D"autourl">http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-impl=
ementers</a> </blockquote><br>
<div>=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D</div>
<div>Mick Bass,&nbsp;&nbsp; Sloan MOT 2000</div>
<div>R&amp;D Project Manager</div>
<div>Hewlett-Packard Company</div>
<div>Cambridge, MA</div>
<br>
<div>617.253.6617 office</div>
<div>617.899.3938 mobile</div>
<div>617.452.3000 fax</div>
<div>617.627.9694 residence</div>
<br>
<div>bass@alum.mit.edu</div>
<div>mick_bass@hp.com</div>
<div>=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D</div>
</html>

--=====================_149350594==_.ALT--


