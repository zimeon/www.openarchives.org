From jozef@nl.adlibsoft.com  Tue May  6 08:59:52 2003
From: jozef@nl.adlibsoft.com (Jozef Kruger)
Date: Tue, 6 May 2003 09:59:52 +0200
Subject: [OAI-implementers] Namespaces in elements
Message-ID: <4E232B133AC9F04BB194C2AE2024EF9280E49D@saturnus.nl.adlibsoft.com>

Hi there,

> <xsl:template match="/">
>    <xsl:element name="oai_dc:dc">
>      <xsl:apply-templates/>
>    </xsl:element>
> </xsl:template>
Thanks for the response, I tried it but it still gives the same results.
Apparantly it's not that easy to mislead msxml.. Using another xsl
processor is out of the question, since msxml is incorporated into our
complete system.

Tom, if you could find the stylesheet that did the job, that'd be great!

Thanks,
Jozef Kruger

From deridder@cs.utk.edu  Fri May  9 18:13:10 2003
From: deridder@cs.utk.edu (deridder)
Date: Fri, 9 May 2003 13:13:10 -0400 (EDT)
Subject: [OAI-implementers] superscripts, subscripts, Greek alphabet
Message-ID: <Pine.GSO.4.51.0305091312250.18613@cetus20.cs.utk.edu>

Umm, how are you folks dealing with these?  Anything
standardized yet?  If so, please point me in the right
direction.
  thanks!

    --j.



  Jody DeRidder
  IT Administrator II
  Digital Library Center
  648A John C. Hodges Library
  University of Tennessee
  Knoxville, TN 37996

  Phone: (865) 974-4796
  Email: deridder@aztec.lib.utk.edu


From amahoney@perseus.tufts.edu  Fri May  9 18:37:29 2003
From: amahoney@perseus.tufts.edu (Anne Mahoney)
Date: Fri, 09 May 2003 13:37:29 -0400
Subject: [OAI-implementers] superscripts, subscripts, Greek alphabet
References: <Pine.GSO.4.51.0305091312250.18613@cetus20.cs.utk.edu>
Message-ID: <3EBBE759.9F171B21@perseus.tufts.edu>

For Greek, although the "right" answer is Unicode, we have for many
years used (a subset of) Beta-code, developed by the Thesaurus Linguae
Graecae project.  It has the great advantage of using only low-ASCII
characters (better yet, characters that also exist in EBCDIC), so
there's no need for Unicode-aware editors or the like.  We've used it
since long before Unicode existed, for our texts as well as for any
relevant meta-data (titles, section titles). 

Documentation at http://www.perseus.tufts.edu/Help/fonthelp.html#beta
(easy subset) and at http://www.tlg.uci.edu/BetaCode.html (whole
specification).

--Anne Mahoney
Perseus Project

From francois@fsconsult.com  Fri May  9 20:23:55 2003
From: francois@fsconsult.com (Fran=?ISO-8859-1?B?5w==?=ois Schiettecatte)
Date: Fri, 09 May 2003 15:23:55 -0400
Subject: [OAI-implementers] superscripts, subscripts, Greek alphabet
In-Reply-To: <Pine.GSO.4.51.0305091312250.18613@cetus20.cs.utk.edu>
Message-ID: <BAE1788B.AAE9%francois@fsconsult.com>

Jody

You ask an interesting question.

My answer is biased because I have been delving into this for the past
couple of weeks for another project, but I would recommend you use unicode.

The reasons for this are multifold:

- It is the way to go :)

- It is the right thing to do :)

- And there are a lot of tools out there which allow to you work effectively
with it, as well as a lot of documentation which explains it all.

If you wish I can send you a list of links to resources, which I would also
be happy to post to the list for everyone.

One thing I will note here is that my OAI search interface, my.OAI, is going
to go Unicode (utf-8) in the next couple of weeks. The search interface as
well as all the text will be Unicode based, while the search engine will
support iso-8859-1, so no Chinese searching yet, but most European languages
will be supported, so a search for 'francois' will yield different results
from a search for 'françois'.

On 5/9/03 1:13 PM, "deridder" <deridder@cs.utk.edu> wrote:

> 
> Umm, how are you folks dealing with these?  Anything
> standardized yet?  If so, please point me in the right
> direction.
> thanks!
> 
>   --j.
> 
> 
> 
> Jody DeRidder
> IT Administrator II
> Digital Library Center
> 648A John C. Hodges Library
> University of Tennessee
> Knoxville, TN 37996
> 
> Phone: (865) 974-4796
> Email: deridder@aztec.lib.utk.edu
> 

Best regards

François


========================================================================
François Schiettecatte                               FS Consulting, Inc.
Phone : (978) 594-5089                  35 Washington Square North, # 2,
Cell  : (617) 909-2504                                  Salem, MA, 01970
Email : francois@fsconsult.com           URL : http://www.fsconsult.com/
========================================================================



From francois@fsconsult.com  Fri May  9 21:43:16 2003
From: francois@fsconsult.com (Fran=?ISO-8859-1?B?5w==?=ois Schiettecatte)
Date: Fri, 09 May 2003 16:43:16 -0400
Subject: [OAI-implementers] superscripts, subscripts, Greek alphabet
In-Reply-To: <3EBBE759.9F171B21@perseus.tufts.edu>
Message-ID: <BAE18B24.AAF5%francois@fsconsult.com>

Of course, here it is:

On 5/9/03 4:24 PM, "Steve Sarapata" <ssarapat@enc.org> wrote:
> Francois,
> 
> Please post the links list.
> 
> Thanks,
> Steve
> 
> 

Very good background on Unicode, character sets and encoding, this should be
your first destination:

    http://czyborra.com/


UTF-8 and Unicode FAQ for Unix/Linux:

    http://www.cl.cam.ac.uk/~mgk25/unicode.html


UTF-8 and Unicode FAQ for Perl:

    http://rf.net/~james/perli18n.html


Character set conversion tool:

    http://www.gnu.org/software/libiconv/


Unicode FAQ:

    http://www.unicode.org/unicode/faq/
    http://www.unicode.org/faq/unicode_web.html


Character set handling in HTML form submission:

    http://ppewww.ph.gla.ac.uk/~flavell/charset/form-i18n.html

If you are going to work in Perl on Unix/Linux, you will also need to look
at the following documentation:

    perldoc Encode

    man perlunicode
    
    man perluniintro

    man iconv

The unicode section in Programming Perl 3rd Edition has some useful stuff
too.




From hussein@cs.uct.ac.za  Fri May  9 23:24:57 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Sat, 10 May 2003 00:24:57 +0200
Subject: [OAI-implementers] superscripts, subscripts, Greek alphabet
References: <Pine.GSO.4.51.0305091312250.18613@cetus20.cs.utk.edu>
Message-ID: <3EBC2AB9.2050207@cs.uct.ac.za>

hi Jody

i wonder if your data is being input/created or is coming from an 
established source. if the latter, when you refer to "subscripts and 
superscripts", i also think unicode but the explicit subscript reminds 
me of how MARC handles these things.

if you are in fact using MARC, the late Robert France from the VT camp 
did a study of the problems inherent in converting MARC to Unicode ... 
while his discussion is dated in OAI terms it is still relevant from a 
MARC perspective and there are even some code fragments and conversion 
tables at:
   http://www.dlib.vt.edu/projects/OAI/marcxml/marcxml.html

if you're starting fresh - use unicode ... there is now enough support 
for it in terms of tools and documentation (as François has listed) and 
it is OAI-friendly. for the greatest portability, i usually use 7-bit 
ascii, with numeric entities for the rest of the codes (given that my 
data is largely 7-bit ascii this doesnt adversly affect performance). 
this way i get full unicode capabilities without breaking tools that 
dont support utf-8/16 or dont support it fully. i have used this 
approach for databases, metadata harvesting, service providers and user 
interfaces and it appears to work reasonably well.

ttfn,
----hussein


deridder wrote:
> Umm, how are you folks dealing with these?  Anything
> standardized yet?  If so, please point me in the right
> direction.
>   thanks!
> 
>     --j.
> 
> 
> 
>   Jody DeRidder
>   IT Administrator II
>   Digital Library Center
>   648A John C. Hodges Library
>   University of Tennessee
>   Knoxville, TN 37996
> 
>   Phone: (865) 974-4796
>   Email: deridder@aztec.lib.utk.edu
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================



From francois@fsconsult.com  Sat May 10 13:01:07 2003
From: francois@fsconsult.com (Fran=?ISO-8859-1?B?5w==?=ois Schiettecatte)
Date: Sat, 10 May 2003 08:01:07 -0400
Subject: [OAI-implementers] Trying to gauge interest on two features
Message-ID: <BAE26243.AB3C%francois@fsconsult.com>

Hi

I would like to to gauge interest in two features I am thinking of adding to
my.OAI ( http://www.myoai.com/ ). For those who don¹t know, my.OAI is a
search engine and interface to a number of OAI data sources.

The two features are as follows:

1) Providing a way for people to get the query results as an XML file in RSS
format and, by extension, allowing people to subscribe to a search as a RSS
feed. 

For those who are mystified by this, let me explain. RSS is a very simple
XML based data format which allows organizations to disseminate information
in a standardized fashion. This format is used by lots of news organizations
publish news feeds, as well as weblogs to publish their current articles.
There are a number of RSS feed readers, as well as webloging software,
available which allows you to subscribe to these feeds. There are really
desktop aggregators of RSS feeds.

I have been working on a weblog search engine called rssSearch (
http://www.rss-search.com/ ) which allows a user to create an RSS feed from
a search, so you can subscribe to that search as a feed. As new data is
added and indexed, it will be picked up by your RSS feed reader. So you
could get updated articles from arXiv as they are published and indexed in
my.OAI.

2) Providing a SOAP search interface to the search engine. This is an XML
based protocol for exchanging information between clients and servers. For
example Google and Amazon provide SOAP interfaces to their systems.


I would be really grateful for any feedback, questions, ideas, etc...

Cheers

François


========================================================================
François Schiettecatte                               FS Consulting, Inc.
Phone : (978) 594-5089                  35 Washington Square North, # 2,
Cell  : (617) 909-2504                                  Salem, MA, 01970
Email : francois@fsconsult.com           URL : http://www.fsconsult.com/
========================================================================



From a.powell@ukoln.ac.uk  Sat May 10 18:03:42 2003
From: a.powell@ukoln.ac.uk (Andy Powell)
Date: Sat, 10 May 2003 18:03:42 +0100 (GMT Standard Time)
Subject: [OAI-implementers] Trying to gauge interest on two features
In-Reply-To: <BAE26243.AB3C%francois@fsconsult.com>
References: <BAE26243.AB3C%francois@fsconsult.com>
Message-ID: <Pine.WNT.4.53.0305101801170.2332@jack2>

On Sat, 10 May 2003, Fran[ISO-8859-1] çois Schiettecatte wrote:

> 1) Providing a way for people to get the query results as an XML file in RSS
> format and, by extension, allowing people to subscribe to a search as a RSS
> feed.
>
> 2) Providing a SOAP search interface to the search engine. This is an XML
> based protocol for exchanging information between clients and servers. For
> example Google and Amazon provide SOAP interfaces to their systems.

Both ideas sounds good to me.

I'd look at using SRW as your SOAP interface...

  http://www.loc.gov/z3950/agency/zing/srw/

Andy
--
Distributed Systems, UKOLN, University of Bath, Bath, BA2 7AY, UK
http://www.ukoln.ac.uk/ukoln/staff/a.powell       +44 1225 383933
Resource Discovery Network http://www.rdn.ac.uk/

From ccchou@iis.sinica.edu.tw  Sun May 11 04:02:19 2003
From: ccchou@iis.sinica.edu.tw (JuJu)
Date: Sun, 11 May 2003 11:02:19 +0800
Subject: [OAI-implementers] Please remove me from the mailing list...
In-Reply-To: <Pine.WNT.4.53.0305101801170.2332@jack2>
Message-ID: <000001c31769$d9f4f460$ba01a8c0@iis.sinica.edu.tw>

Dear Sir, 

Please remove me from the mailing list. 
Thank you and have a nice day~

CCChou


From sandro.zic@zzoss.com  Sun May 11 13:28:21 2003
From: sandro.zic@zzoss.com (Sandro Zic)
Date: Sun, 11 May 2003 14:28:21 +0200
Subject: [OAI-implementers] Trying to gauge interest on two features
In-Reply-To: <Pine.WNT.4.53.0305101801170.2332@jack2>
References: <BAE26243.AB3C%francois@fsconsult.com> <Pine.WNT.4.53.0305101801170.2332@jack2>
Message-ID: <3EBE41E5.80803@zzoss.com>

On Saturday 10 May 2003 19:03, Andy Powell wrote:
> > 2) Providing a SOAP search interface to the search engine. This is an XML
> > based protocol for exchanging information between clients and servers.
> > For example Google and Amazon provide SOAP interfaces to their systems.
>
> I'd look at using SRW as your SOAP interface...
>
>   http://www.loc.gov/z3950/agency/zing/srw/

Why not additionally mimic the OAI interface on the SOAP/WSDL level for
harvesting purposes? I.e. the SOAP object could provide methods for RPC 
like
getRecord(), getIdentifiers() with the respective arguments (identifier,
until, ...) passed to them. Calling the remote procedures would return the
respective OAI result.

Has a kind of SOAP-OAI already been implemented somewhere or discussed 
on this
list? In fact, the OAI header corresponds to the SOAP envelope paradigm, 
both
use XML for data transport. SOAP does not only rely on HTTP, but would also
allow for asynchronous harvesting via SMTP.

Sandro


From herbertv@lanl.gov  Sun May 11 15:46:17 2003
From: herbertv@lanl.gov (herbert van de sompel)
Date: Sun, 11 May 2003 08:46:17 -0600
Subject: [OAI-implementers] Trying to gauge interest on two features
References: <BAE26243.AB3C%francois@fsconsult.com> <Pine.WNT.4.53.0305101801170.2332@jack2> <3EBE41E5.80803@zzoss.com>
Message-ID: <3EBE6239.C6971274@lanl.gov>

Sandro Zic wrote:

> On Saturday 10 May 2003 19:03, Andy Powell wrote:
> > > 2) Providing a SOAP search interface to the search engine. This is an XML
> > > based protocol for exchanging information between clients and servers.
> > > For example Google and Amazon provide SOAP interfaces to their systems.
> >
> > I'd look at using SRW as your SOAP interface...
> >
> >   http://www.loc.gov/z3950/agency/zing/srw/
>
> Why not additionally mimic the OAI interface on the SOAP/WSDL level for
> harvesting purposes? I.e. the SOAP object could provide methods for RPC
> like
> getRecord(), getIdentifiers() with the respective arguments (identifier,
> until, ...) passed to them. Calling the remote procedures would return the
> respective OAI result.
>
> Has a kind of SOAP-OAI already been implemented somewhere or discussed
> on this
> list? In fact, the OAI header corresponds to the SOAP envelope paradigm,
> both
> use XML for data transport. SOAP does not only rely on HTTP, but would also
> allow for asynchronous harvesting via SMTP.
>
>

When working on version 2.0 of the OAI-PMH we have decided to stick to the HTTP
GET approach used in versions 1.x, but have made sure that the protocol responses
would be SOAP-ready.  I know some OAI-implementers have done SOAP-related
experiments, and I guess they will reply to the list to detail such work.  With
the OAI, we plan to create a spec for a SOAP version of the OAI-PMH, but so far
no concrete schedule has been set with this respect.  However, I expect/hope that
this work would start in the course of 2003.

greetings

herbert van de sompel




> Sandro
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

--
Herbert Van de Sompel
digital library research & prototyping
Los Alamos National Laboratory - Research Library
+ 1 (505) 667 1267 / http://lib-www.lanl.gov/~herbertv/

"your argument is absolutely logical.  but people will be confused"
anonymous participant in OpenURL Standardization Committee



From sandro.zic@zzoss.com  Sun May 11 16:26:08 2003
From: sandro.zic@zzoss.com (Sandro Zic)
Date: Sun, 11 May 2003 17:26:08 +0200
Subject: [OAI-implementers] Trying to gauge interest on two features
In-Reply-To: <3EBE6239.C6971274@lanl.gov>
References: <BAE26243.AB3C%francois@fsconsult.com> <Pine.WNT.4.53.0305101801170.2332@jack2> <3EBE41E5.80803@zzoss.com> <3EBE6239.C6971274@lanl.gov>
Message-ID: <3EBE6B90.2050608@zzoss.com>

herbert van de sompel wrote:
> Sandro Zic wrote:
>>Has a kind of SOAP-OAI already been implemented somewhere or discussed
>>on this
>>list?
> 
> When working on version 2.0 of the OAI-PMH we have decided to stick to the HTTP
> GET approach used in versions 1.x, but have made sure that the protocol responses
> would be SOAP-ready.  I know some OAI-implementers have done SOAP-related
> experiments, and I guess they will reply to the list to detail such work.  With
> the OAI, we plan to create a spec for a SOAP version of the OAI-PMH, but so far
> no concrete schedule has been set with this respect.  However, I expect/hope that
> this work would start in the course of 2003.

Actually, I am a REST advocate so I can happily live with the OAI-PMH 
approach ;) Nevertheless, SOAP and related technologies offer a broader 
variety of applicances, especially with WSDL, support of various 
protocols (HTTP, SMTP, TCP/IP, etc.), SOAP attachments, and so on. 
Hence, SOAP is better suited if you implement OAI related harvesting 
technologies in heterogenous or business environments, who very often 
follow the Web Services Hype.

I would very much be interested in best practices to implement a SOAP 
wrapper to an OAI data provider. For example:

How to pass the OAI arguments or how should the method signature look 
like? Do you prefer passing an associative array containing all 
arguments with the OAI arguments as the keys or each argument at a 
certain place in the method signature?

What does a remote procedure call return? Simply the complete OAI 
response as a string? A struct with the OAI header split to several 
values and e.g. the metadata from a getRecord() call in another 
parameter of the struct?

How about integrating OAI error responses and SOAP faults?

Thanks for any feedback,
Sandro


From zubair@cs.odu.edu  Sun May 11 17:08:55 2003
From: zubair@cs.odu.edu (zubair@cs.odu.edu)
Date: Sun, 11 May 2003 12:08:55 -0400
Subject: [OAI-implementers] Trying to gauge interest on two features
Message-ID: <OF85972566.D4CF473A-ON85256D23.005897CC@cs.odu.edu>

One of my students implemented a OAI-SOAP gateway. Here is the URL if you
are interested in looking at that.

http://www.cs.odu.edu/~rl/OAI_SOAP/gateway.html


Zubair




|--------+---------------------------------------------->
|        |          Sandro Zic <sandro.zic@zzoss.com>   |
|        |          Sent by:                            |
|        |          oai-implementers-admin@oaisrv.nsdl.c|
|        |          ornell.edu                          |
|        |                                              |
|        |                                              |
|        |          05/11/2003 11:26 AM                 |
|        |                                              |
|--------+---------------------------------------------->
  >---------------------------------------------------------------------------------------------------|
  |                                                                                                   |
  |      To:     herbert van de sompel <herbertv@lanl.gov>                                            |
  |      cc:     OAI-implementers@oaisrv.nsdl.cornell.edu                                             |
  |      Subject:     Re: [OAI-implementers] Trying to gauge interest on two features                 |
  >---------------------------------------------------------------------------------------------------|




herbert van de sompel wrote:
> Sandro Zic wrote:
>>Has a kind of SOAP-OAI already been implemented somewhere or discussed
>>on this
>>list?
>
> When working on version 2.0 of the OAI-PMH we have decided to stick to
the HTTP
> GET approach used in versions 1.x, but have made sure that the protocol
responses
> would be SOAP-ready.  I know some OAI-implementers have done SOAP-related
> experiments, and I guess they will reply to the list to detail such work.
With
> the OAI, we plan to create a spec for a SOAP version of the OAI-PMH, but
so far
> no concrete schedule has been set with this respect.  However, I
expect/hope that
> this work would start in the course of 2003.

Actually, I am a REST advocate so I can happily live with the OAI-PMH
approach ;) Nevertheless, SOAP and related technologies offer a broader
variety of applicances, especially with WSDL, support of various
protocols (HTTP, SMTP, TCP/IP, etc.), SOAP attachments, and so on.
Hence, SOAP is better suited if you implement OAI related harvesting
technologies in heterogenous or business environments, who very often
follow the Web Services Hype.

I would very much be interested in best practices to implement a SOAP
wrapper to an OAI data provider. For example:

How to pass the OAI arguments or how should the method signature look
like? Do you prefer passing an associative array containing all
arguments with the OAI arguments as the keys or each argument at a
certain place in the method signature?

What does a remote procedure call return? Simply the complete OAI
response as a string? A struct with the OAI header split to several
values and e.g. the metadata from a getRecord() call in another
parameter of the struct?

How about integrating OAI error responses and SOAP faults?

Thanks for any feedback,
Sandro

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers






From hussein@cs.uct.ac.za  Sun May 11 19:50:09 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Sun, 11 May 2003 20:50:09 +0200
Subject: [OAI-implementers] Trying to gauge interest on two features
References: <OF85972566.D4CF473A-ON85256D23.005897CC@cs.odu.edu>
Message-ID: <3EBE9B61.9020807@cs.uct.ac.za>

hi

i currently also have a group of students working on a comprehensive 
SOAP-PMH case study, including development of a framework for data 
providers, service providers and testing tools (as well as a preliminary 
"rewrite" of the protocol spec). the point of our exercise is to 
illustrate the benefits of SOAP and address every conceivable issue that 
may arise in moving from PMH to SOAP-PMH (which can benefit not just 
OAI-PMH, but also other "proprietary" RPC mechanisms that wish to move 
to SOAP).

in due course (beginning of Oct) their final report will be submitted to 
the OAI for consideration.

as a preliminary answer to some of your questions, from our perspective:
- in the OAI tradition, we are using XML Schema to define SOAP requests 
and responses instead of the using the explicit type mechanism
- we are wrapping wherever possible, so responses pretty much embed 
existing OAI responses
- we are still looking into SOAP Faults vs OAI errors

fwiw, if anyone has not seen the announcement on w3.org, SOAP v1.2 just 
became a "proposed recommendation" ... just when i thought i was 
beginning to understand the old version :)

ttfn,
----hussein


zubair@cs.odu.edu wrote:
> One of my students implemented a OAI-SOAP gateway. Here is the URL if you
> are interested in looking at that.
> 
> http://www.cs.odu.edu/~rl/OAI_SOAP/gateway.html
> 
> 
> Zubair
> 
> 
> 
> 
> |--------+---------------------------------------------->
> |        |          Sandro Zic <sandro.zic@zzoss.com>   |
> |        |          Sent by:                            |
> |        |          oai-implementers-admin@oaisrv.nsdl.c|
> |        |          ornell.edu                          |
> |        |                                              |
> |        |                                              |
> |        |          05/11/2003 11:26 AM                 |
> |        |                                              |
> |--------+---------------------------------------------->
>   >---------------------------------------------------------------------------------------------------|
>   |                                                                                                   |
>   |      To:     herbert van de sompel <herbertv@lanl.gov>                                            |
>   |      cc:     OAI-implementers@oaisrv.nsdl.cornell.edu                                             |
>   |      Subject:     Re: [OAI-implementers] Trying to gauge interest on two features                 |
>   >---------------------------------------------------------------------------------------------------|
> 
> 
> 
> 
> herbert van de sompel wrote:
> 
>>Sandro Zic wrote:
>>
>>>Has a kind of SOAP-OAI already been implemented somewhere or discussed
>>>on this
>>>list?
>>
>>When working on version 2.0 of the OAI-PMH we have decided to stick to
> 
> the HTTP
> 
>>GET approach used in versions 1.x, but have made sure that the protocol
> 
> responses
> 
>>would be SOAP-ready.  I know some OAI-implementers have done SOAP-related
>>experiments, and I guess they will reply to the list to detail such work.
> 
> With
> 
>>the OAI, we plan to create a spec for a SOAP version of the OAI-PMH, but
> 
> so far
> 
>>no concrete schedule has been set with this respect.  However, I
> 
> expect/hope that
> 
>>this work would start in the course of 2003.
> 
> 
> Actually, I am a REST advocate so I can happily live with the OAI-PMH
> approach ;) Nevertheless, SOAP and related technologies offer a broader
> variety of applicances, especially with WSDL, support of various
> protocols (HTTP, SMTP, TCP/IP, etc.), SOAP attachments, and so on.
> Hence, SOAP is better suited if you implement OAI related harvesting
> technologies in heterogenous or business environments, who very often
> follow the Web Services Hype.
> 
> I would very much be interested in best practices to implement a SOAP
> wrapper to an OAI data provider. For example:
> 
> How to pass the OAI arguments or how should the method signature look
> like? Do you prefer passing an associative array containing all
> arguments with the OAI arguments as the keys or each argument at a
> certain place in the method signature?
> 
> What does a remote procedure call return? Simply the complete OAI
> response as a string? A struct with the OAI header split to several
> values and e.g. the metadata from a getRecord() call in another
> parameter of the struct?
> 
> How about integrating OAI error responses and SOAP faults?
> 
> Thanks for any feedback,
> Sandro
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 
> 
> 
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================



From jakob.voss@nichtich.de  Fri May  9 20:44:47 2003
From: jakob.voss@nichtich.de (Jakob Voss)
Date: Fri, 09 May 2003 21:44:47 +0200
Subject: [OAI-implementers] hierarchical documents
Message-ID: <3EBC052F.1090602@nichtich.de>

Hi!

I am relatively new to OAI and going to set up a simple Data Provider
for different kind of publications. Many publications consist of
different parts in different file formats and publication types but
I do not know how to deal with them. For instance:

Title: All about nothing
Author: Mr. Smith
Files:
   Slides
     PowerPoint Source: all-about-nothing.slides.ppt
     PDF Output:        all-about-nothing.slides.pdf
   Paper
     OpenOffice Source: all-about-nothing.paper.ooo
     RTF Exchange:      all-about-nothing.paper.rtf
     PDF Output:        all-about-nothing.paper.pdf

I thought about several possibilities:
- All files are one document with several dc:indentifier
   for each file (information about type and format is lost)
- Each file is one document (much duplication)
- Create sets for each publication and type (more sets than
   publications)

How do you store information about hierarchical
document-relationship? For instance an article (with several
versions, types and formats) can be part of a book that
is part of a series and so on.

Thanks for your comments!

Jakob Voß


From sandro.zic@zzoss.com  Sun May 11 11:16:40 2003
From: sandro.zic@zzoss.com (Sandro Zic)
Date: Sun, 11 May 2003 12:16:40 +0200
Subject: [OAI-implementers] Trying to gauge interest on two features
In-Reply-To: <Pine.WNT.4.53.0305101801170.2332@jack2>
References: <BAE26243.AB3C%francois@fsconsult.com> <Pine.WNT.4.53.0305101801170.2332@jack2>
Message-ID: <200305111216.40327.sandro.zic@zzoss.com>

On Saturday 10 May 2003 19:03, Andy Powell wrote:
> > 2) Providing a SOAP search interface to the search engine. This is an XML
> > based protocol for exchanging information between clients and servers.
> > For example Google and Amazon provide SOAP interfaces to their systems.
>
> I'd look at using SRW as your SOAP interface...
>
>   http://www.loc.gov/z3950/agency/zing/srw/

Why not additionally mimic the OAI interface on the SOAP/WSDL level for 
harvesting purposes? I.e. the SOAP object could provide methods for RPC like 
getRecord(), getIdentifiers() with the respective arguments (identifier, 
until, ...) passed to them. Calling the remote procedures would return the 
respective OAI result.

Has a kind of SOAP-OAI already been implemented somewhere or discussed on this 
list? In fact, the OAI header corresponds to the SOAP envelope paradigm, both 
use XML for data transport. SOAP does not only rely on HTTP, but would also 
allow for asynchronous harvesting via SMTP.

Sandro

From jwhit@melbpc.org.au  Mon May 12 06:29:24 2003
From: jwhit@melbpc.org.au (Jan Whitaker)
Date: Mon, 12 May 2003 15:29:24 +1000
Subject: [OAI-implementers] OAI and SCORM/IMS/other functionality
Message-ID: <5.0.2.1.0.20030512152748.02076460@popa.melbpc.org.au>

Hello from Melbourne Australia.  I'm working on some research for the
vocational education community in Australia about emerging 'standards' and
have nominated OAI as one to consider.  I know of several Australian
educational organisations that are testing and implementing OAI protocols
for metadata exposure, e.g. EdNA Online, AMOL, Univ of Melbourne, ANU, etc.
 >
My question to you is what if any discussions are happening between the OAI
executive and those involved at ADL developing the SCORM standard, which we
are also exploring seriously in our research?  IMS, DC and other learning
object schemas are being incorporated in the SCORM standard for sharable
content object management, but haven't seen OAI and SCORM addressed in any
papers together.
 >
Thanks for an information you can provide in this regard.

Cheers,
Jan

JLWhitaker Associates
Melbourne, Victoria, Australia
jwhit@melbpc.org.au  --  http://member.melbpc.org.au/~jwhit/whitentr.htm



From hussein@cs.uct.ac.za  Mon May 12 09:38:28 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Mon, 12 May 2003 10:38:28 +0200
Subject: [OAI-implementers] Trying to gauge interest on two features
References: <BAE26243.AB3C%francois@fsconsult.com> <Pine.WNT.4.53.0305101801170.2332@jack2> <200305111216.40327.sandro.zic@zzoss.com>
Message-ID: <3EBF5D84.3000300@cs.uct.ac.za>

hi Sandro

i presume that by now you have seen my other message to the implementers 
list about our current work on SOAP and OAI here at UCT. if you have any 
questions (or if you are interested in collaborating wrt our 
experiments), please feel free to contact me off the list.

but, as a summary, and because this went out to oai-general as well,
- yes, there are lots of us interested in SOAP and PMH
- the last OAI technical committee explicitly designed PMHv2 for 
possible SOAP support in the future, so it is no accident that the 
paradigm matches :)
- there have been experiments with SOAP and PMH going back quite some 
time, but there hasn't been enough solid evidence that SOAP will benefit 
the PMH or that SOAP is a stable standard that's here to stay (case in 
point: a new proposed recommendation was released last wednesday!)
- i do believe OAI will consider a SOAP version soon, especially as the 
W3C looks like it is finally going to endorse a SOAP standard soon and 
not have us all rely on a "technical note" as the existing "standard" is 
denoted

however, until we have a standard SOAP-PMH binding, i think it is wise 
to contain our enthusiasm :) and stick to controlled experiments so we 
prevent the scenario where there are various different flavours of SOAP 
bindings being exposed publicly. i am sure that once the OAI begins work 
on this issue, appropriate calls for participation and announcements 
will be made on the OAI mailings lists.

ttfn,
----hussein


Sandro Zic wrote:
> On Saturday 10 May 2003 19:03, Andy Powell wrote:
> 
>>>2) Providing a SOAP search interface to the search engine. This is an XML
>>>based protocol for exchanging information between clients and servers.
>>>For example Google and Amazon provide SOAP interfaces to their systems.
>>
>>I'd look at using SRW as your SOAP interface...
>>
>>  http://www.loc.gov/z3950/agency/zing/srw/
> 
> 
> Why not additionally mimic the OAI interface on the SOAP/WSDL level for 
> harvesting purposes? I.e. the SOAP object could provide methods for RPC like 
> getRecord(), getIdentifiers() with the respective arguments (identifier, 
> until, ...) passed to them. Calling the remote procedures would return the 
> respective OAI result.
> 
> Has a kind of SOAP-OAI already been implemented somewhere or discussed on this 
> list? In fact, the OAI header corresponds to the SOAP envelope paradigm, both 
> use XML for data transport. SOAP does not only rely on HTTP, but would also 
> allow for asynchronous harvesting via SMTP.
> 
> Sandro
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================


From hussein@cs.uct.ac.za  Mon May 12 10:41:42 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Mon, 12 May 2003 11:41:42 +0200
Subject: [OAI-implementers] hierarchical documents
References: <3EBC052F.1090602@nichtich.de>
Message-ID: <3EBF6C56.9010104@cs.uct.ac.za>

hi

i haven't seen a "nice" solution to the problem of addressing hierarchy, 
views and versions all at once. but if we consider the problems 
independently, there are a few solutions that you can look at for ideas.

my favorite example of hierarchy-encoding is the IMS Content Packaging 
specification, which makes embedded use of the IMS Metadata 
Specification (see www.imsglobal.org for details). while the specs show 
how to encapsulate content hierarchically, alas i don't know of anyone 
actively exposing such packaged content through OAI-PMH - maybe someone 
else will comment on this.

for views (such as the slide formats in your example), you could use a 
metadata format that allowed for a list of simple objects. the CSTC 
project that i used to work on did this with its native metadata format. 
go to the following OAI record to see what we did:
http://www.cstc.org/cgi-bin/OAI/CSTC.pl?verb=GetRecord&metadataPrefix=oai_cstc&identifier=oai:CSTC:4
(of course, here the issue is: does a list denote parts or options? if 
you want to be explicit, you should look at the IMS model.)
if you look at the same record in DC you will see that we used a "cover 
page" to bind together the various files to form a single resource.

lastly, for versions, the OAI has a provenance container that allows you 
to specify the relationship of a metadata record to an older version, 
from a harvesting perspective. while it doesn't directly apply to 
versions of the resource, the basic idea is similar ...

so, my take on your example is:
- the paper and slides could have separate identifiers as the resources 
are themselves different (or use cover pages to hold them together)
- you can use "relation" tags (in DC or IMS-MS) to connect them if they 
are separate
- instead of using metadata formats (which differentiate among views of 
the metadata) or sets (which differentiate among categorisations of the 
resource/metadata), you should use a metadata format with the inherent 
ability to differentiate among views of the same item

the book example is more complicated and i haven't seen a solution i 
like yet :) however, the principle i would apply is:
- expose the most useful granularity of data i.e. if a book is most 
often used as a single unit, expose it as such ... and similarly for 
separate chapters.

hope at least some of this makes sense :)

ttfn,
----hussein


Jakob Voss wrote:
> Hi!
> 
> I am relatively new to OAI and going to set up a simple Data Provider
> for different kind of publications. Many publications consist of
> different parts in different file formats and publication types but
> I do not know how to deal with them. For instance:
> 
> Title: All about nothing
> Author: Mr. Smith
> Files:
>   Slides
>     PowerPoint Source: all-about-nothing.slides.ppt
>     PDF Output:        all-about-nothing.slides.pdf
>   Paper
>     OpenOffice Source: all-about-nothing.paper.ooo
>     RTF Exchange:      all-about-nothing.paper.rtf
>     PDF Output:        all-about-nothing.paper.pdf
> 
> I thought about several possibilities:
> - All files are one document with several dc:indentifier
>   for each file (information about type and format is lost)
> - Each file is one document (much duplication)
> - Create sets for each publication and type (more sets than
>   publications)
> 
> How do you store information about hierarchical
> document-relationship? For instance an article (with several
> versions, types and formats) can be part of a book that
> is part of a series and so on.
> 
> Thanks for your comments!
> 
> Jakob Voß
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================


From zubair@cs.odu.edu  Mon May 12 12:55:22 2003
From: zubair@cs.odu.edu (zubair@cs.odu.edu)
Date: Mon, 12 May 2003 07:55:22 -0400
Subject: [OAI-implementers] hierarchical documents
In-Reply-To: <3EBC052F.1090602@nichtich.de>
Message-ID: <OF73AC34DE.0C1E70EE-ON85256D24.003E2300@cs.odu.edu>

To handle digital objects with hierarchy (we refer them as complex digital
objects) in OAI framework, this is what we have explored.

1. Use richer metadata (parallel metadata set) to represent a complex
digital object.

2. Map the richer metadata set to oai_dc, in our case it is metadata
associated with the root node in the complex digital object hierarchy. In
the mapped DC, we also embed a URL pointing to the complex digital object.
This URL is basically pointing to a service that can present the complex
object to a user, in our case it is an applet that allows users to navigate
the complex object hierarchy and download individual files.


Zubair








|--------+---------------------------------------------->
|        |          Jakob Voss <jakob.voss@nichtich.de> |
|        |          Sent by:                            |
|        |          oai-implementers-admin@oaisrv.nsdl.c|
|        |          ornell.edu                          |
|        |                                              |
|        |                                              |
|        |          05/09/03 03:44 PM                   |
|--------+---------------------------------------------->
  >---------------------------------------------------------------------------------------------------|
  |                                                                                                   |
  |      To:     oai-implementers@oaisrv.nsdl.cornell.edu                                             |
  |      cc:                                                                                          |
  |      Subject:     [OAI-implementers] hierarchical documents                                       |
  >---------------------------------------------------------------------------------------------------|




Hi!

I am relatively new to OAI and going to set up a simple Data Provider
for different kind of publications. Many publications consist of
different parts in different file formats and publication types but
I do not know how to deal with them. For instance:

Title: All about nothing
Author: Mr. Smith
Files:
   Slides
     PowerPoint Source: all-about-nothing.slides.ppt
     PDF Output:        all-about-nothing.slides.pdf
   Paper
     OpenOffice Source: all-about-nothing.paper.ooo
     RTF Exchange:      all-about-nothing.paper.rtf
     PDF Output:        all-about-nothing.paper.pdf

I thought about several possibilities:
- All files are one document with several dc:indentifier
   for each file (information about type and format is lost)
- Each file is one document (much duplication)
- Create sets for each publication and type (more sets than
   publications)

How do you store information about hierarchical
document-relationship? For instance an article (with several
versions, types and formats) can be part of a book that
is part of a series and so on.

Thanks for your comments!

Jakob Voß

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers





From Naomi@cs.cornell.edu  Mon May 12 15:15:38 2003
From: Naomi@cs.cornell.edu (Naomi Dushay)
Date: Mon, 12 May 2003 10:15:38 -0400
Subject: [OAI-implementers] hierarchical documents
Message-ID: <B1D41F4ABBC45949BC3539F5831D44251E1677@EXCHVS2.cs.cornell.edu>

Jakob,

You might want to take a look at METS - Metadata Encoding and Transmission Standard  

http://www.loc.gov/standards/mets/

"The METS schema is a standard for encoding descriptive, administrative, and structural metadata regarding objects within a digital library, expressed using the XML schema language of the World Wide Web Consortium. The standard is maintained in the Network Development and MARC Standards Office of the Library of Congress, and is being developed as an initiative of the Digital Library Federation."

- Naomi


-----Original Message-----
From: Jakob Voss [mailto:jakob.voss@nichtich.de] 
Sent: Friday, May 09, 2003 3:45 PM
To: oai-implementers@oaisrv.nsdl.cornell.edu
Subject: [OAI-implementers] hierarchical documents

Hi!

I am relatively new to OAI and going to set up a simple Data Provider
for different kind of publications. Many publications consist of
different parts in different file formats and publication types but
I do not know how to deal with them. For instance:

Title: All about nothing
Author: Mr. Smith
Files:
   Slides
     PowerPoint Source: all-about-nothing.slides.ppt
     PDF Output:        all-about-nothing.slides.pdf
   Paper
     OpenOffice Source: all-about-nothing.paper.ooo
     RTF Exchange:      all-about-nothing.paper.rtf
     PDF Output:        all-about-nothing.paper.pdf

I thought about several possibilities:
- All files are one document with several dc:indentifier
   for each file (information about type and format is lost)
- Each file is one document (much duplication)
- Create sets for each publication and type (more sets than
   publications)

How do you store information about hierarchical
document-relationship? For instance an article (with several
versions, types and formats) can be part of a book that
is part of a series and so on.

Thanks for your comments!

Jakob Voß

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


From robert.tansley@hp.com  Mon May 12 21:46:12 2003
From: robert.tansley@hp.com (Tansley, Robert)
Date: Mon, 12 May 2003 13:46:12 -0700
Subject: [OAI-implementers] DSpace 1.1 Released
Message-ID: <40700B4C02ABD5119F00009027876644EA38D6@hplex1.hpl.hp.com>

We are pleased to announce the availibilty of the new 1.1 release of DSpace. This release contains many new features, among them advanced search capabilities, improved unicode handling, and OAI-PMH resumption token support. Also numerous bugs identified since the previous release have been fixed, and the documentation has been updated.


You may download the code and documentation from the DSpace page at
sourceforge:

        http://sourceforge.net/projects/dspace

Be sure to get the updated documentation, since it describes the upgrade procedure that must be performed for the new release to operate on existing DSpace installations. Please report any problems to the sourceforge mail list:

        dspace-tech@lists.sourceforge.net

We would like to acknowledge the valuable contributions of the DSpace community in reporting bugs, release testing, and supporting other adopters, as well as the excellent work from HP Labs and MIT developers in improving the DSpace platform.

 Robert Tansley / Hewlett-Packard Laboratories / (+1) 617 551 7624

From hussein@cs.uct.ac.za  Tue May 13 17:20:04 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Tue, 13 May 2003 18:20:04 +0200
Subject: [OAI-implementers] points to ponder
Message-ID: <3EC11B34.9070605@cs.uct.ac.za>

hi

i am sitting here looking out the window wondering why OAI people are so 
wedded to the idea that we should not use parts of the protocol in any 
way for other purposes ... on the board behind me i have a matrix of 
protocol requirements and i need to name and parametrise the individual 
interfaces ... and i dont want to create new names just to be different 
but past experience says that if i do not, it will be an uphill battle 
against people who believe OAI is not to be tampered with ...

should i use a completely new vocabulary for random access to a 
repository/database/component or are words like "GetRecord" and 
"ListRecords" ok? can the parameters be the same or are "identifier" and 
"set" reserved for OAI-PMH? is the record format strictly for OAI-PMH only?

obviously OAI did not invent remote access to records - all it did was 
popularise and standardise a way of doing it. is it not time we realised 
that the OAI-PMH specifies so much more in terms of DL practices than 
just a harvesting protocol?

precisely where is the line between metadata harvesting and DL practices?

i remember some 3 years ago, when OAIv1.0 was being designed we referred 
to Z39.50 as the "800-pound gorilla" - the protocol that everyone 
supported and you did not openly challenge. is OAI-PMH the new 800-pound 
gorilla?

anyway, just thought i would throw this out for discussion. it seems the 
general forum is announcement-only so this is the only place for discussion.

ttfn,
----hussein

-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================


From ssarapat@enc.org  Tue May 13 17:51:35 2003
From: ssarapat@enc.org (Steve Sarapata)
Date: Tue, 13 May 2003 12:51:35 -0400
Subject: [OAI-implementers] points to ponder
Message-ID: <A05D4B246586C34E907B5EF9E17CA5F3027D65B0@sagan.enc.org>

I like the idea of reusing the vocabulary and parameter list and any
attributes. The issue becomes that of context. If we document as we
should reuse should not be an issue, or at least it can be a manageable
issue.

Steve


-----Original Message-----
From: Hussein Suleman [mailto:hussein@cs.uct.ac.za] 
Sent: Tuesday, May 13, 2003 12:20 PM
To: OAI-implementers
Subject: [OAI-implementers] points to ponder

hi

i am sitting here looking out the window wondering why OAI people are so

wedded to the idea that we should not use parts of the protocol in any 
way for other purposes ... on the board behind me i have a matrix of 
protocol requirements and i need to name and parametrise the individual 
interfaces ... and i dont want to create new names just to be different 
but past experience says that if i do not, it will be an uphill battle 
against people who believe OAI is not to be tampered with ...

should i use a completely new vocabulary for random access to a 
repository/database/component or are words like "GetRecord" and 
"ListRecords" ok? can the parameters be the same or are "identifier" and

"set" reserved for OAI-PMH? is the record format strictly for OAI-PMH
only?

obviously OAI did not invent remote access to records - all it did was 
popularise and standardise a way of doing it. is it not time we realised

that the OAI-PMH specifies so much more in terms of DL practices than 
just a harvesting protocol?

precisely where is the line between metadata harvesting and DL
practices?

i remember some 3 years ago, when OAIv1.0 was being designed we referred

to Z39.50 as the "800-pound gorilla" - the protocol that everyone 
supported and you did not openly challenge. is OAI-PMH the new 800-pound

gorilla?

anyway, just thought i would throw this out for discussion. it seems the

general forum is announcement-only so this is the only place for
discussion.

ttfn,
----hussein

-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


From jewelw@lanl.gov  Tue May 13 19:02:34 2003
From: jewelw@lanl.gov (Jewel Ward)
Date: Tue, 13 May 2003 12:02:34 -0600
Subject: [OAI-implementers] points to ponder
In-Reply-To: <3EC11B34.9070605@cs.uct.ac.za>
Message-ID: <5.2.0.9.2.20030513115337.00a78800@norris-mail.lanl.gov>

>
>i remember some 3 years ago, when OAIv1.0 was being designed we referred 
>to Z39.50 as the "800-pound gorilla" - the protocol that everyone 
>supported and you did not openly challenge. is OAI-PMH the new 800-pound 
>gorilla?

As far as I know, the idea of keeping and continuing to keep the OAI-PMH 
parameters narrow is to *prevent* the OAI-PMH from turning into an "800 lb, 
Z39.50-ish gorilla".  I believe the intention is not to make the OAI-PMH 
into an untouchable/unchangeable Holy Grail, so much as (to) "KISS" (Keep 
It Simple, Stupid).

Regards,

Jewel

--
Jewel H. Ward
Graduate Research Assistant, Post-master's
Los Alamos National Laboratory
Research Library
(505) 664-0368
jewelw@lanl.gov 


From Naomi@cs.cornell.edu  Tue May 13 19:21:01 2003
From: Naomi@cs.cornell.edu (Naomi Dushay)
Date: Tue, 13 May 2003 14:21:01 -0400
Subject: [OAI-implementers] points to ponder
Message-ID: <B1D41F4ABBC45949BC3539F5831D44251E167D@EXCHVS2.cs.cornell.edu>

It's possible to use all the same names ("ListRecords" "GetRecord"
"identifier", etc) in a *different* namespace with no conflict.  

My impression, like Jewel's, is that OAI-PMH is narrow by design.  If
your needs are broader, that's no problem -- express those needs in a
separate namespace.  I'm guessing you can even start out with a schema
very similar to OAI-PMH, and change things as you desire ... including
the targetNamespace.  (And attribute OAI-PMH, of course).

There might even be a community that would find your specialized
protocol useful ... but OAI can't be all things to all people.

- Naomi






-----Original Message-----
From: Jewel Ward [mailto:jewelw@lanl.gov] 
Sent: Tuesday, May 13, 2003 2:03 PM
To: OAI-implementers
Subject: Re: [OAI-implementers] points to ponder


>
>i remember some 3 years ago, when OAIv1.0 was being designed we
referred 
>to Z39.50 as the "800-pound gorilla" - the protocol that everyone 
>supported and you did not openly challenge. is OAI-PMH the new
800-pound 
>gorilla?

As far as I know, the idea of keeping and continuing to keep the OAI-PMH

parameters narrow is to *prevent* the OAI-PMH from turning into an "800
lb, 
Z39.50-ish gorilla".  I believe the intention is not to make the OAI-PMH

into an untouchable/unchangeable Holy Grail, so much as (to) "KISS"
(Keep 
It Simple, Stupid).

Regards,

Jewel

--
Jewel H. Ward
Graduate Research Assistant, Post-master's
Los Alamos National Laboratory
Research Library
(505) 664-0368
jewelw@lanl.gov 

_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


From francois@fsconsult.com  Tue May 13 19:50:04 2003
From: francois@fsconsult.com (Fran=?ISO-8859-1?B?5w==?=ois Schiettecatte)
Date: Tue, 13 May 2003 14:50:04 -0400
Subject: [OAI-implementers] points to ponder
In-Reply-To: <5.2.0.9.2.20030513115337.00a78800@norris-mail.lanl.gov>
Message-ID: <BAE6B69C.ACAF%francois@fsconsult.com>

I agree with KISS mantra, I think OAI is useful and well adopted because you
can implement a viable client in an afternoon with some Perl code. A server
will take a little longer. Try doing that with Z39.50 :)

On 5/13/03 2:02 PM, "Jewel Ward" <jewelw@lanl.gov> wrote:

> 
>> 
>> i remember some 3 years ago, when OAIv1.0 was being designed we referred
>> to Z39.50 as the "800-pound gorilla" - the protocol that everyone
>> supported and you did not openly challenge. is OAI-PMH the new 800-pound
>> gorilla?
> 
> As far as I know, the idea of keeping and continuing to keep the OAI-PMH
> parameters narrow is to *prevent* the OAI-PMH from turning into an "800 lb,
> Z39.50-ish gorilla".  I believe the intention is not to make the OAI-PMH
> into an untouchable/unchangeable Holy Grail, so much as (to) "KISS" (Keep
> It Simple, Stupid).
> 
> Regards,
> 
> Jewel
> 
> --
> Jewel H. Ward
> Graduate Research Assistant, Post-master's
> Los Alamos National Laboratory
> Research Library
> (505) 664-0368
> jewelw@lanl.gov 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


From Tim Cole" <t-cole3@uiuc.edu  Tue May 13 20:07:36 2003
From: Tim Cole" <t-cole3@uiuc.edu (Tim Cole)
Date: Tue, 13 May 2003 14:07:36 -0500
Subject: [OAI-implementers] points to ponder
References: <3EC11B34.9070605@cs.uct.ac.za>
Message-ID: <06ab01c31982$eaa17ac0$14207e82@library.uiuc.edu>

Hussein-

I would hesitate to reuse existing OAI-PMH verbs for new or extended
purposes. In programming languages, I prefer languages where new
functionality means new semantics and syntax, rather than revision of
existing semantics and syntax. Generally this better preserves backward
compatibility and avoids confusion.

Of course some examples are worse than others.

Tolerable, in terms of backwards compatibility at least, would be
'overloading' an existing OAI verb, i.e., situations where you extended
the functional capability of an OAI-PMH verb by allowing additional
optional arguments, but retain all existing optional arguments and keep
required arguments and the return semantics and syntax essentially the
same (except, perhaps, in response to an overloaded request). A
conforming OAI-PMH 2.0 harvester could then query a provider that
understood such extensions without any compatibility issues (the OAI-PMH
2.0 harvester simply wouldn't know how to exploit the added features).
Of course a harvester wanting to exploit new extensions would get an
error response from a conforming 2.0 OAI-PMH provider, but such a
harvester could easily handle this situation gracefully. I have some
philosophical concerns about even this approach, but at least it
wouldn't be hugely disruptive to the base of installed OAI-PMH providers
and harvesters.

Much less desirable would be extensions to existing OAI-PMH 2.0 verbs
that changed required arguments, deprecated existing optional arguments,
or changed return semantics and syntax in ways that conforming OAI-PMH
2.0 harvesters couldn't handle. Such protocol extensions would greatly
degrade potential for interoperability between systems using the new
extensions and those still conforming to OAI-PMH 2.0. It would also lead
to confusions such as are currently being seen in the RSS community
(where they can't even agree on what RSS stands for). I think such
changes would be a huge mistake, and we could find ourselves in a world
of dueling OAI protocol versions. Much preferable in my mind for such
situations would be to create entirely new verbs, even if those verbs
subsumed functions of an existing OAI-PMH 2.0 verb (though even this
approach still runs some risk of parallel, incompatible enhancements,
such as has been encountered in the RSS world). Some duplicative
functionality across verbs (i.e., an ability to fetch a record in a
couple of different ways) would be acceptable, I think.

The other issue implicit in your question is whether OAI should evolve
into a suite of related but distinct individual protocol pieces.
(Perhaps kept track of, as Naomi suggests, by using namespaces -- though
unfortunately OAI-PMH 2.0 didn't contemplate a way to associate verbs in
an OAI request with namespaces. Another reason to look at a SOAP version
of OAI?) A family of protocols approach would allow a continuum of
interoperability protocol development while still maintaining
distinctions and allowing implementers to implement only the levels of
protocol complexity they needed. Philosophically I see this as better
than trying to develop a single protocol that does everything for
everyone (much as has been tried with Z39.50). I think this would be the
best way to go if support and resources for the kind of community
consensus building used to create OAI-PMH can be found to facilitate
work on new, supplemental protocols (e.g., the OAI Static Repository
protocol now being considered), I'm just not sure such support is in the
cards near-term for OAI now that initial funding from CNI and DLF is
gone.

Just my opinion (and of course I don't know what kinds of copyright or
other IP protections Carl and Herbert may have had the foresight to
place on OAI-PMH vocabularies).

Tim Cole
University of Illinois at UC

----- Original Message ----- 
From: "Hussein Suleman" <hussein@cs.uct.ac.za>
To: "OAI-implementers" <OAI-implementers@oaisrv.nsdl.cornell.edu>
Sent: Tuesday, May 13, 2003 11:20 AM
Subject: [OAI-implementers] points to ponder


> hi
>
> i am sitting here looking out the window wondering why OAI people are
so
> wedded to the idea that we should not use parts of the protocol in any
> way for other purposes ... on the board behind me i have a matrix of
> protocol requirements and i need to name and parametrise the
individual
> interfaces ... and i dont want to create new names just to be
different
> but past experience says that if i do not, it will be an uphill battle
> against people who believe OAI is not to be tampered with ...
>
> should i use a completely new vocabulary for random access to a
> repository/database/component or are words like "GetRecord" and
> "ListRecords" ok? can the parameters be the same or are "identifier"
and
> "set" reserved for OAI-PMH? is the record format strictly for OAI-PMH
only?
>
> obviously OAI did not invent remote access to records - all it did was
> popularise and standardise a way of doing it. is it not time we
realised
> that the OAI-PMH specifies so much more in terms of DL practices than
> just a harvesting protocol?
>
> precisely where is the line between metadata harvesting and DL
practices?
>
> i remember some 3 years ago, when OAIv1.0 was being designed we
referred
> to Z39.50 as the "800-pound gorilla" - the protocol that everyone
> supported and you did not openly challenge. is OAI-PMH the new
800-pound
> gorilla?
>
> anyway, just thought i would throw this out for discussion. it seems
the
> general forum is announcement-only so this is the only place for
discussion.
>
> ttfn,
> ----hussein
>
> -- 
> =====================================================================
> hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
> =====================================================================
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
>


From hussein@cs.uct.ac.za  Tue May 13 22:04:04 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Tue, 13 May 2003 23:04:04 +0200
Subject: [OAI-implementers] points to ponder
References: <3EC11B34.9070605@cs.uct.ac.za> <06ab01c31982$eaa17ac0$14207e82@library.uiuc.edu>
Message-ID: <3EC15DC4.6030202@cs.uct.ac.za>

hi

thanks for all the comments.

to add a few more dimensions and details,

of course the whole reason i am faced with the naming of interfaces 
problem is the feedback i have received so far on the ODL project - 
which is largely that overloading could lead to confusion (as Tim spoke 
about). in contrast, the REST project specifically promotes the use of a 
small set of overloaded "verbs" (supporting Jewel's notion of 
simplicity) and REST has both theoretical backing and a fair amount of 
support in the Web community. so to go with the middle road, i am 
contemplating a suite of interfaces based on a set of fundamental 
names/parameters that are unrelated to OAI (at least namespace-wise).

however, i don't quite see the point of inventing an analogy to 
GetRecord(identifier) just to be different. in fact, in REST terminology 
it would be not RESTful because having n different base protocols means 
n-squared combinations (of course the REST docs explain this much better 
than i am doing here - if you havent read about REST, you should).

Naomi suggested using namespaces and i want to do that since i am a big 
namespace fan :). but i am not sure what would be kosher. i can easily 
use different namespaces for requests - thats not a big deal. but should 
i also use different namespaces for, say, a record format? if i put 
records into a database and then build an OAI-PMH interface over the 
database, this could result in a fair amount of namespace-transferrence 
... i am still thinking this through and if anyone has done something 
similar i would like to hear your ideas ...

[in actuality, i stopped thinking 2 weeks ago and decided to upgrade my 
XML parser to DOM2 so i can manipulate namespaces ... if anyone is 
interested in testing a single-file no-installation-required 
zero-dependency 95%-complete-W3C-API pure-perl DOM2 XML parser, let me know]

it may not be obvious from the type of component/protocol experiments i 
do, but i too support the notion that OAI-PMH should be a simple and 
tightly controlled protocol spec. anything that is not OAI-PMH should be 
appropriately labelled and the idea of extended interfaces which are a 
superset is not something i want to do (i tried it 2 years ago and it 
just didnt taste right :)). also, i find a lot of resistance to ODL came 
from people who assumed that at VT we were proposing a 
production-quality protocol whereas what we were really doing was 
reusing an existing framework to investigate what was ultimately needed 
in a production-quality protocol or suite of protocols. i want to test 
the simplicity/understandability/performance/impact but i always get 
asked "where has this been used in practice" ... is it possible that we 
have so many complex/incomplete/changing network protocols because we 
dont sufficiently experiment/research before we design?

Tim also mentioned harvesting. does any reuse of the interface names 
suggest harvesting? to someone who only knows OAI-PMH, it is quite 
possible. but in a different context, GetRecord does not have to imply 
harvesting. so did we succeed in creating an accidental association 
between general DL concepts and OAI? if so, maybe in future we should 
name these service requests more specifically, e.g. "PMH_GetRecord".

as a bottom-line: on the last page of my dissertation, i hypothesized
that maybe we need an independent protocol parallel to, but informed by, 
OAI-PMH for inter-component communication. this is where i am heading at 
the end of the day ... is it worth the effort? or am i the only one out 
there who would like to easily combine the basic EPrints structure with 
Greenstone's search engine and an advanced peer-review module and have 
it all run off my PDA ? :)

ttfn,
----hussein

-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================



From jyoung@oclc.org  Tue May 13 22:32:13 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Tue, 13 May 2003 17:32:13 -0400
Subject: [OAI-implementers] points to ponder
Message-ID: <E5431CF93E29F9478878F623E5B9CE9806332099@OA3-SERVER.oa.oclc.org>

Herbert Van de Sompel, Thom Hickey, and I are writing a paper for D-Lib
(scheduled for the July/August issue) to explore the application of OAI
beyond the realm of mere harvesting. Indeed, the topic of pushing the
boundaries of the OAI-PMH is a sensitive subject. The fear seems to be that
any extension will obfuscate the simple premises of OAI, which I'm sure we
can all sympathize with. Accordingly, our paper avoids this sensitive
subject.

Nevertheless, it often occurs to me that OAI provides 90% of the
functionality I need for certain simple web applications, and I too am
tempted to extend it that extra 10%. The most fruitful example is the
OpenURL Registry (http://www.openurl.info/registry/) which I was able to get
up and running in a couple of hours from it's conception using OAICat. (I
won't go into where the extra 10% occurs in this instance.)

I think this is just the tip of the iceberg for what could be done with OAI.
Because of this, I too would like to see a discussion of this topic.

My general solution has been to add '/extension' to the baseURL for any
application-type verbs. Whether this enough to differentiate it from OAI-PMH
proper may be debatable.

I've encountered three cases so far:

verb=GetMetadata&metadataPrefix=oai_dc&identifier=oai:xyz:123 - to return
the content of the <metadata> element without the OAI wrapper.

verb=Redirect&identifier=oai:xyz:123 - to look up the first dc:identifier in
the record and perform an HTTP redirect to it. (This is in relation to
another upcoming paper that Thom and I are doing with Andy Powell.)

verb=FRBRRedirect&identifier=OPAC_ID&isbn=ISBN - to support bookmarklets
that direct users from a web page containing an ISBN (such as Amazon) to
their local library's OPAC. (See http://alcme.oclc.org/bookmarks/ for the
prototype).

I find the possibilities here fascinating. My boss is making fun of me, now,
for turning everything I do into an OAI repository. How bad can that be,
though?

Jeff

> -----Original Message-----
> From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> Sent: Tuesday, May 13, 2003 12:20 PM
> To: OAI-implementers
> Subject: [OAI-implementers] points to ponder
> 
> 
> hi
> 
> i am sitting here looking out the window wondering why OAI 
> people are so 
> wedded to the idea that we should not use parts of the 
> protocol in any 
> way for other purposes ... on the board behind me i have a matrix of 
> protocol requirements and i need to name and parametrise the 
> individual 
> interfaces ... and i dont want to create new names just to be 
> different 
> but past experience says that if i do not, it will be an 
> uphill battle 
> against people who believe OAI is not to be tampered with ...
> 
> should i use a completely new vocabulary for random access to a 
> repository/database/component or are words like "GetRecord" and 
> "ListRecords" ok? can the parameters be the same or are 
> "identifier" and 
> "set" reserved for OAI-PMH? is the record format strictly for 
> OAI-PMH only?
> 
> obviously OAI did not invent remote access to records - all 
> it did was 
> popularise and standardise a way of doing it. is it not time 
> we realised 
> that the OAI-PMH specifies so much more in terms of DL practices than 
> just a harvesting protocol?
> 
> precisely where is the line between metadata harvesting and 
> DL practices?
> 
> i remember some 3 years ago, when OAIv1.0 was being designed 
> we referred 
> to Z39.50 as the "800-pound gorilla" - the protocol that everyone 
> supported and you did not openly challenge. is OAI-PMH the 
> new 800-pound 
> gorilla?
> 
> anyway, just thought i would throw this out for discussion. 
> it seems the 
> general forum is announcement-only so this is the only place 
> for discussion.
> 
> ttfn,
> ----hussein
> 
> -- 
> =====================================================================
> hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
> =====================================================================
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

From sandro.zic@zzoss.com  Wed May 14 09:08:26 2003
From: sandro.zic@zzoss.com (Sandro Zic)
Date: Wed, 14 May 2003 10:08:26 +0200
Subject: [OAI-implementers] points to ponder
In-Reply-To: <3EC15DC4.6030202@cs.uct.ac.za>
References: <3EC11B34.9070605@cs.uct.ac.za> <06ab01c31982$eaa17ac0$14207e82@library.uiuc.edu> <3EC15DC4.6030202@cs.uct.ac.za>
Message-ID: <200305141008.26318.sandro.zic@zzoss.com>

On Tuesday 13 May 2003 23:04, Hussein Suleman wrote:
> as a bottom-line: on the last page of my dissertation, i hypothesized
> that maybe we need an independent protocol parallel to, but informed by,
> OAI-PMH for inter-component communication. this is where i am heading at
> the end of the day ... is it worth the effort? or am i the only one out
> there who would like to easily combine the basic EPrints structure with
> Greenstone's search engine and an advanced peer-review module and have
> it all run off my PDA ? :)

I am thinking of OAI-PMH as a general-purpose protocol to transfer data within 
components for distributed content management - this is where I see high 
potentials for OAI-PMH or an extended version. Just imagine a collaborating 
CMS portals network that does p2p harvesting on published documents, 
application access groups, news, weblogs - or one day in the scope of the 
semantic web: ontologies, knowledge agents, etc.

Actually, this is what I am mainly interested in: whether OAI-PMH can already 
be used as a general purpose harvesting protocol today and if this is the 
direction to go in future versions of OAI-PMH.

Sandro

From a.powell@ukoln.ac.uk  Wed May 14 09:32:52 2003
From: a.powell@ukoln.ac.uk (Andy Powell)
Date: Wed, 14 May 2003 09:32:52 +0100 (GMT Standard Time)
Subject: [OAI-implementers] points to ponder
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE9806332099@OA3-SERVER.oa.oclc.org>
References: <E5431CF93E29F9478878F623E5B9CE9806332099@OA3-SERVER.oa.oclc.org>
Message-ID: <Pine.WNT.4.53.0305140918160.2860@jack2>

On Tue, 13 May 2003, Young,Jeff wrote:

> My general solution has been to add '/extension' to the baseURL for any
> application-type verbs. Whether this enough to differentiate it from OAI-PMH
> proper may be debatable.
>
> I've encountered three cases so far:
>
> verb=GetMetadata&metadataPrefix=oai_dc&identifier=oai:xyz:123 - to return
> the content of the <metadata> element without the OAI wrapper.
>
> verb=Redirect&identifier=oai:xyz:123 - to look up the first dc:identifier in
> the record and perform an HTTP redirect to it. (This is in relation to
> another upcoming paper that Thom and I are doing with Andy Powell.)
>
> verb=FRBRRedirect&identifier=OPAC_ID&isbn=ISBN - to support bookmarklets
> that direct users from a web page containing an ISBN (such as Amazon) to
> their local library's OPAC. (See http://alcme.oclc.org/bookmarks/ for the
> prototype).

Provided these extension 'verbs' are supported at a different baseURL,
then I don't see any problem at all - because you haven't touched the
protocol at all.  What you done is extended a bit of software that
supports OAI-PMH to all support some additional requests at a different
URL (at least, I assume that's what you've done!).

I'm not quite clear Where the original question was coming from, but, for
example, I think it would be much more questionable to invent a record
format called 'fullText' and to then use the protocol to exchange
'resources' (as opposed to 'records').  At that point, one would be using
the 'protocol for metadata harvesting' to do something other than
'harvesting metadata'.

At the moment, the protocol 'does exactly what it says on the tin' (sorry,
that's a quote from a UK TV advert for wood stain) and it does it in
pretty much the simplest way possible given the required functionality.
That makes it pretty easy to explain to people what it does, why it does
it and what it doesn't do.  I have a concern that 'extending' the use of
the protocol may actually make it harder to sell to people (depending on
what we mean by extending - and I may be barking up the wrong tree
here!).

> > should i use a completely new vocabulary for random access to a
> > repository/database/component or are words like "GetRecord" and
> > "ListRecords" ok? can the parameters be the same or are
> > "identifier" and
> > "set" reserved for OAI-PMH? is the record format strictly for
> > OAI-PMH only?

One thing I have been wondering about is whether the use of
oai-identifiers is restricted in some way to the use of the OAI-PMH, or
whether they can be used as identifiers for metadata records (or 'items')
in other contexts?

Andy
--
Distributed Systems, UKOLN, University of Bath, Bath, BA2 7AY, UK
http://www.ukoln.ac.uk/ukoln/staff/a.powell       +44 1225 383933
Resource Discovery Network http://www.rdn.ac.uk/

From evelyn@ime.usp.br  Wed May 14 15:30:39 2003
From: evelyn@ime.usp.br (Evelyn Cristina Pinto)
Date: Wed, 14 May 2003 11:30:39 -0300 (EST)
Subject: [OAI-implementers] points to ponder
In-Reply-To: <Pine.WNT.4.53.0305140918160.2860@jack2>
Message-ID: <Pine.GSO.4.21.0305141018490.13501-100000@fradim>

> > > should i use a completely new vocabulary for random access to a
> > > repository/database/component or are words like "GetRecord" and
> > > "ListRecords" ok? 

I think that OAI-PHM is so good because it´s simple and his simplicity can
be reused in other contexts easily. The OAI-PMH protocol doesn´t define
a granularity standard of the objects that can be stored in the
repositories. 
So, we could use the OAI-PMH protocol for harvesting, for example,
a repository that just stores information about other archives. The verbs
are too general and that´s the beauty of the protocol: it´s abstract!

We can find an interesting item definition on
http://www.openarchives.org/OAI/2.0/openarchivesprotocol.htm#Item :

"2.3 Item
An item is a  constituent of a repository from which metadata about a
resource can be disseminated. An item is conceptually a container that
stores or dynamically generates metadata about a single resource in
multiple formats, each of which can be harvested as records via the
OAI-PMH.  Each item has an identifier that is unique within the scope of
the repository of which it is a constituent. "

As you can realize, we can´t find a definition here that an item must
specify just information about e-prints, articles. I think that people who
wrote it, they took a lot of care to allow the users specify the
granularity of their item.

I think that the ListRecords, GetRecords verbs are great for a lot of
applications.

Regards,
Evelyn.

****************************************************
Evelyn Cristina
Mastering Student and EPrints Webmaster at IME-USP, 
University of São Paulo 
****************************************************


From tim@tim.brody.btinternet.co.uk  Wed May 14 16:17:32 2003
From: tim@tim.brody.btinternet.co.uk (Tim Brody)
Date: Wed, 14 May 2003 16:17:32 +0100
Subject: [OAI-implementers] points to ponder
In-Reply-To: <Pine.WNT.4.53.0305140918160.2860@jack2>
References: <E5431CF93E29F9478878F623E5B9CE9806332099@OA3-SERVER.oa.oclc.org> <Pine.WNT.4.53.0305140918160.2860@jack2>
Message-ID: <3EC25E0C.3020109@tim.brody.btinternet.co.uk>

Andy Powell wrote:

 > [ ... ]

> I'm not quite clear Where the original question was coming from, but, for
> example, I think it would be much more questionable to invent a record
> format called 'fullText' and to then use the protocol to exchange
> 'resources' (as opposed to 'records').  At that point, one would be using
> the 'protocol for metadata harvesting' to do something other than
> 'harvesting metadata'.

BMC expose their free-access articles via a proprietory XML format 
"bmc_article":
http://celestial.eprints.org/cgi-bin/oaia2/biomedcentral.com?verb=GetRecord;metadataPrefix=bmc_article;identifier=oai:biomedcentral.com:ar407

All the best,
Tim.


From doyle@aps.org  Thu May 15 15:27:43 2003
From: doyle@aps.org (Mark Doyle)
Date: Thu, 15 May 2003 10:27:43 -0400
Subject: [OAI-implementers] points to ponder
In-Reply-To: <3EC25E0C.3020109@tim.brody.btinternet.co.uk>
Message-ID: <64308EC7-86E1-11D7-BF29-000393ADC728@aps.org>

Greetings,

On Wednesday, May 14, 2003, at 11:17  AM, Tim Brody wrote:

> Andy Powell wrote:
>
> > [ ... ]
>
>> I'm not quite clear Where the original question was coming from, but,  
>> for
>> example, I think it would be much more questionable to invent a record
>> format called 'fullText' and to then use the protocol to exchange
>> 'resources' (as opposed to 'records').  At that point, one would be  
>> using
>> the 'protocol for metadata harvesting' to do something other than
>> 'harvesting metadata'.
>
> BMC expose their free-access articles via a proprietory XML format  
> "bmc_article":
> http://celestial.eprints.org/cgi-bin/oaia2/ 
> biomedcentral.com?verb=GetRecord;metadataPrefix=bmc_article;identifier= 
> oai:biomedcentral.com:ar407

We do this as well at the APS (but in mode 0 - only certain IP's can  
harvest). What I
would really like is an analog of SOAP with attachments where I could  
transport
a PDF along with the OAI metadata "header" - this would enable us to do  
all sorts
of interesting things (including simplifying our mirroring). I know I  
could base64
encode the PDF and shove it in some tags, but that isn't satisfying. I  
would prefer
not to have to create my own proprietary extension to OAI  in order do  
this. What work
is currently being done or planned in this direction?

Note that with the bmc_article you don't really get the full article  
because items
like figures are missing. I would like to be able to also transport a  
bundle of
files as attachments so that an entire article could be delivered.

Cheers,
Mark



From smo30@cam.ac.uk  Thu May 15 16:25:32 2003
From: smo30@cam.ac.uk (Shaun Osborne)
Date: Thu, 15 May 2003 16:25:32 +0100
Subject: [OAI-implementers] points to ponder
In-Reply-To: <64308EC7-86E1-11D7-BF29-000393ADC728@aps.org>
Message-ID: <001801c31af6$39909700$0b166f83@fitzmuseum.cam.ac.uk>

Hi

Marks question seems to come up fairly often - i.e how do I encapsulate
content with my metadata?

I have so far assumed that pointers (URLs probably) would be imbedded in
the metadata and the harvesting system has to have a method (apart from
OAI) to simply pickup all the referenced files by the pointers in the
metadata.

We are moving forward with our OAI efforts and will probably need images
to be able to 'harvested' (at a minimum a thumbnail probably).

Any list users have experience with this generally? or in the museum
context explicity?

Shaun Osborne

http://www.fitzmuseum.cam.ac.uk/htf   (Harvesting the Fitzwilliam
Project)
-----Original Message-----
From: oai-implementers-admin@oaisrv.nsdl.cornell.edu
[mailto:oai-implementers-admin@oaisrv.nsdl.cornell.edu] On Behalf Of
Mark Doyle
Sent: 15 May 2003 15:28
To: OAI-implementers
Subject: Re: [OAI-implementers] points to ponder


Greetings,

On Wednesday, May 14, 2003, at 11:17  AM, Tim Brody wrote:

> Andy Powell wrote:
>
> > [ ... ]
>
>> I'm not quite clear Where the original question was coming from, but,

>> for
>> example, I think it would be much more questionable to invent a
record
>> format called 'fullText' and to then use the protocol to exchange
>> 'resources' (as opposed to 'records').  At that point, one would be  
>> using
>> the 'protocol for metadata harvesting' to do something other than
>> 'harvesting metadata'.
>
> BMC expose their free-access articles via a proprietory XML format  
> "bmc_article":
> http://celestial.eprints.org/cgi-bin/oaia2/ 
>
biomedcentral.com?verb=GetRecord;metadataPrefix=bmc_article;identifier= 
> oai:biomedcentral.com:ar407

We do this as well at the APS (but in mode 0 - only certain IP's can  
harvest). What I
would really like is an analog of SOAP with attachments where I could  
transport
a PDF along with the OAI metadata "header" - this would enable us to do

all sorts
of interesting things (including simplifying our mirroring). I know I  
could base64
encode the PDF and shove it in some tags, but that isn't satisfying. I  
would prefer
not to have to create my own proprietary extension to OAI  in order do  
this. What work
is currently being done or planned in this direction?

Note that with the bmc_article you don't really get the full article  
because items
like figures are missing. I would like to be able to also transport a  
bundle of
files as attachments so that an entire article could be delivered.

Cheers,
Mark


_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers



From Naomi@cs.cornell.edu  Thu May 15 16:56:52 2003
From: Naomi@cs.cornell.edu (Naomi Dushay)
Date: Thu, 15 May 2003 11:56:52 -0400
Subject: [OAI-implementers] encapsulated metadata and content
Message-ID: <B1D41F4ABBC45949BC3539F5831D44251E1682@EXCHVS2.cs.cornell.edu>

There is an XML metadata format that strive to be a wrapper for complex
digital objects that may contain content as well as metadata:

METS - Metadata Encoding and Transmission Standard  

http://www.loc.gov/standards/mets/

"The METS schema is a standard for encoding descriptive, administrative,
and structural metadata regarding objects within a digital library,
expressed using the XML schema language of the World Wide Web
Consortium. The standard is maintained in the Network Development and
MARC Standards Office of the Library of Congress, and is being developed
as an initiative of the Digital Library Federation."


I believe METS could be used as a metadata format within OAI.


Another thing to take a look at is the Fedora project:

http://www.fedora.info/index.shtml

"The new system demonstrates how distributed digital library
architecture can be deployed using web-based technologies, including XML
and Web services and is designed to be a foundation upon which
interoperable web-based digital libraries can be built."

This isn't OAI, but is XML, web, WSDL, etc.

- Naomi




-----Original Message-----
From: Shaun Osborne [mailto:smo30@cam.ac.uk] 
Sent: Thursday, May 15, 2003 11:26 AM
To: 'OAI-implementers'
Subject: RE: [OAI-implementers] points to ponder


Hi

Marks question seems to come up fairly often - i.e how do I encapsulate
content with my metadata?

I have so far assumed that pointers (URLs probably) would be imbedded in
the metadata and the harvesting system has to have a method (apart from
OAI) to simply pickup all the referenced files by the pointers in the
metadata.

We are moving forward with our OAI efforts and will probably need images
to be able to 'harvested' (at a minimum a thumbnail probably).

Any list users have experience with this generally? or in the museum
context explicity?

Shaun Osborne

http://www.fitzmuseum.cam.ac.uk/htf   (Harvesting the Fitzwilliam
Project)


From tim@tim.brody.btinternet.co.uk  Thu May 15 17:44:24 2003
From: tim@tim.brody.btinternet.co.uk (Tim Brody)
Date: Thu, 15 May 2003 17:44:24 +0100
Subject: [OAI-implementers] points to ponder
References: <001801c31af6$39909700$0b166f83@fitzmuseum.cam.ac.uk>
Message-ID: <012f01c31b01$3e11d860$14414e98@Shrek>

If we assume the harvester is clever and the provider simple, perhaps all
that is needed is to include the resource URLs in the DC record (parts,
formats, versions).

If a harvester is interested in doing something with the resource,
presumably it is clever enough to work out what it needs (e.g. if it
downloads an HTML page, it should also retrieve anything that is included on
that page).

All the best,
Tim.

----- Original Message -----
From: "Shaun Osborne" <smo30@cam.ac.uk>
To: "'OAI-implementers'" <OAI-implementers@oaisrv.nsdl.cornell.edu>
Sent: Thursday, May 15, 2003 4:25 PM
Subject: RE: [OAI-implementers] points to ponder


>
> Hi
>
> Marks question seems to come up fairly often - i.e how do I encapsulate
> content with my metadata?
>
> I have so far assumed that pointers (URLs probably) would be imbedded in
> the metadata and the harvesting system has to have a method (apart from
> OAI) to simply pickup all the referenced files by the pointers in the
> metadata.
>
> We are moving forward with our OAI efforts and will probably need images
> to be able to 'harvested' (at a minimum a thumbnail probably).
>
> Any list users have experience with this generally? or in the museum
> context explicity?
>
> Shaun Osborne
>
> http://www.fitzmuseum.cam.ac.uk/htf   (Harvesting the Fitzwilliam
> Project)
> -----Original Message-----
> From: oai-implementers-admin@oaisrv.nsdl.cornell.edu
> [mailto:oai-implementers-admin@oaisrv.nsdl.cornell.edu] On Behalf Of
> Mark Doyle
> Sent: 15 May 2003 15:28
> To: OAI-implementers
> Subject: Re: [OAI-implementers] points to ponder
>
>
> Greetings,
>
> On Wednesday, May 14, 2003, at 11:17  AM, Tim Brody wrote:
>
> > Andy Powell wrote:
> >
> > > [ ... ]
> >
> >> I'm not quite clear Where the original question was coming from, but,
>
> >> for
> >> example, I think it would be much more questionable to invent a
> record
> >> format called 'fullText' and to then use the protocol to exchange
> >> 'resources' (as opposed to 'records').  At that point, one would be
> >> using
> >> the 'protocol for metadata harvesting' to do something other than
> >> 'harvesting metadata'.
> >
> > BMC expose their free-access articles via a proprietory XML format
> > "bmc_article":
> > http://celestial.eprints.org/cgi-bin/oaia2/
> >
> biomedcentral.com?verb=GetRecord;metadataPrefix=bmc_article;identifier=
> > oai:biomedcentral.com:ar407
>
> We do this as well at the APS (but in mode 0 - only certain IP's can
> harvest). What I
> would really like is an analog of SOAP with attachments where I could
> transport
> a PDF along with the OAI metadata "header" - this would enable us to do
>
> all sorts
> of interesting things (including simplifying our mirroring). I know I
> could base64
> encode the PDF and shove it in some tags, but that isn't satisfying. I
> would prefer
> not to have to create my own proprietary extension to OAI  in order do
> this. What work
> is currently being done or planned in this direction?
>
> Note that with the bmc_article you don't really get the full article
> because items
> like figures are missing. I would like to be able to also transport a
> bundle of
> files as attachments so that an entire article could be delivered.
>
> Cheers,
> Mark
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
>
>
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
>


From simeon@cs.cornell.edu  Thu May 15 18:58:52 2003
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Thu, 15 May 2003 13:58:52 -0400 (EDT)
Subject: [OAI-implementers] points to ponder
In-Reply-To: <Pine.WNT.4.53.0305140918160.2860@jack2>
Message-ID: <Pine.LNX.4.44.0305151339450.4654-100000@ice.cs.cornell.edu>

I think that they key to extension of OAI-PMH in experiments or in
production systems is that extension shouldn't derail the continuing
movement to expose metadata with OAI. We would loose a great deal if this
aggregate "collection" became fragmented due to interoperability problems.

This means that extensions mustn't break existing functionality so that
any ordinary harvester may continue oblivious to the extension if the
baseURL is public in the normal way. Hussein's point that research should
be advertised as such (and shouldn't necessarily be judged by the "who is
using it" criterion) and Jeff's point about marking the baseURL in an
obvious way sound sensible.

We also shouldn't forget to do experiments with the big metadata
collection that OAI already allows us access too...

my 2c,
Simeon


On Wed, 14 May 2003, Andy Powell wrote:
> On Tue, 13 May 2003, Young,Jeff wrote:
> 
> > My general solution has been to add '/extension' to the baseURL for any
> > application-type verbs. Whether this enough to differentiate it from OAI-PMH
> > proper may be debatable.
> >
> > I've encountered three cases so far:
> >
> > verb=GetMetadata&metadataPrefix=oai_dc&identifier=oai:xyz:123 - to return
> > the content of the <DEFANGED_metadata> element without the OAI wrapper.
> >
> > verb=Redirect&identifier=oai:xyz:123 - to look up the first dc:identifier in
> > the record and perform an HTTP redirect to it. (This is in relation to
> > another upcoming paper that Thom and I are doing with Andy Powell.)
> >
> > verb=FRBRRedirect&identifier=OPAC_ID&isbn=ISBN - to support bookmarklets
> > that direct users from a web page containing an ISBN (such as Amazon) to
> > their local library's OPAC. (See http://alcme.oclc.org/bookmarks/ for the
> > prototype).
> 
> Provided these extension 'verbs' are supported at a different baseURL,
> then I don't see any problem at all - because you haven't touched the
> protocol at all.  What you done is extended a bit of software that
> supports OAI-PMH to all support some additional requests at a different
> URL (at least, I assume that's what you've done!).
> 
> I'm not quite clear Where the original question was coming from, but, for
> example, I think it would be much more questionable to invent a record
> format called 'fullText' and to then use the protocol to exchange
> 'resources' (as opposed to 'records').  At that point, one would be using
> the 'protocol for metadata harvesting' to do something other than
> 'harvesting metadata'.
> 
> At the moment, the protocol 'does exactly what it says on the tin' (sorry,
> that's a quote from a UK TV advert for wood stain) and it does it in
> pretty much the simplest way possible given the required functionality.
> That makes it pretty easy to explain to people what it does, why it does
> it and what it doesn't do.  I have a concern that 'extending' the use of
> the protocol may actually make it harder to sell to people (depending on
> what we mean by extending - and I may be barking up the wrong tree
> here!).
> 
> > > should i use a completely new vocabulary for random access to a
> > > repository/database/component or are words like "GetRecord" and
> > > "ListRecords" ok? can the parameters be the same or are
> > > "identifier" and
> > > "set" reserved for OAI-PMH? is the record format strictly for
> > > OAI-PMH only?
> 
> One thing I have been wondering about is whether the use of
> oai-identifiers is restricted in some way to the use of the OAI-PMH, or
> whether they can be used as identifiers for metadata records (or 'items')
> in other contexts?
> 
> Andy
> --
> Distributed Systems, UKOLN, University of Bath, Bath, BA2 7AY, UK
> http://www.ukoln.ac.uk/ukoln/staff/a.powell       +44 1225 383933
> Resource Discovery Network http://www.rdn.ac.uk/


From simeon@cs.cornell.edu  Thu May 15 19:04:04 2003
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Thu, 15 May 2003 14:04:04 -0400 (EDT)
Subject: [OAI-implementers] encapsulated metadata and content
In-Reply-To: <B1D41F4ABBC45949BC3539F5831D44251E1682@EXCHVS2.cs.cornell.edu>
Message-ID: <Pine.LNX.4.44.0305151359090.4654-100000@ice.cs.cornell.edu>

I considered a number of options that would allow export of full-content
from arXiv.org in a less home-brew fashion that we currently support. METS
looked like best option to me. I haven't got around to experimenting with
it yet though.

Exporting full-content via OAI-PMH is certainly an extension of OAI at a
philosophical level and deserves careful consideration. However, at a
practical level, OAI-PMH is a way to export Schema-described XML objects
with certain identifiers and relationships so METS-objects will work like
any other "lump of XML".

Cheers,
Simeon.


On Thu, 15 May 2003, Naomi Dushay wrote:
> There is an XML metadata format that strive to be a wrapper for complex
> digital objects that may contain content as well as metadata:
> 
> METS - Metadata Encoding and Transmission Standard  
> 
> http://www.loc.gov/standards/mets/
> 
> "The METS schema is a standard for encoding descriptive, administrative,
> and structural metadata regarding objects within a digital library,
> expressed using the XML schema language of the World Wide Web
> Consortium. The standard is maintained in the Network Development and
> MARC Standards Office of the Library of Congress, and is being developed
> as an initiative of the Digital Library Federation."
> 
> 
> I believe METS could be used as a metadata format within OAI.
> 
> 
> Another thing to take a look at is the Fedora project:
> 
> http://www.fedora.info/index.shtml
> 
> "The new system demonstrates how distributed digital library
> architecture can be deployed using web-based technologies, including XML
> and Web services and is designed to be a foundation upon which
> interoperable web-based digital libraries can be built."
> 
> This isn't OAI, but is XML, web, WSDL, etc.
> 
> - Naomi
> 
> 
> 
> 
> -----Original Message-----
> From: Shaun Osborne [mailto:smo30@cam.ac.uk] 
> Sent: Thursday, May 15, 2003 11:26 AM
> To: 'OAI-implementers'
> Subject: RE: [OAI-implementers] points to ponder
> 
> 
> Hi
> 
> Marks question seems to come up fairly often - i.e how do I encapsulate
> content with my metadata?
> 
> I have so far assumed that pointers (URLs probably) would be imbedded in
> the metadata and the harvesting system has to have a method (apart from
> OAI) to simply pickup all the referenced files by the pointers in the
> metadata.
> 
> We are moving forward with our OAI efforts and will probably need images
> to be able to 'harvested' (at a minimum a thumbnail probably).
> 
> Any list users have experience with this generally? or in the museum
> context explicity?
> 
> Shaun Osborne
> 
> http://www.fitzmuseum.cam.ac.uk/htf   (Harvesting the Fitzwilliam
> Project)
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


From robert.tansley@hp.com  Thu May 15 19:10:03 2003
From: robert.tansley@hp.com (Tansley, Robert)
Date: Thu, 15 May 2003 11:10:03 -0700
Subject: [OAI-implementers] OAI-PMH in DSpace at MIT should be fixed!
Message-ID: <40700B4C02ABD5119F00009027876644EA38F8@hplex1.hpl.hp.com>

Hi all,

Those of you who run harvesters might like to re-harvest DSpace at MIT now that we've (hopefully) fixed all of the issues we were having.  The base URL is still the same:

http://hpds1.mit.edu/oai/

Thanks,

 Robert Tansley / Hewlett-Packard Laboratories / (+1) 617 551 7624

From philb@icbl.hw.ac.uk  Fri May 16 17:11:51 2003
From: philb@icbl.hw.ac.uk (Phil Barker)
Date: Fri, 16 May 2003 17:11:51 +0100
Subject: [OAI-implementers] encapsulated metadata and content
In-Reply-To: <B1D41F4ABBC45949BC3539F5831D44251E1682@EXCHVS2.cs.cornell.edu>
References: <B1D41F4ABBC45949BC3539F5831D44251E1682@EXCHVS2.cs.cornell.edu>
Message-ID: <3EC50DC7.6040104@icbl.hw.ac.uk>

Naomi Dushay wrote:
> There is an XML metadata format that strive to be a wrapper for complex
> digital objects that may contain content as well as metadata:
> 
> METS - Metadata Encoding and Transmission Standard  
> 
> http://www.loc.gov/standards/mets/
> 
...


There is another, the IMS Content Packaging Specification,

http://www.imsglobal.org/content/packaging/index.cfm

" The IMS Content Packaging Specification provides the functionality to 
describe and package learning materials, such as an individual course or a 
collection of courses, into interoperable, distributable packages. Content 
Packaging addresses the description, structure, and location of online 
learning materials and the definition of some particular content types."
[Note that more or less anything can be a learning material]


Which has a sister specification for how repositories should interoperate: 
the IMS Digital Repositories Specification,
http://www.imsglobal.org/digitalrepositories/index.cfm
"...purpose is to provide recommendations for the interoperation of the 
most common repository functions..."


Again, this isn't OAI...though OAI gets a mention in the repository spec.

Phil

-- 
Phil Barker                            Learning Technology Adviser
      ICBL, School of Mathematical and Computer Sciences
      Mountbatten Building, Heriot-Watt University,
      Edinburgh, EH14 4AS
      Tel: 0131 451 3278    Fax: 0131 451 3327
      Web: http://www.icbl.hw.ac.uk/~philb/


From jyoung@oclc.org  Wed May 21 22:22:29 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Wed, 21 May 2003 17:22:29 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98063320C9@OA3-SERVER.oa.oclc.org>

I think I found a hole in the OAI validation mechanisms. I believe the
contents of the <metadata> element should be required to have an
xsi:schemaLocation attribute to make it easier to identify the schema for
the data. Without it, harvesters are forced to use the
/oai2:OAI-PMH/oai2:request/@metadataPrefix value and look it up in the
ListMetadataFormats response, which is more trouble than having it
immediately available as an attribute.

The examples in the OAI protocol document do show it as an attribute, but
apparently the Repository Explorer and the Registration validation available
on the OAI site don't check for it.

Jeff

---
Jeffrey A. Young
Consulting Software Engineer
Office of Research, Mail Code 710
OCLC Online Computer Library Center, Inc.
6565 Frantz Road
Dublin, OH   43017-3395
www.oclc.org

Voice:	614-764-4342
Voice:	800-848-5878, ext. 4342
Fax:	614-718-7477
Email:	jyoung@oclc.org



From hussein@cs.uct.ac.za  Wed May 21 22:55:19 2003
From: hussein@cs.uct.ac.za (Hussein Suleman)
Date: Wed, 21 May 2003 23:55:19 +0200
Subject: [OAI-implementers] OAI validation problem
References: <E5431CF93E29F9478878F623E5B9CE98063320C9@OA3-SERVER.oa.oclc.org>
Message-ID: <3ECBF5C7.2040502@cs.uct.ac.za>

hi Jeff

some random thoughts ...
- could the schema be modified to reflect a required xsi:schemaLocation 
attribute? that might be the easiest fix.
- alternatively, does DOM3 propagate schema information like DOM2 
propagates namespaces? if so, then there might be a method to directly 
retrieve the schema for a given node/element.

ttfn,
----hussein


Young,Jeff wrote:
> I think I found a hole in the OAI validation mechanisms. I believe the
> contents of the <metadata> element should be required to have an
> xsi:schemaLocation attribute to make it easier to identify the schema for
> the data. Without it, harvesters are forced to use the
> /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look it up in the
> ListMetadataFormats response, which is more trouble than having it
> immediately available as an attribute.
> 
> The examples in the OAI protocol document do show it as an attribute, but
> apparently the Repository Explorer and the Registration validation available
> on the OAI site don't check for it.
> 
> Jeff
> 
> ---
> Jeffrey A. Young
> Consulting Software Engineer
> Office of Research, Mail Code 710
> OCLC Online Computer Library Center, Inc.
> 6565 Frantz Road
> Dublin, OH   43017-3395
> www.oclc.org
> 
> Voice:	614-764-4342
> Voice:	800-848-5878, ext. 4342
> Fax:	614-718-7477
> Email:	jyoung@oclc.org
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


-- 
=====================================================================
hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
=====================================================================



From jyoung@oclc.org  Thu May 22 14:15:33 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 22 May 2003 09:15:33 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98063320CC@OA3-SERVER.oa.oclc.org>

I've always made a point of being willfully ignorant about XML Schemas, but
it's time I gave it a try. The trick seems to be to define an abstract type
to use in place of <any namespace="##other".../> This abstract type would
then require the xsi:schemaLocation.

So, in place of this:

<complexType name="metadataType">
	<sequence>
		<any namespace="##other" processContents="strict"/>
	</sequence>
</complexType>

do something like:

<xsd:complexType name="abstractContent" abstract="true">
	<xsd:sequence min-Occurs="1" maxOccurs="1">
		<any namespace="##other" processContents="strict" />
	</xsd:sequence>
</xsd:complexType>

<complexType name="metadataType">
	<xsd:complexContent>
		<xsd:extension base="abstractContent">
			<xsd:attribute name="xsi:schemaLocation"
type="xsd:string" use="required" />
		</xsd:extension>
	</xsd:complexContent>
</complexType>


If that isn't right, then maybe it's something like this:

<xsd:element name="Content" abstract="true" type="abstractContent" />

<xsd:complexType name="abstractContent">
    <sequence>
        <any namespace="##other" processContents="strict" />
    </sequence>
    <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
use="required" />
</xsd:complexType>

<complexType name="metadataType">
    <xsd:sequence>
        <xsd:element ref="Content" minOccurs="1" maxOccurs="1" />
    </xsd:sequence>
</complexType>

No promises, though..

Jeff


> -----Original Message-----
> From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> Sent: Wednesday, May 21, 2003 5:55 PM
> To: OAI-implementers (E-mail)
> Subject: Re: [OAI-implementers] OAI validation problem
> 
> 
> hi Jeff
> 
> some random thoughts ...
> - could the schema be modified to reflect a required 
> xsi:schemaLocation 
> attribute? that might be the easiest fix.
> - alternatively, does DOM3 propagate schema information like DOM2 
> propagates namespaces? if so, then there might be a method to 
> directly 
> retrieve the schema for a given node/element.
> 
> ttfn,
> ----hussein
> 
> 
> Young,Jeff wrote:
> > I think I found a hole in the OAI validation mechanisms. I 
> believe the
> > contents of the <metadata> element should be required to have an
> > xsi:schemaLocation attribute to make it easier to identify 
> the schema for
> > the data. Without it, harvesters are forced to use the
> > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look 
> it up in the
> > ListMetadataFormats response, which is more trouble than having it
> > immediately available as an attribute.
> > 
> > The examples in the OAI protocol document do show it as an 
> attribute, but
> > apparently the Repository Explorer and the Registration 
> validation available
> > on the OAI site don't check for it.
> > 
> > Jeff
> > 
> > ---
> > Jeffrey A. Young
> > Consulting Software Engineer
> > Office of Research, Mail Code 710
> > OCLC Online Computer Library Center, Inc.
> > 6565 Frantz Road
> > Dublin, OH   43017-3395
> > www.oclc.org
> > 
> > Voice:	614-764-4342
> > Voice:	800-848-5878, ext. 4342
> > Fax:	614-718-7477
> > Email:	jyoung@oclc.org
> > 
> > 
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> 
> 
> -- 
> =====================================================================
> hussein suleman ~ hussein@cs.uct.ac.za ~ http://www.husseinsspace.com
> =====================================================================
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

From jyoung@oclc.org  Thu May 22 16:52:37 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 22 May 2003 11:52:37 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98063320CF@OA3-SERVER.oa.oclc.org>

Here's another example of where I'm having trouble processing OAI responses
with XSLT. Below is a deleted record:

  <record>
    <header status="deleted">
      <identifier>oai:arXiv.org:hep-th/9901007</identifier>
      <datestamp>1999-12-21</datestamp>
    </header>
  </record>

This response indicates the deletion of a record in a particular
metadataFormat, not the deletion of the item. The problem is that there is
nothing in the response to indicate which metadataFormat is being deleted
except by looking at /OAI-PMH/request/@metadataPrefix. Unfortunately, this
isn't deterministic because different repositories may use different labels
to refer to the same schemaLocation, so again I'm forced to look up the
metadataPrefix using a separate ListMetadataFormats response. It would be
nice if the xsi:schemaLocation was immediately present.

Perhaps something like this would be ideal.

  <record>
    <header status="deleted">
      <identifier>oai:arXiv.org:hep-th/9901007</identifier>
      <datestamp>1999-12-21</datestamp>
    </header>
    <metadata xsi:schemaLocation="..." />
  </record>

It's a shame, but it's probably too late to fix this problem.

Jeff

> -----Original Message-----
> From: Young,Jeff [mailto:jyoung@oclc.org]
> Sent: Thursday, May 22, 2003 9:16 AM
> To: 'Hussein Suleman'; OAI-implementers (E-mail)
> Subject: RE: [OAI-implementers] OAI validation problem
> 
> 
> I've always made a point of being willfully ignorant about 
> XML Schemas, but
> it's time I gave it a try. The trick seems to be to define an 
> abstract type
> to use in place of <any namespace="##other".../> This 
> abstract type would
> then require the xsi:schemaLocation.
> 
> So, in place of this:
> 
> <complexType name="metadataType">
> 	<sequence>
> 		<any namespace="##other" processContents="strict"/>
> 	</sequence>
> </complexType>
> 
> do something like:
> 
> <xsd:complexType name="abstractContent" abstract="true">
> 	<xsd:sequence min-Occurs="1" maxOccurs="1">
> 		<any namespace="##other" processContents="strict" />
> 	</xsd:sequence>
> </xsd:complexType>
> 
> <complexType name="metadataType">
> 	<xsd:complexContent>
> 		<xsd:extension base="abstractContent">
> 			<xsd:attribute name="xsi:schemaLocation"
> type="xsd:string" use="required" />
> 		</xsd:extension>
> 	</xsd:complexContent>
> </complexType>
> 
> 
> If that isn't right, then maybe it's something like this:
> 
> <xsd:element name="Content" abstract="true" type="abstractContent" />
> 
> <xsd:complexType name="abstractContent">
>     <sequence>
>         <any namespace="##other" processContents="strict" />
>     </sequence>
>     <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
> use="required" />
> </xsd:complexType>
> 
> <complexType name="metadataType">
>     <xsd:sequence>
>         <xsd:element ref="Content" minOccurs="1" maxOccurs="1" />
>     </xsd:sequence>
> </complexType>
> 
> No promises, though..
> 
> Jeff
> 
> 
> > -----Original Message-----
> > From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> > Sent: Wednesday, May 21, 2003 5:55 PM
> > To: OAI-implementers (E-mail)
> > Subject: Re: [OAI-implementers] OAI validation problem
> > 
> > 
> > hi Jeff
> > 
> > some random thoughts ...
> > - could the schema be modified to reflect a required 
> > xsi:schemaLocation 
> > attribute? that might be the easiest fix.
> > - alternatively, does DOM3 propagate schema information like DOM2 
> > propagates namespaces? if so, then there might be a method to 
> > directly 
> > retrieve the schema for a given node/element.
> > 
> > ttfn,
> > ----hussein
> > 
> > 
> > Young,Jeff wrote:
> > > I think I found a hole in the OAI validation mechanisms. I 
> > believe the
> > > contents of the <metadata> element should be required to have an
> > > xsi:schemaLocation attribute to make it easier to identify 
> > the schema for
> > > the data. Without it, harvesters are forced to use the
> > > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look 
> > it up in the
> > > ListMetadataFormats response, which is more trouble than having it
> > > immediately available as an attribute.
> > > 
> > > The examples in the OAI protocol document do show it as an 
> > attribute, but
> > > apparently the Repository Explorer and the Registration 
> > validation available
> > > on the OAI site don't check for it.
> > > 
> > > Jeff
> > > 
> > > ---
> > > Jeffrey A. Young
> > > Consulting Software Engineer
> > > Office of Research, Mail Code 710
> > > OCLC Online Computer Library Center, Inc.
> > > 6565 Frantz Road
> > > Dublin, OH   43017-3395
> > > www.oclc.org
> > > 
> > > Voice:	614-764-4342
> > > Voice:	800-848-5878, ext. 4342
> > > Fax:	614-718-7477
> > > Email:	jyoung@oclc.org
> > > 
> > > 
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > 
> > 
> > 
> > -- 
> > 
> =====================================================================
> > hussein suleman ~ hussein@cs.uct.ac.za ~ 
http://www.husseinsspace.com
> =====================================================================
> 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 
_______________________________________________
OAI-implementers mailing list
List information, archives, preferences and to unsubscribe:
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers

From jyoung@oclc.org  Thu May 22 17:42:57 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 22 May 2003 12:42:57 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98063320D0@OA3-SERVER.oa.oclc.org>

It's worse than I thought. If the deleted records occur in a resumptionToken
ListRecords response, there is nothing whatsoever in the response to
indicate which format relates to the deleted records. Not only are deleted
records coupled to ListMetadataFormats responses, they are also coupled to
the initial ListRecords response!

Jeff

> -----Original Message-----
> From: Young,Jeff 
> Sent: Thursday, May 22, 2003 11:53 AM
> To: Young,Jeff; 'Hussein Suleman'; OAI-implementers (E-mail)
> Subject: RE: [OAI-implementers] OAI validation problem
> 
> 
> Here's another example of where I'm having trouble processing 
> OAI responses with XSLT. Below is a deleted record:
> 
>   <record>
>     <header status="deleted">
>       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
>       <datestamp>1999-12-21</datestamp>
>     </header>
>   </record>
> 
> This response indicates the deletion of a record in a 
> particular metadataFormat, not the deletion of the item. The 
> problem is that there is nothing in the response to indicate 
> which metadataFormat is being deleted except by looking at 
> /OAI-PMH/request/@metadataPrefix. Unfortunately, this isn't 
> deterministic because different repositories may use 
> different labels to refer to the same schemaLocation, so 
> again I'm forced to look up the metadataPrefix using a 
> separate ListMetadataFormats response. It would be nice if 
> the xsi:schemaLocation was immediately present.
> 
> Perhaps something like this would be ideal.
> 
>   <record>
>     <header status="deleted">
>       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
>       <datestamp>1999-12-21</datestamp>
>     </header>
>     <metadata xsi:schemaLocation="..." />
>   </record>
> 
> It's a shame, but it's probably too late to fix this problem.
> 
> Jeff
> 
> > -----Original Message-----
> > From: Young,Jeff [mailto:jyoung@oclc.org]
> > Sent: Thursday, May 22, 2003 9:16 AM
> > To: 'Hussein Suleman'; OAI-implementers (E-mail)
> > Subject: RE: [OAI-implementers] OAI validation problem
> > 
> > 
> > I've always made a point of being willfully ignorant about 
> > XML Schemas, but
> > it's time I gave it a try. The trick seems to be to define an 
> > abstract type
> > to use in place of <any namespace="##other".../> This 
> > abstract type would
> > then require the xsi:schemaLocation.
> > 
> > So, in place of this:
> > 
> > <complexType name="metadataType">
> > 	<sequence>
> > 		<any namespace="##other" processContents="strict"/>
> > 	</sequence>
> > </complexType>
> > 
> > do something like:
> > 
> > <xsd:complexType name="abstractContent" abstract="true">
> > 	<xsd:sequence min-Occurs="1" maxOccurs="1">
> > 		<any namespace="##other" processContents="strict" />
> > 	</xsd:sequence>
> > </xsd:complexType>
> > 
> > <complexType name="metadataType">
> > 	<xsd:complexContent>
> > 		<xsd:extension base="abstractContent">
> > 			<xsd:attribute name="xsi:schemaLocation"
> > type="xsd:string" use="required" />
> > 		</xsd:extension>
> > 	</xsd:complexContent>
> > </complexType>
> > 
> > 
> > If that isn't right, then maybe it's something like this:
> > 
> > <xsd:element name="Content" abstract="true" 
> type="abstractContent" />
> > 
> > <xsd:complexType name="abstractContent">
> >     <sequence>
> >         <any namespace="##other" processContents="strict" />
> >     </sequence>
> >     <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
> > use="required" />
> > </xsd:complexType>
> > 
> > <complexType name="metadataType">
> >     <xsd:sequence>
> >         <xsd:element ref="Content" minOccurs="1" maxOccurs="1" />
> >     </xsd:sequence>
> > </complexType>
> > 
> > No promises, though..
> > 
> > Jeff
> > 
> > 
> > > -----Original Message-----
> > > From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> > > Sent: Wednesday, May 21, 2003 5:55 PM
> > > To: OAI-implementers (E-mail)
> > > Subject: Re: [OAI-implementers] OAI validation problem
> > > 
> > > 
> > > hi Jeff
> > > 
> > > some random thoughts ...
> > > - could the schema be modified to reflect a required 
> > > xsi:schemaLocation 
> > > attribute? that might be the easiest fix.
> > > - alternatively, does DOM3 propagate schema information like DOM2 
> > > propagates namespaces? if so, then there might be a method to 
> > > directly 
> > > retrieve the schema for a given node/element.
> > > 
> > > ttfn,
> > > ----hussein
> > > 
> > > 
> > > Young,Jeff wrote:
> > > > I think I found a hole in the OAI validation mechanisms. I 
> > > believe the
> > > > contents of the <metadata> element should be required to have an
> > > > xsi:schemaLocation attribute to make it easier to identify 
> > > the schema for
> > > > the data. Without it, harvesters are forced to use the
> > > > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look 
> > > it up in the
> > > > ListMetadataFormats response, which is more trouble 
> than having it
> > > > immediately available as an attribute.
> > > > 
> > > > The examples in the OAI protocol document do show it as an 
> > > attribute, but
> > > > apparently the Repository Explorer and the Registration 
> > > validation available
> > > > on the OAI site don't check for it.
> > > > 
> > > > Jeff
> > > > 
> > > > ---
> > > > Jeffrey A. Young
> > > > Consulting Software Engineer
> > > > Office of Research, Mail Code 710
> > > > OCLC Online Computer Library Center, Inc.
> > > > 6565 Frantz Road
> > > > Dublin, OH   43017-3395
> > > > www.oclc.org
> > > > 
> > > > Voice:	614-764-4342
> > > > Voice:	800-848-5878, ext. 4342
> > > > Fax:	614-718-7477
> > > > Email:	jyoung@oclc.org
> > > > 
> > > > 
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > 
> > > 
> > > 
> > > -- 
> > > 
> > 
> =====================================================================
> > > hussein suleman ~ hussein@cs.uct.ac.za ~ 
> http://www.husseinsspace.com
> > 
> =====================================================================
> > 
> > 
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

From Naomi@cs.cornell.edu  Thu May 22 18:23:00 2003
From: Naomi@cs.cornell.edu (Naomi Dushay)
Date: Thu, 22 May 2003 13:23:00 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <B1D41F4ABBC45949BC3539F5831D442531C3B3@EXCHVS2.cs.cornell.edu>

Hi Jeff, 

I think there's an expectation that OAI harvesters will a) know which
harvester they are receiving from  b) know which metadata format they
requested  c) know what requests resumptionTokens refer to.

While it might be handy to have the schemaLocation, I believe it's
expected that the harvesters will keep that information if they find it
important.

I think your point about trying to explicitly require xsi:schemaLocation
on a <metadata> element is well taken.  I'm not sure exactly what the
XML schema might say ... I'll leave that to the protocol owners.

- Naomi Dushay
National Science Digital Library
Cornell University

> -----Original Message-----
> From: Young,Jeff [mailto:jyoung@oclc.org]
> Sent: Thursday, May 22, 2003 12:43 PM
> To: Young,Jeff; 'Hussein Suleman'; 'OAI-implementers (E-mail)'
> Subject: RE: [OAI-implementers] OAI validation problem
> 
> It's worse than I thought. If the deleted records occur in a
> resumptionToken
> ListRecords response, there is nothing whatsoever in the response to
> indicate which format relates to the deleted records. Not only are
deleted
> records coupled to ListMetadataFormats responses, they are also
coupled to
> the initial ListRecords response!
> 
> Jeff
> 
> > -----Original Message-----
> > From: Young,Jeff
> > Sent: Thursday, May 22, 2003 11:53 AM
> > To: Young,Jeff; 'Hussein Suleman'; OAI-implementers (E-mail)
> > Subject: RE: [OAI-implementers] OAI validation problem
> >
> >
> > Here's another example of where I'm having trouble processing
> > OAI responses with XSLT. Below is a deleted record:
> >
> >   <record>
> >     <header status="deleted">
> >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> >       <datestamp>1999-12-21</datestamp>
> >     </header>
> >   </record>
> >
> > This response indicates the deletion of a record in a
> > particular metadataFormat, not the deletion of the item. The
> > problem is that there is nothing in the response to indicate
> > which metadataFormat is being deleted except by looking at
> > /OAI-PMH/request/@metadataPrefix. Unfortunately, this isn't
> > deterministic because different repositories may use
> > different labels to refer to the same schemaLocation, so
> > again I'm forced to look up the metadataPrefix using a
> > separate ListMetadataFormats response. It would be nice if
> > the xsi:schemaLocation was immediately present.
> >
> > Perhaps something like this would be ideal.
> >
> >   <record>
> >     <header status="deleted">
> >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> >       <datestamp>1999-12-21</datestamp>
> >     </header>
> >     <metadata xsi:schemaLocation="..." />
> >   </record>
> >
> > It's a shame, but it's probably too late to fix this problem.
> >
> > Jeff
> >
> > > -----Original Message-----
> > > From: Young,Jeff [mailto:jyoung@oclc.org]
> > > Sent: Thursday, May 22, 2003 9:16 AM
> > > To: 'Hussein Suleman'; OAI-implementers (E-mail)
> > > Subject: RE: [OAI-implementers] OAI validation problem
> > >
> > >
> > > I've always made a point of being willfully ignorant about
> > > XML Schemas, but
> > > it's time I gave it a try. The trick seems to be to define an
> > > abstract type
> > > to use in place of <any namespace="##other".../> This
> > > abstract type would
> > > then require the xsi:schemaLocation.
> > >
> > > So, in place of this:
> > >
> > > <complexType name="metadataType">
> > > 	<sequence>
> > > 		<any namespace="##other" processContents="strict"/>
> > > 	</sequence>
> > > </complexType>
> > >
> > > do something like:
> > >
> > > <xsd:complexType name="abstractContent" abstract="true">
> > > 	<xsd:sequence min-Occurs="1" maxOccurs="1">
> > > 		<any namespace="##other" processContents="strict" />
> > > 	</xsd:sequence>
> > > </xsd:complexType>
> > >
> > > <complexType name="metadataType">
> > > 	<xsd:complexContent>
> > > 		<xsd:extension base="abstractContent">
> > > 			<xsd:attribute name="xsi:schemaLocation"
> > > type="xsd:string" use="required" />
> > > 		</xsd:extension>
> > > 	</xsd:complexContent>
> > > </complexType>
> > >
> > >
> > > If that isn't right, then maybe it's something like this:
> > >
> > > <xsd:element name="Content" abstract="true"
> > type="abstractContent" />
> > >
> > > <xsd:complexType name="abstractContent">
> > >     <sequence>
> > >         <any namespace="##other" processContents="strict" />
> > >     </sequence>
> > >     <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
> > > use="required" />
> > > </xsd:complexType>
> > >
> > > <complexType name="metadataType">
> > >     <xsd:sequence>
> > >         <xsd:element ref="Content" minOccurs="1" maxOccurs="1" />
> > >     </xsd:sequence>
> > > </complexType>
> > >
> > > No promises, though..
> > >
> > > Jeff
> > >
> > >
> > > > -----Original Message-----
> > > > From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> > > > Sent: Wednesday, May 21, 2003 5:55 PM
> > > > To: OAI-implementers (E-mail)
> > > > Subject: Re: [OAI-implementers] OAI validation problem
> > > >
> > > >
> > > > hi Jeff
> > > >
> > > > some random thoughts ...
> > > > - could the schema be modified to reflect a required
> > > > xsi:schemaLocation
> > > > attribute? that might be the easiest fix.
> > > > - alternatively, does DOM3 propagate schema information like
DOM2
> > > > propagates namespaces? if so, then there might be a method to
> > > > directly
> > > > retrieve the schema for a given node/element.
> > > >
> > > > ttfn,
> > > > ----hussein
> > > >
> > > >
> > > > Young,Jeff wrote:
> > > > > I think I found a hole in the OAI validation mechanisms. I
> > > > believe the
> > > > > contents of the <metadata> element should be required to have
an
> > > > > xsi:schemaLocation attribute to make it easier to identify
> > > > the schema for
> > > > > the data. Without it, harvesters are forced to use the
> > > > > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look
> > > > it up in the
> > > > > ListMetadataFormats response, which is more trouble
> > than having it
> > > > > immediately available as an attribute.
> > > > >
> > > > > The examples in the OAI protocol document do show it as an
> > > > attribute, but
> > > > > apparently the Repository Explorer and the Registration
> > > > validation available
> > > > > on the OAI site don't check for it.
> > > > >
> > > > > Jeff
> > > > >
> > > > > ---
> > > > > Jeffrey A. Young
> > > > > Consulting Software Engineer
> > > > > Office of Research, Mail Code 710
> > > > > OCLC Online Computer Library Center, Inc.
> > > > > 6565 Frantz Road
> > > > > Dublin, OH   43017-3395
> > > > > www.oclc.org
> > > > >
> > > > > Voice:	614-764-4342
> > > > > Voice:	800-848-5878, ext. 4342
> > > > > Fax:	614-718-7477
> > > > > Email:	jyoung@oclc.org
> > > > >
> > > > >
> > > > > _______________________________________________
> > > > > OAI-implementers mailing list
> > > > > List information, archives, preferences and to unsubscribe:
> > > > >
http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > >
> > > >
> > > >
> > > > --
> > > >
> > >
> >
=====================================================================
> > > > hussein suleman ~ hussein@cs.uct.ac.za ~
> > http://www.husseinsspace.com
> > >
> >
=====================================================================
> > >
> > >
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > >
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> >
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers


From simeon@cs.cornell.edu  Thu May 22 18:23:43 2003
From: simeon@cs.cornell.edu (Simeon Warner)
Date: Thu, 22 May 2003 13:23:43 -0400 (EDT)
Subject: [OAI-implementers] OAI validation problem
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE98063320D0@OA3-SERVER.oa.oclc.org>
Message-ID: <Pine.LNX.4.44.0305221308070.23923-100000@ice.cs.cornell.edu>

There seem to be two issues:

1) the metadata format or a record is identified via a metadataPrefix
which may only be indirectly linked to a schemaLocation via the
ListMetadataFormats response. 

I have previsouly wondered whether we should have avoided introducing
metadataPrefix at all and used just the namespace URI. However, given that
we have this level of indirection I'm not sure it is a bad thing to have a
single canonical place (the ListMetadataFormats response) for the
information linking metadataPrefix to namespace and schemaLocation. My
harvester does ListMetadataFormats request before harvesting to check the
metadataPrefix is supported anyway.

2) continuation responses include just a resumptionToken and not a
complete set of initial parameters for the request. These responses are
thus not self-contained.

I've always thought that one should regard the complete list, the set of
all responses from the first (with initial request recorded) to the last
(indicated by null resumptionToken), as "the response". I this case there
is no ambiguity.

Cheers,
Simeon.


On Thu, 22 May 2003, Young,Jeff wrote:
> It's worse than I thought. If the deleted records occur in a resumptionToken
> ListRecords response, there is nothing whatsoever in the response to
> indicate which format relates to the deleted records. Not only are deleted
> records coupled to ListMetadataFormats responses, they are also coupled to
> the initial ListRecords response!
> 
> Jeff
> 
> > -----Original Message-----
> > From: Young,Jeff 
> > Sent: Thursday, May 22, 2003 11:53 AM
> > To: Young,Jeff; 'Hussein Suleman'; OAI-implementers (E-mail)
> > Subject: RE: [OAI-implementers] OAI validation problem
> > 
> > 
> > Here's another example of where I'm having trouble processing 
> > OAI responses with XSLT. Below is a deleted record:
> > 
> >   <record>
> >     <header status="deleted">
> >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> >       <datestamp>1999-12-21</datestamp>
> >     </header>
> >   </record>
> > 
> > This response indicates the deletion of a record in a 
> > particular metadataFormat, not the deletion of the item. The 
> > problem is that there is nothing in the response to indicate 
> > which metadataFormat is being deleted except by looking at 
> > /OAI-PMH/request/@metadataPrefix. Unfortunately, this isn't 
> > deterministic because different repositories may use 
> > different labels to refer to the same schemaLocation, so 
> > again I'm forced to look up the metadataPrefix using a 
> > separate ListMetadataFormats response. It would be nice if 
> > the xsi:schemaLocation was immediately present.
> > 
> > Perhaps something like this would be ideal.
> > 
> >   <record>
> >     <header status="deleted">
> >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> >       <datestamp>1999-12-21</datestamp>
> >     </header>
> >     <DEFANGED_metadata xsi:schemaLocation="..." />
> >   </record>
> > 
> > It's a shame, but it's probably too late to fix this problem.
> > 
> > Jeff
> > 
> > > -----Original Message-----
> > > From: Young,Jeff [mailto:jyoung@oclc.org]
> > > Sent: Thursday, May 22, 2003 9:16 AM
> > > To: 'Hussein Suleman'; OAI-implementers (E-mail)
> > > Subject: RE: [OAI-implementers] OAI validation problem
> > > 
> > > 
> > > I've always made a point of being willfully ignorant about 
> > > XML Schemas, but
> > > it's time I gave it a try. The trick seems to be to define an 
> > > abstract type
> > > to use in place of <any namespace="##other".../> This 
> > > abstract type would
> > > then require the xsi:schemaLocation.
> > > 
> > > So, in place of this:
> > > 
> > > <complexType name="metadataType">
> > > 	<sequence>
> > > 		<any namespace="##other" processContents="strict"/>
> > > 	</sequence>
> > > </complexType>
> > > 
> > > do something like:
> > > 
> > > <xsd:complexType name="abstractContent" abstract="true">
> > > 	<xsd:sequence min-Occurs="1" maxOccurs="1">
> > > 		<any namespace="##other" processContents="strict" />
> > > 	</xsd:sequence>
> > > </xsd:complexType>
> > > 
> > > <complexType name="metadataType">
> > > 	<xsd:complexContent>
> > > 		<xsd:extension base="abstractContent">
> > > 			<xsd:attribute name="xsi:schemaLocation"
> > > type="xsd:string" use="required" />
> > > 		</xsd:extension>
> > > 	</xsd:complexContent>
> > > </complexType>
> > > 
> > > 
> > > If that isn't right, then maybe it's something like this:
> > > 
> > > <xsd:element name="Content" abstract="true" 
> > type="abstractContent" />
> > > 
> > > <xsd:complexType name="abstractContent">
> > >     <sequence>
> > >         <any namespace="##other" processContents="strict" />
> > >     </sequence>
> > >     <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
> > > use="required" />
> > > </xsd:complexType>
> > > 
> > > <complexType name="metadataType">
> > >     <xsd:sequence>
> > >         <xsd:element ref="Content" minOccurs="1" maxOccurs="1" />
> > >     </xsd:sequence>
> > > </complexType>
> > > 
> > > No promises, though..
> > > 
> > > Jeff
> > > 
> > > 
> > > > -----Original Message-----
> > > > From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> > > > Sent: Wednesday, May 21, 2003 5:55 PM
> > > > To: OAI-implementers (E-mail)
> > > > Subject: Re: [OAI-implementers] OAI validation problem
> > > > 
> > > > 
> > > > hi Jeff
> > > > 
> > > > some random thoughts ...
> > > > - could the schema be modified to reflect a required 
> > > > xsi:schemaLocation 
> > > > attribute? that might be the easiest fix.
> > > > - alternatively, does DOM3 propagate schema information like DOM2 
> > > > propagates namespaces? if so, then there might be a method to 
> > > > directly 
> > > > retrieve the schema for a given node/element.
> > > > 
> > > > ttfn,
> > > > ----hussein
> > > > 
> > > > 
> > > > Young,Jeff wrote:
> > > > > I think I found a hole in the OAI validation mechanisms. I 
> > > > believe the
> > > > > contents of the <DEFANGED_metadata> element should be required to have an
> > > > > xsi:schemaLocation attribute to make it easier to identify 
> > > > the schema for
> > > > > the data. Without it, harvesters are forced to use the
> > > > > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look 
> > > > it up in the
> > > > > ListMetadataFormats response, which is more trouble 
> > than having it
> > > > > immediately available as an attribute.
> > > > > 
> > > > > The examples in the OAI protocol document do show it as an 
> > > > attribute, but
> > > > > apparently the Repository Explorer and the Registration 
> > > > validation available
> > > > > on the OAI site don't check for it.
> > > > > 
> > > > > Jeff
> > > > > 
> > > > > ---
> > > > > Jeffrey A. Young
> > > > > Consulting Software Engineer
> > > > > Office of Research, Mail Code 710
> > > > > OCLC Online Computer Library Center, Inc.
> > > > > 6565 Frantz Road
> > > > > Dublin, OH   43017-3395
> > > > > www.oclc.org
> > > > > 
> > > > > Voice:	614-764-4342
> > > > > Voice:	800-848-5878, ext. 4342
> > > > > Fax:	614-718-7477
> > > > > Email:	jyoung@oclc.org
> > > > > 
> > > > > 
> > > > > _______________________________________________
> > > > > OAI-implementers mailing list
> > > > > List information, archives, preferences and to unsubscribe:
> > > > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > > 
> > > > 
> > > > 
> > > > -- 
> > > > 
> > > 
> > =====================================================================
> > > > hussein suleman ~ hussein@cs.uct.ac.za ~ 
> > http://www.husseinsspace.com
> > > 
> > =====================================================================
> > > 
> > > 
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > 
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 


From jyoung@oclc.org  Thu May 22 18:40:45 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 22 May 2003 13:40:45 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98063320D2@OA3-SERVER.oa.oclc.org>

I would argue that OAI has done an excellent job of decoupling OAI responses
so they can stand alone. These two cases related to deleted records are the
only exceptions to this so far.

I've been amazed by the potential of including XSLT stylesheet reference
with my OAI responses so they can be rendered in a browser. Herbert, Thom
Hickey, and I plan to publish a paper in D-Lib in part to demonstrate this,
and I will be presenting some examples at the ALA conference next month. 

This type of coupling between responses prevents me from doing anything
useful with deleted records because browsers can only deal with one response
at a time.

I understand that OAI is a harvesting protocol and that I'm pushing the
boundaries, but it would be a shame to reject the possibilities when it's so
close to being much more than that.

Jeff

> -----Original Message-----
> From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> Sent: Thursday, May 22, 2003 1:24 PM
> To: 'OAI-implementers (E-mail)'
> Subject: RE: [OAI-implementers] OAI validation problem
> 
> 
> 
> There seem to be two issues:
> 
> 1) the metadata format or a record is identified via a metadataPrefix
> which may only be indirectly linked to a schemaLocation via the
> ListMetadataFormats response. 
> 
> I have previsouly wondered whether we should have avoided introducing
> metadataPrefix at all and used just the namespace URI. 
> However, given that
> we have this level of indirection I'm not sure it is a bad 
> thing to have a
> single canonical place (the ListMetadataFormats response) for the
> information linking metadataPrefix to namespace and schemaLocation. My
> harvester does ListMetadataFormats request before harvesting 
> to check the
> metadataPrefix is supported anyway.
> 
> 2) continuation responses include just a resumptionToken and not a
> complete set of initial parameters for the request. These 
> responses are
> thus not self-contained.
> 
> I've always thought that one should regard the complete list, 
> the set of
> all responses from the first (with initial request recorded) 
> to the last
> (indicated by null resumptionToken), as "the response". I 
> this case there
> is no ambiguity.
> 
> Cheers,
> Simeon.
> 
> 
> On Thu, 22 May 2003, Young,Jeff wrote:
> > It's worse than I thought. If the deleted records occur in 
> a resumptionToken
> > ListRecords response, there is nothing whatsoever in the response to
> > indicate which format relates to the deleted records. Not 
> only are deleted
> > records coupled to ListMetadataFormats responses, they are 
> also coupled to
> > the initial ListRecords response!
> > 
> > Jeff
> > 
> > > -----Original Message-----
> > > From: Young,Jeff 
> > > Sent: Thursday, May 22, 2003 11:53 AM
> > > To: Young,Jeff; 'Hussein Suleman'; OAI-implementers (E-mail)
> > > Subject: RE: [OAI-implementers] OAI validation problem
> > > 
> > > 
> > > Here's another example of where I'm having trouble processing 
> > > OAI responses with XSLT. Below is a deleted record:
> > > 
> > >   <record>
> > >     <header status="deleted">
> > >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> > >       <datestamp>1999-12-21</datestamp>
> > >     </header>
> > >   </record>
> > > 
> > > This response indicates the deletion of a record in a 
> > > particular metadataFormat, not the deletion of the item. The 
> > > problem is that there is nothing in the response to indicate 
> > > which metadataFormat is being deleted except by looking at 
> > > /OAI-PMH/request/@metadataPrefix. Unfortunately, this isn't 
> > > deterministic because different repositories may use 
> > > different labels to refer to the same schemaLocation, so 
> > > again I'm forced to look up the metadataPrefix using a 
> > > separate ListMetadataFormats response. It would be nice if 
> > > the xsi:schemaLocation was immediately present.
> > > 
> > > Perhaps something like this would be ideal.
> > > 
> > >   <record>
> > >     <header status="deleted">
> > >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> > >       <datestamp>1999-12-21</datestamp>
> > >     </header>
> > >     <DEFANGED_metadata xsi:schemaLocation="..." />
> > >   </record>
> > > 
> > > It's a shame, but it's probably too late to fix this problem.
> > > 
> > > Jeff
> > > 
> > > > -----Original Message-----
> > > > From: Young,Jeff [mailto:jyoung@oclc.org]
> > > > Sent: Thursday, May 22, 2003 9:16 AM
> > > > To: 'Hussein Suleman'; OAI-implementers (E-mail)
> > > > Subject: RE: [OAI-implementers] OAI validation problem
> > > > 
> > > > 
> > > > I've always made a point of being willfully ignorant about 
> > > > XML Schemas, but
> > > > it's time I gave it a try. The trick seems to be to define an 
> > > > abstract type
> > > > to use in place of <any namespace="##other".../> This 
> > > > abstract type would
> > > > then require the xsi:schemaLocation.
> > > > 
> > > > So, in place of this:
> > > > 
> > > > <complexType name="metadataType">
> > > > 	<sequence>
> > > > 		<any namespace="##other" 
> processContents="strict"/>
> > > > 	</sequence>
> > > > </complexType>
> > > > 
> > > > do something like:
> > > > 
> > > > <xsd:complexType name="abstractContent" abstract="true">
> > > > 	<xsd:sequence min-Occurs="1" maxOccurs="1">
> > > > 		<any namespace="##other" 
> processContents="strict" />
> > > > 	</xsd:sequence>
> > > > </xsd:complexType>
> > > > 
> > > > <complexType name="metadataType">
> > > > 	<xsd:complexContent>
> > > > 		<xsd:extension base="abstractContent">
> > > > 			<xsd:attribute name="xsi:schemaLocation"
> > > > type="xsd:string" use="required" />
> > > > 		</xsd:extension>
> > > > 	</xsd:complexContent>
> > > > </complexType>
> > > > 
> > > > 
> > > > If that isn't right, then maybe it's something like this:
> > > > 
> > > > <xsd:element name="Content" abstract="true" 
> > > type="abstractContent" />
> > > > 
> > > > <xsd:complexType name="abstractContent">
> > > >     <sequence>
> > > >         <any namespace="##other" processContents="strict" />
> > > >     </sequence>
> > > >     <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
> > > > use="required" />
> > > > </xsd:complexType>
> > > > 
> > > > <complexType name="metadataType">
> > > >     <xsd:sequence>
> > > >         <xsd:element ref="Content" minOccurs="1" 
> maxOccurs="1" />
> > > >     </xsd:sequence>
> > > > </complexType>
> > > > 
> > > > No promises, though..
> > > > 
> > > > Jeff
> > > > 
> > > > 
> > > > > -----Original Message-----
> > > > > From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> > > > > Sent: Wednesday, May 21, 2003 5:55 PM
> > > > > To: OAI-implementers (E-mail)
> > > > > Subject: Re: [OAI-implementers] OAI validation problem
> > > > > 
> > > > > 
> > > > > hi Jeff
> > > > > 
> > > > > some random thoughts ...
> > > > > - could the schema be modified to reflect a required 
> > > > > xsi:schemaLocation 
> > > > > attribute? that might be the easiest fix.
> > > > > - alternatively, does DOM3 propagate schema 
> information like DOM2 
> > > > > propagates namespaces? if so, then there might be a method to 
> > > > > directly 
> > > > > retrieve the schema for a given node/element.
> > > > > 
> > > > > ttfn,
> > > > > ----hussein
> > > > > 
> > > > > 
> > > > > Young,Jeff wrote:
> > > > > > I think I found a hole in the OAI validation mechanisms. I 
> > > > > believe the
> > > > > > contents of the <DEFANGED_metadata> element should 
> be required to have an
> > > > > > xsi:schemaLocation attribute to make it easier to identify 
> > > > > the schema for
> > > > > > the data. Without it, harvesters are forced to use the
> > > > > > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look 
> > > > > it up in the
> > > > > > ListMetadataFormats response, which is more trouble 
> > > than having it
> > > > > > immediately available as an attribute.
> > > > > > 
> > > > > > The examples in the OAI protocol document do show it as an 
> > > > > attribute, but
> > > > > > apparently the Repository Explorer and the Registration 
> > > > > validation available
> > > > > > on the OAI site don't check for it.
> > > > > > 
> > > > > > Jeff
> > > > > > 
> > > > > > ---
> > > > > > Jeffrey A. Young
> > > > > > Consulting Software Engineer
> > > > > > Office of Research, Mail Code 710
> > > > > > OCLC Online Computer Library Center, Inc.
> > > > > > 6565 Frantz Road
> > > > > > Dublin, OH   43017-3395
> > > > > > www.oclc.org
> > > > > > 
> > > > > > Voice:	614-764-4342
> > > > > > Voice:	800-848-5878, ext. 4342
> > > > > > Fax:	614-718-7477
> > > > > > Email:	jyoung@oclc.org
> > > > > > 
> > > > > > 
> > > > > > _______________________________________________
> > > > > > OAI-implementers mailing list
> > > > > > List information, archives, preferences and to unsubscribe:
> > > > > > 
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > > > 
> > > > > 
> > > > > 
> > > > > -- 
> > > > > 
> > > > 
> > > 
> =====================================================================
> > > > > hussein suleman ~ hussein@cs.uct.ac.za ~ 
> > > http://www.husseinsspace.com
> > > > 
> > > 
> =====================================================================
> > > > 
> > > > 
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > 
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > 
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 

From liu_x@lanl.gov  Thu May 22 08:37:18 2003
From: liu_x@lanl.gov (Xiaoming Liu)
Date: 22 May 2003 01:37:18 -0600
Subject: [OAI-implementers] OAI validation problem
In-Reply-To: <E5431CF93E29F9478878F623E5B9CE98063320D2@OA3-SERVER.oa.oclc.org>
References: <E5431CF93E29F9478878F623E5B9CE98063320D2@OA3-SERVER.oa.oclc.org>
Message-ID: <1053589038.21968.27.camel@intrepid>

On Thu, 2003-05-22 at 11:40, Young,Jeff wrote:
> I would argue that OAI has done an excellent job of decoupling OAI responses
> so they can stand alone. These two cases related to deleted records are the
> only exceptions to this so far.
> 

I think all responses with "resumptionToken" cannot stand alone, they
are basically context sensitive -- they only make sense if you consider
the original requests parameters (from, until, metadataPrefix, sets).


> I've been amazed by the potential of including XSLT stylesheet reference
> with my OAI responses so they can be rendered in a browser. Herbert, Thom
> Hickey, and I plan to publish a paper in D-Lib in part to demonstrate this,
> and I will be presenting some examples at the ALA conference next month. 
> 
> This type of coupling between responses prevents me from doing anything
> useful with deleted records because browsers can only deal with one response
> at a time.

I am not sure if XSL parameter can be used in this situation. Or a
server side rendering of XSL can be used, it certainly can solve these
session problems but is not as beautiful as your solution.

liu

> 
> I understand that OAI is a harvesting protocol and that I'm pushing the
> boundaries, but it would be a shame to reject the possibilities when it's so
> close to being much more than that.
> 
> Jeff
> 
> > -----Original Message-----
> > From: Simeon Warner [mailto:simeon@cs.cornell.edu]
> > Sent: Thursday, May 22, 2003 1:24 PM
> > To: 'OAI-implementers (E-mail)'
> > Subject: RE: [OAI-implementers] OAI validation problem
> > 
> > 
> > 
> > There seem to be two issues:
> > 
> > 1) the metadata format or a record is identified via a metadataPrefix
> > which may only be indirectly linked to a schemaLocation via the
> > ListMetadataFormats response. 
> > 
> > I have previsouly wondered whether we should have avoided introducing
> > metadataPrefix at all and used just the namespace URI. 
> > However, given that
> > we have this level of indirection I'm not sure it is a bad 
> > thing to have a
> > single canonical place (the ListMetadataFormats response) for the
> > information linking metadataPrefix to namespace and schemaLocation. My
> > harvester does ListMetadataFormats request before harvesting 
> > to check the
> > metadataPrefix is supported anyway.
> > 
> > 2) continuation responses include just a resumptionToken and not a
> > complete set of initial parameters for the request. These 
> > responses are
> > thus not self-contained.
> > 
> > I've always thought that one should regard the complete list, 
> > the set of
> > all responses from the first (with initial request recorded) 
> > to the last
> > (indicated by null resumptionToken), as "the response". I 
> > this case there
> > is no ambiguity.
> > 
> > Cheers,
> > Simeon.
> > 
> > 
> > On Thu, 22 May 2003, Young,Jeff wrote:
> > > It's worse than I thought. If the deleted records occur in 
> > a resumptionToken
> > > ListRecords response, there is nothing whatsoever in the response to
> > > indicate which format relates to the deleted records. Not 
> > only are deleted
> > > records coupled to ListMetadataFormats responses, they are 
> > also coupled to
> > > the initial ListRecords response!
> > > 
> > > Jeff
> > > 
> > > > -----Original Message-----
> > > > From: Young,Jeff 
> > > > Sent: Thursday, May 22, 2003 11:53 AM
> > > > To: Young,Jeff; 'Hussein Suleman'; OAI-implementers (E-mail)
> > > > Subject: RE: [OAI-implementers] OAI validation problem
> > > > 
> > > > 
> > > > Here's another example of where I'm having trouble processing 
> > > > OAI responses with XSLT. Below is a deleted record:
> > > > 
> > > >   <record>
> > > >     <header status="deleted">
> > > >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> > > >       <datestamp>1999-12-21</datestamp>
> > > >     </header>
> > > >   </record>
> > > > 
> > > > This response indicates the deletion of a record in a 
> > > > particular metadataFormat, not the deletion of the item. The 
> > > > problem is that there is nothing in the response to indicate 
> > > > which metadataFormat is being deleted except by looking at 
> > > > /OAI-PMH/request/@metadataPrefix. Unfortunately, this isn't 
> > > > deterministic because different repositories may use 
> > > > different labels to refer to the same schemaLocation, so 
> > > > again I'm forced to look up the metadataPrefix using a 
> > > > separate ListMetadataFormats response. It would be nice if 
> > > > the xsi:schemaLocation was immediately present.
> > > > 
> > > > Perhaps something like this would be ideal.
> > > > 
> > > >   <record>
> > > >     <header status="deleted">
> > > >       <identifier>oai:arXiv.org:hep-th/9901007</identifier>
> > > >       <datestamp>1999-12-21</datestamp>
> > > >     </header>
> > > >     <DEFANGED_metadata xsi:schemaLocation="..." />
> > > >   </record>
> > > > 
> > > > It's a shame, but it's probably too late to fix this problem.
> > > > 
> > > > Jeff
> > > > 
> > > > > -----Original Message-----
> > > > > From: Young,Jeff [mailto:jyoung@oclc.org]
> > > > > Sent: Thursday, May 22, 2003 9:16 AM
> > > > > To: 'Hussein Suleman'; OAI-implementers (E-mail)
> > > > > Subject: RE: [OAI-implementers] OAI validation problem
> > > > > 
> > > > > 
> > > > > I've always made a point of being willfully ignorant about 
> > > > > XML Schemas, but
> > > > > it's time I gave it a try. The trick seems to be to define an 
> > > > > abstract type
> > > > > to use in place of <any namespace="##other".../> This 
> > > > > abstract type would
> > > > > then require the xsi:schemaLocation.
> > > > > 
> > > > > So, in place of this:
> > > > > 
> > > > > <complexType name="metadataType">
> > > > > 	<sequence>
> > > > > 		<any namespace="##other" 
> > processContents="strict"/>
> > > > > 	</sequence>
> > > > > </complexType>
> > > > > 
> > > > > do something like:
> > > > > 
> > > > > <xsd:complexType name="abstractContent" abstract="true">
> > > > > 	<xsd:sequence min-Occurs="1" maxOccurs="1">
> > > > > 		<any namespace="##other" 
> > processContents="strict" />
> > > > > 	</xsd:sequence>
> > > > > </xsd:complexType>
> > > > > 
> > > > > <complexType name="metadataType">
> > > > > 	<xsd:complexContent>
> > > > > 		<xsd:extension base="abstractContent">
> > > > > 			<xsd:attribute name="xsi:schemaLocation"
> > > > > type="xsd:string" use="required" />
> > > > > 		</xsd:extension>
> > > > > 	</xsd:complexContent>
> > > > > </complexType>
> > > > > 
> > > > > 
> > > > > If that isn't right, then maybe it's something like this:
> > > > > 
> > > > > <xsd:element name="Content" abstract="true" 
> > > > type="abstractContent" />
> > > > > 
> > > > > <xsd:complexType name="abstractContent">
> > > > >     <sequence>
> > > > >         <any namespace="##other" processContents="strict" />
> > > > >     </sequence>
> > > > >     <xsd:attribute name="xsi:schemaLocation" type="xsd:string"
> > > > > use="required" />
> > > > > </xsd:complexType>
> > > > > 
> > > > > <complexType name="metadataType">
> > > > >     <xsd:sequence>
> > > > >         <xsd:element ref="Content" minOccurs="1" 
> > maxOccurs="1" />
> > > > >     </xsd:sequence>
> > > > > </complexType>
> > > > > 
> > > > > No promises, though..
> > > > > 
> > > > > Jeff
> > > > > 
> > > > > 
> > > > > > -----Original Message-----
> > > > > > From: Hussein Suleman [mailto:hussein@cs.uct.ac.za]
> > > > > > Sent: Wednesday, May 21, 2003 5:55 PM
> > > > > > To: OAI-implementers (E-mail)
> > > > > > Subject: Re: [OAI-implementers] OAI validation problem
> > > > > > 
> > > > > > 
> > > > > > hi Jeff
> > > > > > 
> > > > > > some random thoughts ...
> > > > > > - could the schema be modified to reflect a required 
> > > > > > xsi:schemaLocation 
> > > > > > attribute? that might be the easiest fix.
> > > > > > - alternatively, does DOM3 propagate schema 
> > information like DOM2 
> > > > > > propagates namespaces? if so, then there might be a method to 
> > > > > > directly 
> > > > > > retrieve the schema for a given node/element.
> > > > > > 
> > > > > > ttfn,
> > > > > > ----hussein
> > > > > > 
> > > > > > 
> > > > > > Young,Jeff wrote:
> > > > > > > I think I found a hole in the OAI validation mechanisms. I 
> > > > > > believe the
> > > > > > > contents of the <DEFANGED_metadata> element should 
> > be required to have an
> > > > > > > xsi:schemaLocation attribute to make it easier to identify 
> > > > > > the schema for
> > > > > > > the data. Without it, harvesters are forced to use the
> > > > > > > /oai2:OAI-PMH/oai2:request/@metadataPrefix value and look 
> > > > > > it up in the
> > > > > > > ListMetadataFormats response, which is more trouble 
> > > > than having it
> > > > > > > immediately available as an attribute.
> > > > > > > 
> > > > > > > The examples in the OAI protocol document do show it as an 
> > > > > > attribute, but
> > > > > > > apparently the Repository Explorer and the Registration 
> > > > > > validation available
> > > > > > > on the OAI site don't check for it.
> > > > > > > 
> > > > > > > Jeff
> > > > > > > 
> > > > > > > ---
> > > > > > > Jeffrey A. Young
> > > > > > > Consulting Software Engineer
> > > > > > > Office of Research, Mail Code 710
> > > > > > > OCLC Online Computer Library Center, Inc.
> > > > > > > 6565 Frantz Road
> > > > > > > Dublin, OH   43017-3395
> > > > > > > www.oclc.org
> > > > > > > 
> > > > > > > Voice:	614-764-4342
> > > > > > > Voice:	800-848-5878, ext. 4342
> > > > > > > Fax:	614-718-7477
> > > > > > > Email:	jyoung@oclc.org
> > > > > > > 
> > > > > > > 
> > > > > > > _______________________________________________
> > > > > > > OAI-implementers mailing list
> > > > > > > List information, archives, preferences and to unsubscribe:
> > > > > > > 
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > > > > 
> > > > > > 
> > > > > > 
> > > > > > -- 
> > > > > > 
> > > > > 
> > > > 
> > =====================================================================
> > > > > > hussein suleman ~ hussein@cs.uct.ac.za ~ 
> > > > http://www.husseinsspace.com
> > > > > 
> > > > 
> > =====================================================================
> > > > > 
> > > > > 
> > > > > _______________________________________________
> > > > > OAI-implementers mailing list
> > > > > List information, archives, preferences and to unsubscribe:
> > > > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > > 
> > > > _______________________________________________
> > > > OAI-implementers mailing list
> > > > List information, archives, preferences and to unsubscribe:
> > > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > > 
> > > _______________________________________________
> > > OAI-implementers mailing list
> > > List information, archives, preferences and to unsubscribe:
> > > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > > 
> > 
> > _______________________________________________
> > OAI-implementers mailing list
> > List information, archives, preferences and to unsubscribe:
> > http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> > 
> _______________________________________________
> OAI-implementers mailing list
> List information, archives, preferences and to unsubscribe:
> http://oaisrv.nsdl.cornell.edu/mailman/listinfo/oai-implementers
> 



From jyoung@oclc.org  Thu May 22 21:15:34 2003
From: jyoung@oclc.org (Young,Jeff)
Date: Thu, 22 May 2003 16:15:34 -0400
Subject: [OAI-implementers] OAI validation problem
Message-ID: <E5431CF93E29F9478878F623E5B9CE98063320D4@OA3-SERVER.oa.oclc.org>

> -----Original Message-----
> From: Xiaoming Liu [mailto:liu_x@lanl.gov]
> Sent: Thursday, May 22, 2003 3:37 AM
> To: Young,Jeff
> Cc: 'Simeon Warner'; 'OAI-implementers "(E-mail)'"
> Subject: RE: [OAI-implementers] OAI validation problem
> 
> 
> On Thu, 2003-05-22 at 11:40, Young,Jeff wrote:
> > I would argue that OAI has done an excellent job of 
> decoupling OAI responses
> > so they can stand alone. These two cases related to deleted 
> records are the
> > only exceptions to this so far.
> > 
> 
> I think all responses with "resumptionToken" cannot stand alone, they
> are basically context sensitive -- they only make sense if 
> you consider
> the original requests parameters (from, until, metadataPrefix, sets).

Yes and no. In the applications I've created so far,
ListRecords/ListIdentifiers return the entire set of records, so
resumptionTokens haven't been an issue. For example,
http://alcme.oclc.org/gsafd/OAIHandler?verb=ListRecords&metadataPrefix=z39_1
9. But, if the thesaurus was larger, I might be tempted to use
ResumptionTokens to take them from one screen full of data to the next. The
problem with this is that you can't move backwards and forwards
symmetrically. Other than that, though, it works fine without my XSLT
knowing anything about the lost parameters (other than the deleted records
problem).

But, I can play tricks with resumptionTokens that will allow me to
arbitrarily move across pages. Imagine that my resumptionTokens are based on
dividing up the ListRecords responses by the first letter of the term (e.g.
resumptionToken='a-m' followed by resumptionToken='n-z'). My
resumptionTokens are stateless, so there is no need for them to be invoked
in a particular order. If I decide to do resumptionTokens in this way, then
I can create hotlinks across the top of the page that allow users to jump to
any arbitrary letter of the alphabet. My thesaurus can be as large as I
want, and I can divide them up in any way I want. The lost parameters are
irrelevant since they are implied in the stateless resumptionToken.

This isn't an ideal example for demonstrating the problem with deleted
records, but it might convince people that OAI isn't as inherently limited
as they assume.

Jeff

